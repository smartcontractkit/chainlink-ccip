---
version: v2beta1
name: cre-enterprise-sandbox

vars:
  CHAINLINK_CODE_DIR:
    source: env
  CRIB_DIR: $(git rev-parse --show-toplevel 2>/dev/null)
  DEPENDENCIES_DIR:
    source: env
    default: "${CRIB_DIR}/dependencies"
  DEVSPACE_ENV_FILE:
    source: env
    default: .env
  IMPORTS_DIR:
    source: env
    default: "${CRIB_DIR}/imports"
  PROVIDER:
    source: all
    default: "aws"
  SCRIPTS_DIR:
    source: env
    default: "${CRIB_DIR}/scripts"
  TMP_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/ccip-v2/.tmp"
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  DON_TYPE:
    source: env
    default: ccip
  DON_VERSION:
    source: env
    default: ccip-dev
  DON_TYPE_CRE:
    source: env
    default: cre
  DON_VERSION_CRE:
    source: env
    default: latest
  CCIP_TOOLING_VERSION:
    source: env
    default: v2
  DON_NODE_COUNT:
    source: env
    default: 4
  DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  GETH_CHAINS_COUNT:
    source: env
    default: 0
  BESU_CHAINS_COUNT:
    source: env
    default: 2
  SOLANA_CHAINS_COUNT:
    source: env
    default: 0
  ENABLE_MONITORING:
    source: env
    default: false
  CHAINLINK_PRODUCT:
    source: env
    default: ccip
  DON_GATEWAY_NODE_COUNT:
    source: env
    default: 0
  DON_GATEWAY_NODE_COUNT_CRE:
    source: env
    default: 1

imports:
  - path: ${IMPORTS_DIR}/lib-common
  - path: ${IMPORTS_DIR}/lib-aws
  - path: ${IMPORTS_DIR}/lib-kind

pipelines:
  chain-alpha:
    run: |-
      run_dependency_pipelines chain-alpha
      run_dependency_pipelines blockscout
      run_pipelines ingress-check

  chain-beta:
    run: |-
      run_dependency_pipelines chain-beta
      run_dependency_pipelines blockscout
      run_pipelines ingress-check

  ccip:
    run: |-
      run_dependency_pipelines ccip-don
      crib devspace ingress-check --nsTimeout=2m --timeout=4m

  ccip-infra-only:
    run: |-
      run_dependency_pipelines ccip-don --set-flag infraOnly="true"
      crib devspace ingress-check --nsTimeout=2m --timeout=4m
  cre-don:
    run: |-
      run_dependency_pipelines cre-don
  cre-don-gateway:
    run: |-
      run_dependency_pipelines cre-don-gateway

profiles:
  - name: chain-alpha
    patches:
      - op: add
        path: dependencies
        value:
          chain-alpha:
            path: ${DEPENDENCIES_DIR}/besu/devspace.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
      - op: add
        path: vars
        value:
          CHAIN_NAME:
            source: env
            default: "alpha"
          CHAIN_ID:
            source: env
            default: 1337
          NAMESPACE:
            source: env
            default: "chain-alpha"
          CRIB_EKS_CLUSTER_NAME: "main-fwog"
      - op: add
        path: dependencies
        value:
          blockscout:
            path: ${DEPENDENCIES_DIR}/blockscout/devspace.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}

  - name: chain-beta
    patches:
      - op: add
        path: dependencies
        value:
          chain-beta:
            path: ${DEPENDENCIES_DIR}/besu/devspace.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
      - op: add
        path: vars
        value:
          CHAIN_NAME:
            source: env
            default: "beta"
          CHAIN_ID:
            source: env
            default: 2337
          NAMESPACE:
            source: env
            default: "chain-beta"
          CRIB_EKS_CLUSTER_NAME: "main-fwog"
          INGRESS_CLASS_NAME: "alb"
      - op: add
        path: dependencies
        value:
          blockscout:
            path: ${DEPENDENCIES_DIR}/blockscout/devspace.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}

  - name: ccip
    patches:
      - op: add
        path: dependencies
        value:
          ccip-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy-ccip-v2
            profiles:
              - network-besu-chain-alpha
              - network-besu-chain-beta
              - version-from-env
      - op: add
        path: vars
        value:
          ENV: sandbox

  - name: cre
    patches:
      - op: add
        path: dependencies
        value:
          cre-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy
            profiles:
              - network-besu-chain-alpha
              - network-besu-chain-beta
              - version-from-env
      - op: replace
        path: vars
        value:
          DON_TYPE: ${DON_TYPE_CRE}
          DON_VERSION: ${DON_VERSION_CRE}
      - op: add
        path: vars
        value:
          ENV: sandbox

  - name: cre-gateway
    patches:
      - op: add
        path: dependencies
        value:
          cre-don-gateway:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy
            profiles:
              - version-from-env
      - op: replace
        path: vars
        value:
          DON_TYPE: gateway
          DON_VERSION: ${DON_VERSION_CRE}
          DON_BOOT_NODE_COUNT: 0
      - op: add
        path: vars
        value:
          ENV: sandbox
          DON_NODE_COUNT: 1

commands:
  blockchain:
    command: |-
      devspace run-pipeline chain-alpha -p chain-alpha
      devspace run-pipeline chain-beta -p chain-beta
    description: Deploy Besu blockchains
    appendArgs: true
  chain-alpha:
    command: devspace run-pipeline chain-alpha -p chain-alpha
    description: Deploy alpha Besu chain
    appendArgs: true
  chain-beta:
    command: devspace run-pipeline chain-beta -p chain-beta
    description: Deploy beta Besu chain
    appendArgs: true
  ccip:
    command: devspace run-pipeline ccip -p ccip
    description: Deploy CCIP v1.6 DON with full on-chain configuration
    appendArgs: true
  ccip-infra:
    command: devspace run-pipeline ccip-infra-only -p ccip
    description: Deploy CCIP v1.6 DON infrastructure only (no on-chain deployment)
    appendArgs: true
  cre:
    command: |-
      devspace run-pipeline cre-don -p cre
      devspace run-pipeline cre-don-gateway -p cre-gateway
    description: Deploy the Chainlink workflow/capability CRE DON infrastructure with a gateway node
    appendArgs: true
  uninstall:
    command: |-
      if [ -z "$1" ]; then
        echo "Usage: devspace run-command uninstall <component>. Available components: chain-alpha, chain-beta, ccip, cre"
        exit 1
      fi
      case "$1" in
        chain-alpha)
          namespace="chain-alpha"
          ;;
        chain-beta)
          namespace="chain-beta"
          ;;
        ccip)
          namespace="ccip"
          ;;
        cre)
          namespace="chainlink"
          ;;
        *)
          echo "Invalid component: $1. Available components: chain-alpha, chain-beta, ccip, cre"
          exit 1
          ;;
      esac
      releases=$(helm list -n $namespace -q)
      if [ -z "$releases" ]; then
        echo "No releases found in namespace $namespace."
        exit 0
      fi
      echo "The following releases will be uninstalled from namespace $namespace:"
      echo "$releases"
      read -p "Are you sure you want to uninstall $1? (y/N): " confirm
      if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
        echo "$releases" | xargs helm uninstall -n $namespace
      else
        echo "Uninstallation cancelled."
      fi
    description: Use Helm uninstall to remove a component, instead of devspace purge command that removes the namespace
