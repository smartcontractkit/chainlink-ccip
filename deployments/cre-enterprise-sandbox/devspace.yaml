---
version: v2beta1
name: cre-enterprise-sandbox

vars:
  CHAINLINK_CODE_DIR:
    source: env
  CRIB_DIR: $(git rev-parse --show-toplevel 2>/dev/null)
  DEPENDENCIES_DIR:
    source: env
    default: "${CRIB_DIR}/dependencies"
  DEVSPACE_ENV_FILE:
    source: env
    default: .env
  IMPORTS_DIR:
    source: env
    default: "${CRIB_DIR}/imports"
  PROVIDER:
    source: all
    default: "aws"
  SCRIPTS_DIR:
    source: env
    default: "${CRIB_DIR}/scripts"
  TMP_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/ccip-v2/.tmp"
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  DON_TYPE:
    source: env
    default: ccip
  DON_VERSION:
    source: env
    default: ccip-dev
  DON_TYPE_CRE:
    source: env
    default: cre
  DON_VERSION_CRE:
    source: env
    default: latest
  CCIP_TOOLING_VERSION:
    source: env
    default: v2
  DON_NODE_COUNT:
    source: env
    default: 4
  DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  GETH_CHAINS_COUNT:
    source: env
    default: 0
  BESU_CHAINS_COUNT:
    source: env
    default: 2
  SOLANA_CHAINS_COUNT:
    source: env
    default: 0
  ENABLE_MONITORING:
    source: env
    default: false
  CHAINLINK_PRODUCT:
    source: env
    default: ccip
  HOST_NAME:
    source: env
    default: main.stage.cldev.sh
  AWS_ACM_CERT_ARN:
    source: env
    default: ""

imports:
  - path: ${IMPORTS_DIR}/lib-common
  - path: ${IMPORTS_DIR}/lib-aws
  - path: ${IMPORTS_DIR}/lib-kind

pipelines:

  cluster-services:
    run: |-
      run_dependency_pipelines tempo
      run_dependency_pipelines beholder-gateway
      run_dependency_pipelines minio-operator
      run_dependency_pipelines minio-tenant

  blockchain:
    run: |-
      run_dependency_pipelines chain-alpha
      run_dependency_pipelines chain-alpha-blockscout
      run_dependency_pipelines chain-beta
      run_dependency_pipelines chain-beta-blockscout
      # run_pipelines ingress-check

  blockchain-alpha:
    run: |-
      run_dependency_pipelines chain-alpha
      run_dependency_pipelines chain-alpha-blockscout
      # run_pipelines ingress-check

  blockchain-beta:
    run: |-
      run_dependency_pipelines chain-beta
      run_dependency_pipelines chain-beta-blockscout
      # run_pipelines ingress-check

  chainlink:
    run: |-
      run_dependency_pipelines ccip
      run_dependency_pipelines cre

  chainlink-ccip:
    run: |-
      run_dependency_pipelines ccip
      # crib devspace ingress-check --nsTimeout=2m --timeout=4m

  chainlink-ccip-infra:
    run: |-
      run_dependency_pipelines ccip --set-flag infraOnly="true"
      # crib devspace ingress-check --nsTimeout=2m --timeout=4m

  chainlink-cre:
    run: |-
      run_dependency_pipelines cre

profiles:
  ## cluster-services

  - name: cluster-services-tempo
    patches:
      - op: add
        path: dependencies
        value:
          tempo:
            path: ${DEPENDENCIES_DIR}/daas/cluster-services-tempo.yaml
            overwriteVars: true
            namespace: prometheus
            pipeline: deploy
            vars:
              NAMESPACE: prometheus
              TEMPO_NAME: tempo
              TEMPO_PVC_SIZE: 30Gi
              TEMPO_RETENTION: 720h # 30d
            profiles: [enable-persistence]

  - name: cluster-services-beholder-gateway
    patches:
      - op: add
        path: dependencies
        value:
          beholder-gateway:
            path: ${DEPENDENCIES_DIR}/daas/cluster-services-otel-collector.yaml
            overwriteVars: true
            namespace: prometheus
            pipeline: deploy
            vars:
              NAMESPACE: prometheus
              OTEL_COLLECTOR_NAME: beholder-gateway
            profiles: [use-beholder-image]

  - name: cluster-services-minio-operator
    patches:
      - op: add
        path: dependencies
        value:
          minio-operator:
            path: ${DEPENDENCIES_DIR}/daas/cluster-services-minio-operator.yaml
            overwriteVars: true
            namespace: minio
            pipeline: deploy
            vars:
              NAMESPACE: minio
            profiles: []

  - name: cluster-services-minio-tenant
    patches:
      - op: add
        path: dependencies
        value:
          minio-tenant:
            path: ${DEPENDENCIES_DIR}/daas/cluster-services-minio-tenant.yaml
            overwriteVars: true
            namespace: minio
            pipeline: deploy
            vars:
              NAMESPACE: minio
              HOST_NAME: ${HOST_NAME}
              AWS_ACM_CERT_ARN: ${AWS_ACM_CERT_ARN}
              PROVIDER: ${PROVIDER}
            profiles: []

  - name: cluster-services
    parents:
      - profile: cluster-services-tempo
      - profile: cluster-services-beholder-gateway
      - profile: cluster-services-minio-operator
      - profile: cluster-services-minio-tenant

  ## blockchains

  - name: blockchain-alpha
    patches:
      - op: add
        path: dependencies
        value:
          chain-alpha:
            path: ${DEPENDENCIES_DIR}/besu/devspace.yaml
            overwriteVars: true
            namespace: chain-alpha
            vars:
              CHAIN_NAME: alpha
              CHAIN_ID: 1337
              NAMESPACE: chain-alpha
              INGRESS_CLASS_NAME: alb
      - op: add
        path: dependencies
        value:
          chain-alpha-blockscout:
            path: ${DEPENDENCIES_DIR}/blockscout/devspace.yaml
            overwriteVars: true
            namespace: chain-alpha
            vars:
              CHAIN_NAME: alpha
              CHAIN_ID: 1337
              NAMESPACE: chain-alpha
              INGRESS_CLASS_NAME: alb
              CRIB_EKS_CLUSTER_NAME: "main-fwog"

  - name: blockchain-beta
    patches:
      - op: add
        path: dependencies
        value:
          chain-beta:
            path: ${DEPENDENCIES_DIR}/besu/devspace.yaml
            overwriteVars: true
            namespace: chain-beta
            vars:
              CHAIN_NAME: beta
              CHAIN_ID: 2337
              NAMESPACE: chain-beta
              INGRESS_CLASS_NAME: alb
      - op: add
        path: dependencies
        value:
          chain-beta-blockscout:
            path: ${DEPENDENCIES_DIR}/blockscout/devspace.yaml
            overwriteVars: true
            namespace: chain-beta
            vars:
              CHAIN_NAME: beta
              CHAIN_ID: 2337
              NAMESPACE: chain-beta
              INGRESS_CLASS_NAME: alb
              CRIB_EKS_CLUSTER_NAME: "main-fwog"

  - name: blockchain
    parents:
      - profile: blockchain-alpha
      - profile: blockchain-beta

  ## chainlink dons

  - name: chainlink-don-ccip
    patches:
      - op: add
        path: dependencies
        value:
          ccip:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ccip
            pipeline: deploy-ccip-v2
            profiles:
              - network-besu-chain-alpha
              - network-besu-chain-beta
              - version-from-env
            vars:
              DON_TYPE: ${DON_TYPE}
              DON_VERSION: ${DON_VERSION}
              ENV: sandbox

  - name: chainlink-don-cre
    patches:
      - op: add
        path: dependencies
        value:
          cre:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: cre
            pipeline: deploy
            profiles:
              - network-besu-chain-alpha
              - network-besu-chain-beta
              - version-from-env
            vars:
              DON_TYPE: ${DON_TYPE_CRE}
              DON_VERSION: ${DON_VERSION_CRE}
              ENV: sandbox

  - name: chainlink
    parents:
      - profile: chainlink-don-ccip
      - profile: chainlink-don-cre

commands:
  cluster-services:
    command: devspace run-pipeline cluster-services -p cluster-services
    description: Deploy cluster services
    appendArgs: true
  blockchain:
    command: devspace run-pipeline blockchain -p blockchain
    description: Deploy Besu blockchains
    appendArgs: true
  blockchain-alpha:
    command: devspace run-pipeline blockchain-alpha -p blockchain
    description: Deploy alpha Besu chain
    appendArgs: true
  blockchain-beta:
    command: devspace run-pipeline blockchain-beta -p blockchain
    description: Deploy beta Besu chain
    appendArgs: true
  chainlink:
    command: devspace run-pipeline chainlink -p chainlink
    description: Deploy ccip / cre
    appendArgs: true
  chainlink-ccip:
    command: devspace run-pipeline chainlink-ccip -p chainlink
    description: Deploy CCIP v1.6 DON with full on-chain configuration
    appendArgs: true
  chainlink-ccip-infra:
    command: devspace run-pipeline chainlink-ccip-infra -p chainlink
    description: Deploy CCIP v1.6 DON infrastructure only (no on-chain deployment)
    appendArgs: true
  chainlink-cre:
    command: devspace run-pipeline cre -p chainlink
    description: Deploy the Chainlink workflow/capability CRE DON infrastructure with a gateway node
    appendArgs: true
  uninstall:
    command: |-
      if [ -z "$1" ]; then
        echo "Usage: devspace run-command uninstall <component>. Available components: chain-alpha, chain-beta, ccip, cre"
        exit 1
      fi
      case "$1" in
        chain-alpha)
          namespace="chain-alpha"
          ;;
        chain-beta)
          namespace="chain-beta"
          ;;
        ccip)
          namespace="ccip"
          ;;
        cre)
          namespace="chainlink"
          ;;
        *)
          echo "Invalid component: $1. Available components: chain-alpha, chain-beta, ccip, cre"
          exit 1
          ;;
      esac
      releases=$(helm list -n $namespace -q)
      if [ -z "$releases" ]; then
        echo "No releases found in namespace $namespace."
        exit 0
      fi
      echo "The following releases will be uninstalled from namespace $namespace:"
      echo "$releases"
      read -p "Are you sure you want to uninstall $1? (y/N): " confirm
      if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
        echo "$releases" | xargs helm uninstall -n $namespace
      else
        echo "Uninstallation cancelled."
      fi
    description: Use Helm uninstall to remove a component, instead of devspace purge command that removes the namespace
