version: v2beta1
name: chainlink

vars:
  CRIB_DIR: $(git rev-parse --show-toplevel 2>/dev/null)
  SCRIPTS_DIR:
    source: env
    default: "${CRIB_DIR}/scripts"
  DEVSPACE_ENV_FILE: .env
  DEPENDENCIES_DIR:
    source: env
    default: "${CRIB_DIR}/dependencies"
  IMPORTS_DIR:
    source: env
    default: "${CRIB_DIR}/imports"
  TMP_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/cre/.tmp"
  # "The provider being used to deploy CRIB"
  PROVIDER:
    source: all
    default: "aws"
  CHAINLINK_CODE_DIR:
    source: env
    default: "../../.."
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  DON_TYPE:
    source: env
    default: base
  DON_VERSION:
    source: env
    default: latest
  WORKFLOW_DON_NODE_COUNT:
    source: env
    default: 2
  WORKFLOW_DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  CAPABILITY_DON_NODE_COUNT:
    source: env
    default: 4
  CAPABILITY_DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  # DON_NODE_COUNT:
  #   source: env
  #   default: 4
  # DON_BOOT_NODE_COUNT:
  #   source: env
  #   default: 1
  GETH_CHAINS_COUNT:
    source: env
    default: 1
  CHAINLINK_PRODUCT:
    source: env
    default: chainlink
  CRE_CONFIG_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/cre/.tmp/config"

imports:
  - path: ${IMPORTS_DIR}/lib-common
  - path: ${IMPORTS_DIR}/lib-aws
  - path: ${IMPORTS_DIR}/lib-kind

pipelines:
  maybe-kind:
    run: |-
      if [ "$PROVIDER" == "kind" ]; then
        run_dependency_pipelines kind-core
        if [ "$ENABLE_MONITORING" == "true" ]; then
          run_dependency_pipelines kind-monitoring
        fi
      fi
  chains:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines geth-chains
      crib devspace ingress-check --nsTimeout=2m --timeout=4m
  all-dons:
    run: |-
      run_pipelines maybe-kind

      echo "Workflow DON bootstrap/worker node count: $WORKFLOW_DON_BOOT_NODE_COUNT/$WORKFLOW_DON_NODE_COUNT"

      if { [[ "$WORKFLOW_DON_NODE_COUNT" =~ ^[0-9]+$ ]] && [ "$WORKFLOW_DON_NODE_COUNT" -gt 0 ]; } || { [[ "$WORKFLOW_DON_BOOT_NODE_COUNT" =~ ^[0-9]+$ ]] && [ "$WORKFLOW_DON_BOOT_NODE_COUNT" -gt 0 ]; }; then
       run_dependency_pipelines workflow-don
      fi

      echo "Capability DON bootstrap/worker node count: $CAPABILITY_DON_BOOT_NODE_COUNT/$CAPABILITY_DON_NODE_COUNT"

      if { [[ "$CAPABILITY_DON_NODE_COUNT" =~ ^[0-9]+$ ]] && [ "$CAPABILITY_DON_NODE_COUNT" -gt 0 ]; } || { [[ "$CAPABILITY_DON_BOOT_NODE_COUNT" =~ ^[0-9]+$ ]] && [ "$CAPABILITY_DON_BOOT_NODE_COUNT" -gt 0 ]; }; then
        run_dependency_pipelines capability-don
      fi

      run_dependency_pipelines job-distributor
  workflow-don:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines workflow-don
  capability-don:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines capability-don
  jd:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines job-distributor
profiles:
  - name: chains
    patches:
      - op: add
        path: dependencies
        value:
          geth-chains:
            path: ${DEPENDENCIES_DIR}/geth-v2
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            vars:
              CHAINS_COUNT: ${GETH_CHAINS_COUNT}
              ENABLE_DON_BASE: "false"
  - name: dons
    patches:
      - op: add
        path: dependencies
        value:
          workflow-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy
            profiles:
              - version-from-env
              # - network-generated
            vars:
              DON_NODE_COUNT: ${WORKFLOW_DON_NODE_COUNT}
              DON_BOOT_NODE_COUNT: ${WORKFLOW_DON_BOOT_NODE_COUNT}
              DON_TYPE: workflow
          capability-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy
            profiles:
              - version-from-env
              # - network-generated
            vars:
              DON_NODE_COUNT: ${CAPABILITY_DON_NODE_COUNT}
              DON_BOOT_NODE_COUNT: ${CAPABILITY_DON_BOOT_NODE_COUNT}
              DON_TYPE: capability
          job-distributor:
            path: ${DEPENDENCIES_DIR}/job-distributor
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}-jd

  - name: kind
    patches:
      - op: add
        path: dependencies
        value:
          kind-core:
            path: ${DEPENDENCIES_DIR}/kind-core
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
          kind-monitoring:
            path: ${DEPENDENCIES_DIR}/kind-monitoring
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
  - name: aws
    patches:
      - op: add
        path: dependencies.ccip-don.profiles
        value: monitoring-service-monitor

commands:
  deploy-chains:
    command: devspace run-pipeline chains -p chains -p ${PROVIDER}
    description: Deploy all chains
    appendArgs: true
  deploy-workflow-don:
    command: devspace run-pipeline workflow-don -p dons -p ${PROVIDER}
    description: Deploy first DON
    appendArgs: true
  deploy-capability-don:
    command: devspace run-pipeline capability-don -p dons -p ${PROVIDER}
    description: Deploy second DON
    appendArgs: true
  deploy-jd:
    command: devspace run-pipeline jd -p dons -p ${PROVIDER}
    description: Deploy JD
    appendArgs: true
  deploy-dons:
    command: devspace run-pipeline all-dons -p dons -p ${PROVIDER}
    description: Deploy all DONs
    appendArgs: true
