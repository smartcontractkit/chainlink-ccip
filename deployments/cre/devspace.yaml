version: v2beta1
name: chainlink

vars:
  CRIB_DIR: $(git rev-parse --show-toplevel 2>/dev/null)
  SCRIPTS_DIR:
    source: env
    default: "${CRIB_DIR}/scripts"
  DEVSPACE_ENV_FILE: .env
  DEPENDENCIES_DIR:
    source: env
    default: "${CRIB_DIR}/dependencies"
  IMPORTS_DIR:
    source: env
    default: "${CRIB_DIR}/imports"
  TMP_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/cre/.tmp"
  # "The provider being used to deploy CRIB"
  PROVIDER:
    source: all
    default: "aws"
  CHAINLINK_CODE_DIR:
    source: env
    default: "../../.."
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  DON_TYPE:
    source: env
    default: base
  DON_VERSION:
    source: env
    default: latest
  DON_NODE_COUNT:
    source: env
    default: 4
  DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  GETH_CHAINS_COUNT:
    source: env
    default: 1
  CHAINLINK_PRODUCT:
    source: env
    default: chainlink
  CRE_CONFIG_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/cre/.tmp/config"
  JOB_DISTRIBUTOR_IMAGE_TAG:
    source: env
    default: 0.9.0

imports:
  - path: ${IMPORTS_DIR}/lib-common
  - path: ${IMPORTS_DIR}/lib-aws
  - path: ${IMPORTS_DIR}/lib-kind

pipelines:
  maybe-kind:
    run: |-
      if [ "$PROVIDER" == "kind" ]; then
        run_dependency_pipelines kind-core
        if [ "$ENABLE_MONITORING" == "true" ]; then
          run_dependency_pipelines kind-monitoring
        fi
      fi
  chain:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines geth-chain
      crib devspace ingress-check --nsTimeout=2m --timeout=4m
  don:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines don
  jd:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines job-distributor
profiles:
  - name: chains
    patches:
      - op: add
        path: dependencies
        value:
          geth-chain:
            path: ${DEPENDENCIES_DIR}/geth-v2
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            vars:
              CHAINS_COUNT: 1
              ENABLE_DON_BASE: "false"
              CHAIN_OVERRIDES_FILENAME: ${CRE_CONFIG_DIR}/chain-overrides.yaml

  - name: custom_chain
    patches:
      - op: add
        path: dependencies
        value:
          geth-chain:
            path: ${DEPENDENCIES_DIR}/geth-v2
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            vars:
              ENABLE_DON_BASE: "false"
              CHAIN_ID: 2337
              ENABLE_BASE_PROFILE: "false"
              ENABLE_CUSTOM_CHAIN: "true"
              LOCAL_TEMPLATES_DIR: ${DEPENDENCIES_DIR}/geth-v2/templates

  - name: dons
    patches:
      - op: add
        path: dependencies
        value:
          don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            pipeline: deploy
            profiles:
              - version-from-env
            vars:
              DON_TYPE: workflow
          job-distributor:
            path: ${DEPENDENCIES_DIR}/job-distributor
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}-jd

  - name: kind
    patches:
      - op: add
        path: dependencies
        value:
          kind-core:
            path: ${DEPENDENCIES_DIR}/kind-core
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
          kind-monitoring:
            path: ${DEPENDENCIES_DIR}/kind-monitoring
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
  - name: aws
    patches:
      - op: add
        path: dependencies.ccip-don.profiles
        value: monitoring-service-monitor

commands:
  deploy-geth-chain:
    command: devspace run-pipeline geth-chain -p chains -p ${PROVIDER}
    description: Deploy a single Geth chain
    appendArgs: true
  deploy-custom-chain:
    command: devspace run-pipeline geth-chain -p custom_chain -p ${PROVIDER}
    description: Deploy a single Geth chain
    appendArgs: true
  deploy-jd:
    command: devspace run-pipeline jd -p dons -p ${PROVIDER}
    description: Deploy JD
    appendArgs: true
  deploy-dons:
    command: devspace run-pipeline don -p dons -p ${PROVIDER}
    description: Deploy a single DONs
    appendArgs: true
