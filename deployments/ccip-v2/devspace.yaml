version: v2beta1
name: chainlink

vars:
  CRIB_DIR: $(git rev-parse --show-toplevel 2>/dev/null)
  SCRIPTS_DIR:
    source: env
    default: "${CRIB_DIR}/scripts"
  DEVSPACE_ENV_FILE: .env
  DEPENDENCIES_DIR:
    source: env
    default: "${CRIB_DIR}/dependencies"
  IMPORTS_DIR:
    source: env
    default: "${CRIB_DIR}/imports"
  TMP_DIR:
    source: env
    default: "${CRIB_DIR}/deployments/ccip-v2/.tmp"
  # "The provider being used to deploy CRIB"
  PROVIDER:
    source: all
    default: "aws"
  CHAINLINK_CODE_DIR:
    source: env
    default: "../../.."
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  DON_TYPE:
    source: env
    default: ccip
  DON_VERSION:
    source: env
    default: ccip-dev
  CCIP_TOOLING_VERSION:
    source: env
    default: v2
  DON_NODE_COUNT:
    source: env
    default: 4
  DON_BOOT_NODE_COUNT:
    source: env
    default: 1
  ADDITIONAL_CHAINS_COUNT:
    source: env
    default: 0
  ENABLE_MONITORING:
    source: env
    default: false
imports:
  - path: ${IMPORTS_DIR}/lib-common
  - path: ${IMPORTS_DIR}/lib-aws
  - path: ${IMPORTS_DIR}/lib-kind

pipelines:
  maybe-kind:
    run: |-
      if [ "$PROVIDER" == "kind" ]; then
        run_dependency_pipelines kind-core
        if [ "$ENABLE_MONITORING" == "true" ]; then
          run_dependency_pipelines kind-monitoring
        fi
      fi
  ccip-v2:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines geth
      crib devspace ingress-check --nsTimeout=2m --timeout=4m

      # Deploy CCIP enabled fully configured DON
      run_dependency_pipelines ccip-don
      crib devspace ingress-check --nsTimeout=2m --timeout=4m
  ccip-v2-infra-only:
    run: |-
      run_pipelines maybe-kind

      run_dependency_pipelines geth
      crib devspace ingress-check --nsTimeout=2m --timeout=4m

      # Deploy CCIP enabled fully configured DON
      run_dependency_pipelines ccip-don --set-flag infraOnly="true"
      crib devspace ingress-check --nsTimeout=2m --timeout=4m
  # Pipeline without any steps that would break --render flag
  ccip-v2-infra-only-render:
    run: |-
      run_pipelines maybe-kind
      run_dependency_pipelines geth
      run_dependency_pipelines ccip-don --set-flag infraOnly="true"
  geth:
    run: |-
      if [ "$PROVIDER" == "kind" ]; then
        run_dependency_pipelines kind-core
      fi

      run_dependency_pipelines geth
  debug-gap:
    run: |-
      run_dependency_pipelines geth
      task ccip-v2-scripts:build
      run_dependency_pipelines ccip-v2-scripts --pipeline deploy-home-chain-contracts
  ccip-v2-scripts-home-chain:
    run: |-
      run_dependency_pipelines ccip-v2-scripts --pipeline deploy-home-chain-contracts
  ccip-v2-scripts-deploy-ccip:
    run: |-
      run_dependency_pipelines ccip-v2-scripts --pipeline deploy-ccip
  job-distributor:
    run: |-
      run_dependency_pipelines job-distributor
profiles:
  - name: kind
    activation:
      - vars:
          PROVIDER: "kind"
    patches:
      - op: add
        path: dependencies
        value:
          kind-core:
            path: ${DEPENDENCIES_DIR}/kind-core
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
          kind-monitoring:
            path: ${DEPENDENCIES_DIR}/kind-monitoring
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
  - name: ccip-v2-scripts
    patches:
      - op: add
        path: dependencies
        value:
          ccip-v2-scripts:
            path: ${DEPENDENCIES_DIR}/ccip-v2-scripts
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
  - name: debug-gap
    patches:
      - op: add
        path: dependencies
        value:
          ccip-v2-scripts:
            path: ${DEPENDENCIES_DIR}/ccip-v2-scripts
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
          geth:
            path: ${DEPENDENCIES_DIR}/geth
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            profiles:
              - ccip
  - name: job-distributor
    patches:
      - op: add
        path: dependencies
        value:
          job-distributor:
            path: ${DEPENDENCIES_DIR}/job-distributor
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
  - name: default
    patches:
      - op: add
        path: dependencies
        value:
          geth:
            path: ${DEPENDENCIES_DIR}/geth
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            profiles:
              - ccip
              - ccip-v2-load-tests
              - additional-chains
          ccip-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            profiles:
              - version-from-env
              - network-geth-chain-1337
              - network-geth-chain-2337
              - network-additional-geth-chains
  - name: load-tests
    patches:
      - op: add
        path: dependencies
        value:
          geth:
            path: ${DEPENDENCIES_DIR}/geth
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            profiles:
              - ccip
              - ccip-v2-load-tests
              - additional-chains
              # Use ccip-v2-load-tests to customize blocktime parameter for individual geth network
              # - ccip-v2-load-tests-customized-networks
          ccip-don:
            path: ${DEPENDENCIES_DIR}/donut/chainlink-don.yaml
            overwriteVars: true
            namespace: ${DEVSPACE_NAMESPACE}
            profiles:
              - version-from-env
              - network-geth-chain-1337
              - network-geth-chain-2337
              - network-additional-geth-chains
              # Use network-generated to customize parameters for individual geth network
              # - network-generated
  - name: default-aws
    parents:
      - profile: default
    patches:
      - op: add
        path: dependencies.ccip-don.profiles
        value: monitoring-service-monitor
  - name: load-tests-aws
    parents:
      - profile: load-tests
    patches:
      - op: add
        path: dependencies.ccip-don.profiles
        value: monitoring-service-monitor
      - op: add
        path: dependencies.ccip-don.profiles
        value: ccip-load-testing-aws-staging

commands:
  ccip-v2-kind:
    command: devspace run-pipeline ccip-v2 -p default
    description: Run the ccip v2 pipeline.
    appendArgs: true
  ccip-v2-aws:
    command: devspace run-pipeline ccip-v2 -p default-aws
    description: Run the ccip v2 pipeline.
    appendArgs: true
  ccip-v2-load-tests-aws:
    command: devspace run-pipeline ccip-v2 -p load-tests
    description: Run the ccip v2 pipeline.
    appendArgs: true
  ccip-v2-infra:
    command: devspace run-pipeline ccip-v2-infra-only -p default
    description: Run the ccip v2 pipeline without onchain deployment, just infra.
    appendArgs: true
  ccip-v2-infra-render:
    command: devspace run-pipeline ccip-v2-infra-only-render --render
    description: Render infra components, pass desired profile via -p flag
    appendArgs: true
  deploy-dashboard:
    command: crib dashboard deploy --product=ccip
    description: Deploy Grafana Dashboards
    appendArgs: true
  geth:
    command: devspace run-pipeline geth -p default
    description: Run the ccip v2 pipeline.
    appendArgs: true
  debug-gap:
    command: devspace run-pipeline debug-gap -p debug-gap
    description: Run the ccip v2 pipeline.
    appendArgs: true
  job-distributor:
    command: devspace run-pipeline job-distributor -p job-distributor
    description: Run the job-distributor pipeline.
    appendArgs: true
  deploy-home-chain:
    command: devspace -p ccip-v2-scripts run-pipeline ccip-v2-scripts-home-chain
    description: Deploy CCIP Contracts and Add lanes.
    appendArgs: true
  deploy-ccip-contracts:
    command: devspace -p ccip-v2-scripts run-pipeline ccip-v2-scripts-deploy-ccip
    description: Deploy CCIP Contracts and Add lanes.
    appendArgs: true
  purge:
    command: |
      rm -f ${TMP_DIR}/*
      devspace purge
    description: Cleanup temp files and purge devspace env
