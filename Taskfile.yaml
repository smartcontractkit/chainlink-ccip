---
version: '3'

tasks:
  lint:
    desc: Runs The same lint commands as in CI, doesn't fix errors
    deps: [lint-yaml, shfmt, shellcheck]
  fix-lint-errors:
    desc: Fixes lint errors, so far it supports shfmt fixes only
    deps: [fix-shfmt-errors]
  lint-yaml:
    cmd: yamllint -c .yamllint.yml .
  # todo: Add script for auto fixing lint errors
  shfmt:
    cmd: shfmt -s -d .
  shellcheck:
    cmd: git ls-files -- '*.sh' | xargs shellcheck -e SC1004
  fix-shfmt-errors:
    vars:
      SHELLCHECK_OPTS: -e SC1004
    cmd: find . -type f -name "*.sh" -exec shfmt -w {} \;

  # cli tasks
  build:
    desc: Builds the crib CLI
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go build -C ./cli -o $GOBIN/crib

  fetch-cli:
    desc: Downloads the crib binary from the corresponding tag-based release in GitHub when applicable, otherwise uses latest
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: |
      # if on a tagged ref, uses the corresponding release instead of latest
      CLI_RELEASE=$(git tag --points-at HEAD | tail -n 1)

      if [ -n "$CLI_RELEASE" ]; then
        echo "Fetching crib CLI binary from release $CLI_RELEASE"
      else
        echo "Fetching crib CLI binary from latest release"
      fi

      checksums=$(mktemp)
      gh release download $CLI_RELEASE --repo smartcontractkit/crib --pattern "checksums.txt" --clobber -O $checksums

      if [ -f $GOBIN/crib ]; then
        expected_checksum=$(grep "crib-{{OS}}-{{ARCH}}" "$checksums" | cut -d ' ' -f 1)
        actual_checksum=$(sha256sum $GOBIN/crib | cut -d ' ' -f 1)
        if [ "$expected_checksum" = "$actual_checksum" ]; then
          chmod +x $GOBIN/crib
          echo "Current crib binary is up to date"
          rm -f $checksums
          exit 0
        fi
      fi

      gh release download $CLI_RELEASE --repo smartcontractkit/crib --pattern "crib-{{OS}}-{{ARCH}}" --clobber -O $GOBIN/crib
      chmod +x $GOBIN/crib
      rm -f $checksums

  setup:
    desc: Sets up the crib CLI in the current environment
    dir: '{{.USER_WORKING_DIR}}'
    vars:
      REPO_ROOT:
        sh: git rev-parse --show-toplevel
    cmd: crib init --write-config

  test:
    desc: Run unit tests for cli module
    dir: cli
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go test ./...

  # ccip-v2-scripts tasks
  ccip-v2-scripts:build:
    desc: Build dependencies/ccip-v2-scripts go module
    dir: dependencies/ccip-v2-scripts
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go build -o $GOBIN/ccip-v2-scripts .
  ccip-v2-scripts:test:
    desc: Test dependencies/ccip-v2-scripts go module
    dir: dependencies/ccip-v2-scripts
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go test ./...
  ccip-v2-scripts:lint:
    desc: Go Lint ccip-v2-scripts module
    dir: dependencies/ccip-v2-scripts
    cmd: golangci-lint run --path-prefix=./dependencies/ccip-v2-scripts
  ccip-v2-scripts:lint-fix-gci:
    desc: Fix gci errors
    dir: dependencies/ccip-v2-scripts
    cmds:
      - gci write -s standard -s default -s "prefix(github.com/smartcontractkit/crib/ccip-v2-scripts)" .
  ccip-v2-scripts:lint-fix-gofumpt:
    desc: Fix gofumpt errors
    dir: dependencies/ccip-v2-scripts
    cmds:
      - find . -name '*.go' -exec gofumpt -w {} +
  ccip-v2-scripts:fix-all:
    desc: Fix all possible lint errors
    deps:
      - ccip-v2-scripts:lint-fix-gci
      - ccip-v2-scripts:lint-fix-gofumpt
  # sdk-build
  sdk:build:
    desc: Build sdk go module
    dir: sdk
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go build ./...
  sdk:test:
    desc: Test sdk go module
    dir: sdk
    env:
      GOPATH:
        sh: go env GOPATH
      GOBIN:
        sh: echo ${GOBIN:-$(go env GOPATH)/bin}
    cmd: go test ./...
  sdk:lint:
    desc: Go Lint sdk module
    dir: sdk
    cmd: golangci-lint run --path-prefix=./sdk
  sdk:lint-fix-gci:
    desc: Fix gci errors
    dir: sdk
    cmds:
      - gci write -s standard -s default -s "prefix(github.com/smartcontractkit/crib/sdk)" .
  sdk:lint-fix-gofumpt:
    desc: Fix gofumpt errors
    dir: sdk
    cmds:
      - find . -name '*.go' -exec gofumpt -w {} +
  sdk:fix-all:
    desc: Fix all possible lint errors
    deps:
      - sdk:lint-fix-gci
      - sdk:lint-fix-gofumpt
