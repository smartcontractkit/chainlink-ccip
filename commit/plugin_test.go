package commit

import (
	"encoding/base64"
	"encoding/json"
	"fmt"
	"slices"
	"testing"
	"time"

	"github.com/smartcontractkit/chainlink-ccip/pkg/consts"
	v1 "github.com/smartcontractkit/chainlink-ccip/pkg/ocrtypecodec/v1"
	cciptypes "github.com/smartcontractkit/chainlink-ccip/pkg/types/ccipocr3"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_queryPhaseRmnRelatedTimers(t *testing.T) {
	testCases := []struct {
		maxQueryDuration           time.Duration
		expInitialObservationTimer time.Duration
		expInitialReportTimer      time.Duration
	}{
		{
			maxQueryDuration:           1 * time.Second,
			expInitialObservationTimer: 550 * time.Millisecond,
			expInitialReportTimer:      200 * time.Millisecond,
		},
		{
			maxQueryDuration:           3 * time.Second,
			expInitialObservationTimer: 1650 * time.Millisecond,
			expInitialReportTimer:      600 * time.Millisecond,
		},
		{
			maxQueryDuration:           5 * time.Second,
			expInitialObservationTimer: 2750 * time.Millisecond,
			expInitialReportTimer:      1000 * time.Millisecond,
		},
		{
			maxQueryDuration:           15 * time.Second,
			expInitialObservationTimer: 3 * time.Second,
			expInitialReportTimer:      2 * time.Second,
		},
	}

	for _, tc := range testCases {
		t.Run(tc.maxQueryDuration.String(), func(t *testing.T) {
			obsTimer := observationsInitialRequestTimerDuration(tc.maxQueryDuration).Round(time.Millisecond)
			sigTimer := reportsInitialRequestTimerDuration(tc.maxQueryDuration).Round(time.Millisecond)
			assert.Equal(t, tc.expInitialObservationTimer, obsTimer)
			assert.Equal(t, tc.expInitialReportTimer, sigTimer)
		})
	}
}

func Test_DetectProblematicOracles(t *testing.T) {
	// replace this with the log you get
	allObsJSON := `
{
  "level": "debug",
  "ts": "2025-05-07T13:32:13.027Z",
  "logger": "CCIPCommitPlugin.solana.5eykt4UsFv8P8NJdTREpY1vzqKqZKvdpKuc147dw2N9d.124615329519749607.offqSMQWgQud6WJz694LRzkeN5kMYpCHTpXQr3Rkcjm",
  "caller": "commit/plugin.go:413",
  "msg": "commit plugin performing outcome",
  "version": "2.23.1@66f4d78",
  "plugin": "Commit",
  "oracleID": 15,
  "donID": 6,
  "configDigest": "000a956ace0797789518ef122dbe9806d391f8089ce3f2326f84eca7c78a455d",
  "component": "CommitPlugin",
  "ocrSeqNr": 46290,
  "ocrPhase": "otcm",
  "attributedObservations": [
    {
      "Observation": "CsYCGgoIuJWPw/f+0OkzGgoIxOiNzY6boddEGgoIlfbx5M+ypsJFGg0Iz/eU8djtlbidARAUGgsIgv+rov65kNPdASIMCLiVj8P3/tDpMxABIgwIxOiNzY6boddEEAEiDAiV9vHkz7KmwkUQASINCM/3lPHY7ZW4nQEQFSINCIL/q6L+uZDT3QEQASpmCiAGWJPtlauG6DBbKJinYb4cIc2/sLf15u/VPoOygysaUBIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMg0Iz/eU8djtlbidARAFMg0Igv+rov65kNPdARAFMgwIxOiNzY6boddEEAUyDAi4lY/D9/7Q6TMQBTIMCOeT34y2n67dARAFMgwIlfbx5M+ypsJFEAUS8AIKPAosQUY5NE4ya1NRRXE2dDZ0QnRQU0xBR2VLdG40UVNKdmF5VnlLTDhtMkRUZlMSDCxYLOm7mf03MUAAAAo8CitTbzExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEyEg0B2fV+II3ocEisKAAAEkYKLEFGOTROMmtTUUVxNnQ2dEJ0UFNMQUdlS3RuNFFTSnZheVZ5S0w4bTJEVGZTEhYKBgjAmO3ABhIMLM1/W9kWVB3SsAAAEkYKK1NvMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTISFwoGCMCY7cAGEg0B3MrFbJkZ6sloAAAAGgwI55PfjLafrt0BEAUaDAiV9vHkz7KmwkUQBRoNCM/3lPHY7ZW4nQEQBRoNCIL/q6L+uZDT3QEQBRoMCMTojc2Om6HXRBAFGgwIuJWPw/f+0OkzEAUiDAjXwe3ABhCc/qXXARr+AwoXCMTojc2Om6HXRBILCgPncgASBAJS2OEKEgiV9vHkz7KmwkUSBgoExcY/8woTCM/3lPHY7ZW4nQESBgoEQvW5QAoXCIL/q6L+uZDT3QESCgoDN3qCEgNWcQIKFgi4lY/D9/7Q6TMSCgoDD38HEgPTmAISFQiV9vHkz7KmwkUSCWLzi4DVRaKUABIWCM/3lPHY7ZW4nQESCSDiwuO0PAfgABIWCIL/q6L+uZDT3QESCWLi93+D8AsAABIVCLiVj8P3/tDpMxIJYuYlx7N2kAAAEhUIxOiNzY6boddEEgli84uA1UWilAAaHgjP95Tx2O2VuJ0BEhEKBwoFm14ihOgSBgiFv+3ABholCIL/q6L+uZDT3QESGAoOCgUBdlIdOBIFAeUiCLUSBgjfvu3ABhojCLiVj8P3/tDpMxIXCg0KBG4K5a8SBQSjLAajEgYI6L7twAYaJAjE6I3Njpuh10QSGAoOCgUGX/jsThIFELJBUsASBgiSv+3ABhoeCJX28eTPsqbCRRISCggKBgTgFDsYyxIGCJK/7cAGIg0Igv+rov65kNPdARAFIgwIxOiNzY6boddEEAUiDAi4lY/D9/7Q6TMQBSIMCOeT34y2n67dARAFIgwIlfbx5M+ypsJFEAUiDQjP95Tx2O2VuJ0BEAUqDAjYwe3ABhD3qvuoASLjBgoMCMTojc2Om6HXRBAFCgwIuJWPw/f+0OkzEAUKDAjnk9+Mtp+u3QEQBQoMCJX28eTPsqbCRRAFCg0Iz/eU8djtlbidARAFCg0Igv+rov65kNPdARAFEooGCuUBCgZSb3V0ZXIS2gEKIAjE6I3Njpuh10QSFHL2AA1wspHGe+2JghQVbQE4MnSxCiAIlfbx5M+ypsJFEhQyN8DXtYvsjcF/ABA7eEvWZ494ngosCOeT34y2n67dARIgrJcpd+G6tf/2xoYpH5lP9S80q+0bx9+I929D+SZZLI8KIAi4lY/D9/7Q6TMSFHL2AA1wspHGe+2JghQVbQE4MnSxCiEIz/eU8djtlbidARIUAGvB9ZmhC3PIjMPNGakoKcSsHoMKIQiC/6ui/rmQ090BEhRwAD2EmiDjOZf+ppu8ijZtarDhMQo7CglSTU5SZW1vdGUSLgosCOeT34y2n67dARIgBliT7ZWrhugwWyiYp2G+HCHNv7C39ebv1T6DsoMrGlAKPgoMTm9uY2VNYW5hZ2VyEi4KLAjnk9+Mtp+u3QESIKyXKXfhurX/9saGKR+ZT/UvNKvtG8ffiPdvQ/kmWSyPCugBCglGZWVRdW90ZXIS2gEKIQjP95Tx2O2VuJ0BEhSROBR4IUSGTlI8P9t448ol0sKuygohCIL/q6L+uZDT3QESFAb8g2z5g5sc2JHEQKCkUkLaauHJCiAIxOiNzY6boddEEhQyN8DXtYvsjcF/ABA7eEvWZ494ngogCJX28eTPsqbCRRIUAqTWnP/sAPv387YMk+NSnfxYiU0KLAjnk9+Mtp+u3QESINmoZhgtaQLmSSx6MoEr6jZ+GpTXBrFu2pFEnQSGuA0BCiAIuJWPw/f+0OkzEhQyN8DXtYvsjcF/ABA7eEvWZ494ngq3AQoGT25SYW1wEqwBCiAIuJWPw/f+0OkzEhR2pEN2il47jRrtAQX8JQh3hB3rQAogCMTojc2Om6HXRBIUdqRDdopeO40a7QEF/CUId4Qd60AKIAiV9vHkz7KmwkUSFJE4FHghRIZOUjw/23jjyiXSwq7KCiEIz/eU8djtlbidARIU8Jr+eNPH01mzNNfLiJlXUffsXhMKIQiC/6ui/rmQ090BEhTuha77FblIlWOmopiR6+B1CqGnrioMCOeT34y2n67dARAFKgwIlfbx5M+ypsJFEAUqDQjP95Tx2O2VuJ0BEAUqDQiC/6ui/rmQ090BEAUqDAjE6I3Njpuh10QQBSoMCLiVj8P3/tDpMxAF",
      "Observer": 9
    },
    {
      "Observation": "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",
      "Observer": 14
    },
    {
      "Observation": "CsYCGgoIuJWPw/f+0OkzGgoIxOiNzY6boddEGgoIlfbx5M+ypsJFGg0Iz/eU8djtlbidARAUGgsIgv+rov65kNPdASIMCLiVj8P3/tDpMxABIgwIxOiNzY6boddEEAEiDAiV9vHkz7KmwkUQASINCM/3lPHY7ZW4nQEQFSINCIL/q6L+uZDT3QEQASpmCiAGWJPtlauG6DBbKJinYb4cIc2/sLf15u/VPoOygysaUBIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMg0Igv+rov65kNPdARAFMgwIxOiNzY6boddEEAUyDAi4lY/D9/7Q6TMQBTIMCOeT34y2n67dARAFMgwIlfbx5M+ypsJFEAUyDQjP95Tx2O2VuJ0BEAUS8AIKPAosQUY5NE4ya1NRRXE2dDZ0QnRQU0xBR2VLdG40UVNKdmF5VnlLTDhtMkRUZlMSDCxYLOm7mf03MUAAAAo8CitTbzExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTEyEg0B2fV+II3ocEisKAAAEkYKLEFGOTROMmtTUUVxNnQ2dEJ0UFNMQUdlS3RuNFFTSnZheVZ5S0w4bTJEVGZTEhYKBgjAmO3ABhIMLM1/W9kWVB3SsAAAEkYKK1NvMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTISFwoGCMCY7cAGEg0B3MrFbJkZ6sloAAAAGgwIlfbx5M+ypsJFEAUaDQjP95Tx2O2VuJ0BEAUaDQiC/6ui/rmQ090BEAUaDAjE6I3Njpuh10QQBRoMCLiVj8P3/tDpMxAFGgwI55PfjLafrt0BEAUiDAjXwe3ABhDryrOdARr+AwoSCJX28eTPsqbCRRIGCgTFxj/zChMIz/eU8djtlbidARIGCgRC9blAChcIgv+rov65kNPdARIKCgM3eoISA1ZxAgoWCLiVj8P3/tDpMxIKCgMPfwcSA9OYAgoXCMTojc2Om6HXRBILCgPw8aQSBAJS2OESFQi4lY/D9/7Q6TMSCWLmJcezdpAAABIVCMTojc2Om6HXRBIJYvOLgNVFopQAEhUIlfbx5M+ypsJFEgli84uA1UWilAASFgjP95Tx2O2VuJ0BEgkg4sLjtDwH4AASFgiC/6ui/rmQ090BEgli4vd/g/ALAAAaHgjP95Tx2O2VuJ0BEhEKBwoFm14ihOgSBgiFv+3ABholCIL/q6L+uZDT3QESGAoOCgUBdlIdOBIFAeUiCLUSBgjfvu3ABhojCLiVj8P3/tDpMxIXCg0KBG4K5a8SBQSjLAajEgYI6L7twAYaJAjE6I3Njpuh10QSGAoOCgUGX/jsThIFELJBUsASBgiSv+3ABhoeCJX28eTPsqbCRRISCggKBgTgFDsYyxIGCJK/7cAGIg0Igv+rov65kNPdARAFIgwIxOiNzY6boddEEAUiDAi4lY/D9/7Q6TMQBSIMCOeT34y2n67dARAFIgwIlfbx5M+ypsJFEAUiDQjP95Tx2O2VuJ0BEAUqDAjXwe3ABhDgjsa3ASLjBgoMCJX28eTPsqbCRRAFCg0Iz/eU8djtlbidARAFCg0Igv+rov65kNPdARAFCgwIxOiNzY6boddEEAUKDAi4lY/D9/7Q6TMQBQoMCOeT34y2n67dARAFEooGCrcBCgZPblJhbXASrAEKIQjP95Tx2O2VuJ0BEhTwmv5408fTWbM018uImVdR9+xeEwohCIL/q6L+uZDT3QESFO6FrvsVuUiVY6aimJHr4HUKoaeuCiAIuJWPw/f+0OkzEhR2pEN2il47jRrtAQX8JQh3hB3rQAogCMTojc2Om6HXRBIUdqRDdopeO40a7QEF/CUId4Qd60AKIAiV9vHkz7KmwkUSFJE4FHghRIZOUjw/23jjyiXSwq7KCuUBCgZSb3V0ZXIS2gEKIQjP95Tx2O2VuJ0BEhQAa8H1maELc8iMw80ZqSgpxKwegwogCLiVj8P3/tDpMxIUcvYADXCykcZ77YmCFBVtATgydLEKIAjE6I3Njpuh10QSFHL2AA1wspHGe+2JghQVbQE4MnSxCiwI55PfjLafrt0BEiCslyl34bq1//bGhikfmU/1LzSr7RvH34j3b0P5JlksjwohCIL/q6L+uZDT3QESFHAAPYSaIOM5l/6mm7yKNm1qsOExCiAIlfbx5M+ypsJFEhQyN8DXtYvsjcF/ABA7eEvWZ494ngo7CglSTU5SZW1vdGUSLgosCOeT34y2n67dARIgBliT7ZWrhugwWyiYp2G+HCHNv7C39ebv1T6DsoMrGlAKPgoMTm9uY2VNYW5hZ2VyEi4KLAjnk9+Mtp+u3QESIKyXKXfhurX/9saGKR+ZT/UvNKvtG8ffiPdvQ/kmWSyPCugBCglGZWVRdW90ZXIS2gEKIQiC/6ui/rmQ090BEhQG/INs+YObHNiRxECgpFJC2mrhyQogCJX28eTPsqbCRRIUAqTWnP/sAPv387YMk+NSnfxYiU0KIQjP95Tx2O2VuJ0BEhSROBR4IUSGTlI8P9t448ol0sKuygogCLiVj8P3/tDpMxIUMjfA17WL7I3BfwAQO3hL1mePeJ4KIAjE6I3Njpuh10QSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCiwI55PfjLafrt0BEiDZqGYYLWkC5kksejKBK+o2fhqU1waxbtqRRJ0EhrgNASoNCIL/q6L+uZDT3QEQBSoMCMTojc2Om6HXRBAFKgwIuJWPw/f+0OkzEAUqDAjnk9+Mtp+u3QEQBSoMCJX28eTPsqbCRRAFKg0Iz/eU8djtlbidARAF",
      "Observer": 15
    },
    {
      "Observation": "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",
      "Observer": 4
    },
    {
      "Observation": "CrkCGgoIuJWPw/f+0OkzGgoIxOiNzY6boddEGgoIlfbx5M+ypsJFGg0Iz/eU8djtlbidARAUIgwIuJWPw/f+0OkzEAEiDAjE6I3Njpuh10QQASIMCJX28eTPsqbCRRABIg0Iz/eU8djtlbidARAVIg0Igv+rov65kNPdARABKmYKIAZYk+2Vq4boMFsomKdhvhwhzb+wt/Xm79U+g7KDKxpQEiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyDAjE6I3Njpuh10QQBTIMCLiVj8P3/tDpMxAFMgwI55PfjLafrt0BEAUyDAiV9vHkz7KmwkUQBTINCM/3lPHY7ZW4nQEQBTINCIL/q6L+uZDT3QEQBRLwAgo8CixBRjk0TjJrU1FFcTZ0NnRCdFBTTEFHZUt0bjRRU0p2YXlWeUtMOG0yRFRmUxIMLFgs6buZ/TcxQAAACjwKK1NvMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTISDQHZ9X4gjehwSKwoAAASRgosQUY5NE4ya1NRRXE2dDZ0QnRQU0xBR2VLdG40UVNKdmF5VnlLTDhtMkRUZlMSFgoGCMCY7cAGEgwszX9b2RZUHdKwAAASRgorU28xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMhIXCgYIwJjtwAYSDQHcysVsmRnqyWgAAAAaDAjnk9+Mtp+u3QEQBRoMCJX28eTPsqbCRRAFGg0Iz/eU8djtlbidARAFGg0Igv+rov65kNPdARAFGgwIxOiNzY6boddEEAUaDAi4lY/D9/7Q6TMQBSIMCNfB7cAGEKevucQBGswDChYIuJWPw/f+0OkzEgoKAw9/CRIDvBfYChcIxOiNzY6boddEEgsKA/GbkBIEAlLY4QoSCJX28eTPsqbCRRIGCgTFxj/zChMIz/eU8djtlbidARIGCgRC9blAEhUIlfbx5M+ypsJFEgli84uA1UWilAASFgjP95Tx2O2VuJ0BEgkg4sLjtDwH4AASFQi4lY/D9/7Q6TMSCWLmJcezdpAAABIVCMTojc2Om6HXRBIJYvOLgNVFopQAGiQIxOiNzY6boddEEhgKDgoFBmOcLnkSBRJ0/JKjEgYIyrXtwAYaHgiV9vHkz7KmwkUSEgoICgYD0uf+TYASBgjKte3ABhoeCM/3lPHY7ZW4nQESEQoHCgWp9ukIoBIGCLW17cAGGiQIgv+rov65kNPdARIXCg0KBOzVHK4SBQIkDw+LEgYI2bLtwAYaIwi4lY/D9/7Q6TMSFwoNCgRt+0EgEgUEKE/kVBIGCKm17cAGIgwI55PfjLafrt0BEAUiDAiV9vHkz7KmwkUQBSINCM/3lPHY7ZW4nQEQBSINCIL/q6L+uZDT3QEQBSIMCMTojc2Om6HXRBAFIgwIuJWPw/f+0OkzEAUqDAjXwe3ABhDZ2vXUASLjBgoMCMTojc2Om6HXRBAFCgwIuJWPw/f+0OkzEAUKDAjnk9+Mtp+u3QEQBQoMCJX28eTPsqbCRRAFCg0Iz/eU8djtlbidARAFCg0Igv+rov65kNPdARAFEooGCrcBCgZPblJhbXASrAEKIAi4lY/D9/7Q6TMSFHakQ3aKXjuNGu0BBfwlCHeEHetACiAIxOiNzY6boddEEhR2pEN2il47jRrtAQX8JQh3hB3rQAogCJX28eTPsqbCRRIUkTgUeCFEhk5SPD/beOPKJdLCrsoKIQjP95Tx2O2VuJ0BEhTwmv5408fTWbM018uImVdR9+xeEwohCIL/q6L+uZDT3QESFO6FrvsVuUiVY6aimJHr4HUKoaeuCuUBCgZSb3V0ZXIS2gEKIQiC/6ui/rmQ090BEhRwAD2EmiDjOZf+ppu8ijZtarDhMQogCMTojc2Om6HXRBIUcvYADXCykcZ77YmCFBVtATgydLEKIAiV9vHkz7KmwkUSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCiwI55PfjLafrt0BEiCslyl34bq1//bGhikfmU/1LzSr7RvH34j3b0P5JlksjwogCLiVj8P3/tDpMxIUcvYADXCykcZ77YmCFBVtATgydLEKIQjP95Tx2O2VuJ0BEhQAa8H1maELc8iMw80ZqSgpxKwegwo7CglSTU5SZW1vdGUSLgosCOeT34y2n67dARIgBliT7ZWrhugwWyiYp2G+HCHNv7C39ebv1T6DsoMrGlAKPgoMTm9uY2VNYW5hZ2VyEi4KLAjnk9+Mtp+u3QESIKyXKXfhurX/9saGKR+ZT/UvNKvtG8ffiPdvQ/kmWSyPCugBCglGZWVRdW90ZXIS2gEKLAjnk9+Mtp+u3QESINmoZhgtaQLmSSx6MoEr6jZ+GpTXBrFu2pFEnQSGuA0BCiAIuJWPw/f+0OkzEhQyN8DXtYvsjcF/ABA7eEvWZ494ngohCM/3lPHY7ZW4nQESFJE4FHghRIZOUjw/23jjyiXSwq7KCiEIgv+rov65kNPdARIUBvyDbPmDmxzYkcRAoKRSQtpq4ckKIAjE6I3Njpuh10QSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCiAIlfbx5M+ypsJFEhQCpNac/+wA+/fztgyT41Kd/FiJTSoMCOeT34y2n67dARAFKgwIlfbx5M+ypsJFEAUqDQjP95Tx2O2VuJ0BEAUqDQiC/6ui/rmQ090BEAUqDAjE6I3Njpuh10QQBSoMCLiVj8P3/tDpMxAF",
      "Observer": 0
    },
    {
      "Observation": "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",
      "Observer": 1
    },
    {
      "Observation": "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",
      "Observer": 2
    },
    {
      "Observation": "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",
      "Observer": 5
    },
    {
      "Observation": "CpwBKkQSIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADINCIL/q6L+uZDT3QEQBTIMCMTojc2Om6HXRBAFMgwIuJWPw/f+0OkzEAUyDAjnk9+Mtp+u3QEQBTIMCJX28eTPsqbCRRAFMg0Iz/eU8djtlbidARAFEuABCjwKLEFGOTROMmtTUUVxNnQ2dEJ0UFNMQUdlS3RuNFFTSnZheVZ5S0w4bTJEVGZTEgwsWCzpu5n9NzFAAAAKPAorU28xMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMTExMhINAdn1fiCN6HBIrCgAABoNCM/3lPHY7ZW4nQEQBRoNCIL/q6L+uZDT3QEQBRoMCMTojc2Om6HXRBAFGgwIuJWPw/f+0OkzEAUaDAjnk9+Mtp+u3QEQBRoMCJX28eTPsqbCRRAFIgwI18HtwAYQvOPIjQEazAIKEwjP95Tx2O2VuJ0BEgYKBEL1uUAKFwiC/6ui/rmQ090BEgoKAzd++BIDVnECChYIuJWPw/f+0OkzEgoKAw9/BxID05gCChcIxOiNzY6boddEEgsKA/MYbBIEAlLY4QoSCJX28eTPsqbCRRIGCgTFxj/zEhYIz/eU8djtlbidARIJIOLC47Q8B+AAEhYIgv+rov65kNPdARIJYuL3f4PwCwAAEhUIuJWPw/f+0OkzEgli5iXHs3aQAAASFQjE6I3Njpuh10QSCWLzi4DVRaKUABIVCJX28eTPsqbCRRIJYvOLgNVFopQAIgwIxOiNzY6boddEEAUiDAi4lY/D9/7Q6TMQBSIMCOeT34y2n67dARAFIgwIlfbx5M+ypsJFEAUiDQjP95Tx2O2VuJ0BEAUiDQiC/6ui/rmQ090BEAUqDAjXwe3ABhC5opqdASLQAwoMCOeT34y2n67dARAFCgwIlfbx5M+ypsJFEAUKDQjP95Tx2O2VuJ0BEAUKDQiC/6ui/rmQ090BEAUKDAjE6I3Njpuh10QQBQoMCLiVj8P3/tDpMxAFEvcCCroBCglGZWVRdW90ZXISrAEKIAjE6I3Njpuh10QSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCiEIgv+rov65kNPdARIUBvyDbPmDmxzYkcRAoKRSQtpq4ckKIQjP95Tx2O2VuJ0BEhSROBR4IUSGTlI8P9t448ol0sKuygogCJX28eTPsqbCRRIUAqTWnP/sAPv387YMk+NSnfxYiU0KIAi4lY/D9/7Q6TMSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCrcBCgZSb3V0ZXISrAEKIAiV9vHkz7KmwkUSFDI3wNe1i+yNwX8AEDt4S9Znj3ieCiAIuJWPw/f+0OkzEhRy9gANcLKRxnvtiYIUFW0BODJ0sQogCMTojc2Om6HXRBIUcvYADXCykcZ77YmCFBVtATgydLEKIQiC/6ui/rmQ090BEhRwAD2EmiDjOZf+ppu8ijZtarDhMQohCM/3lPHY7ZW4nQESFABrwfWZoQtzyIzDzRmpKCnErB6DKgwIxOiNzY6boddEEAUqDAi4lY/D9/7Q6TMQBSoMCOeT34y2n67dARAFKgwIlfbx5M+ypsJFEAUqDQjP95Tx2O2VuJ0BEAUqDQiC/6ui/rmQ090BEAU=",
      "Observer": 10
    },
    {
      "Observation": "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",
      "Observer": 13
    },
    {
      "Observation": "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",
      "Observer": 6
    },
    {
      "Observation": "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",
      "Observer": 3
    }
  ]
}`
	type attributedObservation struct {
		Observation string `json:"Observation"`
		Observer    int    `json:"Observer"`
	}

	type log struct {
		AttributedObservations []attributedObservation `json:"attributedObservations"`
	}

	var lg log
	err := json.Unmarshal([]byte(allObsJSON), &lg)
	require.NoError(t, err)

	var oraclesThatDidntObserve []int
	var oraclesThatObserved = make(map[int]struct{})
	for _, attObs := range lg.AttributedObservations {
		oraclesThatObserved[attObs.Observer] = struct{}{}
	}

	const numOracles = 16
	for i := range numOracles {
		if _, ok := oraclesThatObserved[i]; !ok {
			oraclesThatDidntObserve = append(oraclesThatDidntObserve, i)
		}
	}

	fmt.Printf("number of oracles that observed: %d, oracles that didn't observe: %v\n", len(lg.AttributedObservations), oraclesThatDidntObserve)
	fmt.Println("--------------------------------")

	chainsToObserve := []cciptypes.ChainSelector{
		5009297550715157269,  // ethereum-mainnet
		4949039107694359620,  // ethereum-mainnet-arbitrum-1
		3734403246176062136,  // ethereum-mainnet-optimism-1
		15971525489660198786, // ethereum-mainnet-base-1
		11344663589394136015, // binance_smart_chain-mainnet
	}
	contractsWeNeedToDiscoverOnSourceChains := []string{
		consts.ContractNameRouter,
		consts.ContractNameFeeQuoter,
		consts.ContractNameOnRamp,
	}
	var oracleProblems = make(map[int][]string)
	for _, attObs := range lg.AttributedObservations {
		decoded, err := base64.StdEncoding.DecodeString(attObs.Observation)
		require.NoError(t, err)

		obs, err := v1.DefaultCommitCodec.DecodeObservation(decoded)
		require.NoError(t, err)

		var problems []string
		for _, chain := range chainsToObserve {
			_, ok := obs.ChainFeeObs.FeeComponents[cciptypes.ChainSelector(chain)]
			if !ok {
				problems = append(problems, fmt.Sprintf("oracle %d does not have a fee component for %d (reads from chainWriter)", attObs.Observer, chain))
			}

			_, ok = obs.ChainFeeObs.ChainFeeUpdates[cciptypes.ChainSelector(chain)]
			if !ok {
				problems = append(problems, fmt.Sprintf("oracle %d does not have a chain fee update for %d (reads from destination chain chainReader)", attObs.Observer, chain))
			}

			// check discovery observations
			for contractName, chainToAddressMap := range obs.DiscoveryObs.Addresses {
				if !slices.Contains(contractsWeNeedToDiscoverOnSourceChains, contractName) {
					continue
				}
				_, ok := chainToAddressMap[cciptypes.ChainSelector(chain)]
				if !ok {
					problems = append(problems, fmt.Sprintf("oracle %d has not discovered %s on %d", attObs.Observer, contractName, chain))
				}
			}

			var onRampMaxSeqNumFound bool
			for _, seqNumChain := range obs.MerkleRootObs.OnRampMaxSeqNums {
				if seqNumChain.ChainSel == chain {
					onRampMaxSeqNumFound = true
					break
				}
			}

			var offRampNextSeqNumFound bool
			for _, seqNumChain := range obs.MerkleRootObs.OffRampNextSeqNums {
				if seqNumChain.ChainSel == chain {
					offRampNextSeqNumFound = true
					break
				}
			}

			var merkleRootFound bool
			for _, merkleRoot := range obs.MerkleRootObs.MerkleRoots {
				if merkleRoot.ChainSel == chain {
					merkleRootFound = true
					break
				}
			}

			// Check the following:
			// - if onRampMaxSeqNumFound is true then offRampNextSeqNumFound must be true (selectingRangesForReport state)
			// - offRampNextSeqNumFound can be true even if onRampMaxSeqNumFound is false (waitingForReportTransmission state)
			// - if offRampNextSeqNumFound and onRampMaxSeqNumFound are false, then merkleRootFound must be true (buildingReport state)
			// - merkleRootFound is true if both offRampNextSeqNumFound and onRampMaxSeqNumFound are false
			if onRampMaxSeqNumFound && !offRampNextSeqNumFound {
				problems = append(problems, fmt.Sprintf("oracle %d has onRampMaxSeqNumFound set to true but offRampNextSeqNumFound set to false for %d", attObs.Observer, chain))
			}

			if !offRampNextSeqNumFound && !onRampMaxSeqNumFound && !merkleRootFound {
				problems = append(problems, fmt.Sprintf("oracle %d does not have a MerkleRootObs.MerkleRoots observation for %d (reads from destination chain chainReader)", attObs.Observer, chain))
			}
		}
		if len(problems) > 0 {
			oracleProblems[attObs.Observer] = problems
		}
	}

	// print a nicely formatted summary
	for oracle, problems := range oracleProblems {
		fmt.Printf("Oracle %d had problems:\n", oracle)
		for _, problem := range problems {
			fmt.Printf("  - %s\n", problem)
		}
		fmt.Println("--------------------------------")
	}
}
