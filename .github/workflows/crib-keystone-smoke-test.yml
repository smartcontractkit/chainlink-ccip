name: CRIB Keystone Smoke Test

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  check-prerequisites:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.evaluate.outputs.should_run }}
    steps:
      - uses: actions/checkout@v4

      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: changes
        with:
          filters: |
            src:
              - '**'
              - '!**/*.md'
              - '!.gitignore'
          predicate-quantifier: every

      - name: Check if PR is draft and paths
        id: evaluate
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.event.pull_request.draft }}" == "true" ]; then
            echo "should_run=false" >> "$GITHUB_OUTPUT"
          elif [ "${{ steps.changes.outputs.src }}" != "true" ]; then
            echo "should_run=false" >> "$GITHUB_OUTPUT"
          else
            echo "should_run=true" >> "$GITHUB_OUTPUT"
          fi

  run-smoke-test:
    needs: check-prerequisites
    if: needs.check-prerequisites.outputs.should_run == 'true'
    runs-on: ubuntu22.04-8cores-32GB
    timeout-minutes: 20
    permissions:
      id-token: write
      contents: read
      actions: read
      pull-requests: read
    steps:
      - name: Get core ref from PR body
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          comment=$(gh pr view "https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}" --json body -q '.body')
          core_ref=$(echo "$comment" | grep -oP 'core ref: \K\S+' || true)
          if [ -n "$core_ref" ]; then
            echo "CUSTOM_CORE_REF=${core_ref}" >> "${GITHUB_ENV}"
          else
            echo "CUSTOM_CORE_REF=develop" >> "${GITHUB_ENV}"
          fi

      - name: Checkout chainlink repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          repository: "smartcontractkit/chainlink"
          path: chainlink
          ref: ${{ env.CUSTOM_CORE_REF }}
          fetch-depth: 0

      - name: Checkout crib repo
        uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
        with:
          repository: "smartcontractkit/crib"
          path: crib

      - name: Setup Go cache for crib
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-crib-${{ hashFiles('crib/cli/go.sum') }}-${{ hashFiles('chainlink/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-crib-${{ hashFiles('crib/cli/go.sum') }}-
            ${{ runner.os }}-go-crib-

      - name: Assume role
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_CRIB_ROLE_ARN_STAGE }}
          role-duration-seconds: 900
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Setup Nix
        uses: DeterminateSystems/nix-installer-action@b92f66560d6f97d6576405a7bae901ab57e72b6a # v15
        with:
          source-url: https://github.com/DeterminateSystems/nix-installer/releases/download/v0.27.1/nix-installer-x86_64-linux # Maps to Nix 2.24.9

      - name: Setup gobin for nix
        run: |
          GOBIN="$HOME/.nix-go/bin"
          echo "GOBIN=$GOBIN" >> $GITHUB_ENV
          mkdir -p "$GOBIN"
          echo "PATH=$GOBIN:$PATH" >> $GITHUB_ENV

        # For some reason, crib refresh-ecr-credentials --helm does _not_ work on CI, but this does.
      - name: Login helm
        working-directory: crib
        env:
          HELM_REGISTRY: "${{ secrets.AWS_ACCOUNT_ID_PROD }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/infra-charts"
        run: |
          nix develop .#keystone -c bash -c "aws ecr get-login-password --region '${{ secrets.AWS_REGION }}' | helm registry login '$HELM_REGISTRY' --username AWS --password-stdin"

      - name: Run smoke test
        shell: bash
        working-directory: crib
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          CHAINLINK_HELM_REGISTRY_URI: oci://${{secrets.AWS_ACCOUNT_ID_PROD}}.dkr.ecr.${{secrets.AWS_REGION}}.amazonaws.com/infra-charts
        run: |
          nix develop .#keystone -c bash -c "task build && crib keystone"
