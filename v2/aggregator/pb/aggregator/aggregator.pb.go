// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: proto/aggregator.proto

package aggregator

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WriteStatus int32

const (
	WriteStatus_WRITE_STATUS_UNSPECIFIED WriteStatus = 0
	WriteStatus_WRITE_STATUS_FAILED      WriteStatus = 1
	WriteStatus_WRITE_STATUS_SUCCESS     WriteStatus = 2
)

// Enum value maps for WriteStatus.
var (
	WriteStatus_name = map[int32]string{
		0: "WRITE_STATUS_UNSPECIFIED",
		1: "WRITE_STATUS_FAILED",
		2: "WRITE_STATUS_SUCCESS",
	}
	WriteStatus_value = map[string]int32{
		"WRITE_STATUS_UNSPECIFIED": 0,
		"WRITE_STATUS_FAILED":      1,
		"WRITE_STATUS_SUCCESS":     2,
	}
)

func (x WriteStatus) Enum() *WriteStatus {
	p := new(WriteStatus)
	*p = x
	return p
}

func (x WriteStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WriteStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_aggregator_proto_enumTypes[0].Descriptor()
}

func (WriteStatus) Type() protoreflect.EnumType {
	return &file_proto_aggregator_proto_enumTypes[0]
}

func (x WriteStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WriteStatus.Descriptor instead.
func (WriteStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{0}
}

type Any2AnyMessageHeader struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MessageId           []byte                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SourceChainSelector uint64                 `protobuf:"varint,2,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	DestChainSelector   uint64                 `protobuf:"varint,3,opt,name=dest_chain_selector,json=destChainSelector,proto3" json:"dest_chain_selector,omitempty"`
	SequenceNumber      uint64                 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Any2AnyMessageHeader) Reset() {
	*x = Any2AnyMessageHeader{}
	mi := &file_proto_aggregator_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Any2AnyMessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any2AnyMessageHeader) ProtoMessage() {}

func (x *Any2AnyMessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any2AnyMessageHeader.ProtoReflect.Descriptor instead.
func (*Any2AnyMessageHeader) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{0}
}

func (x *Any2AnyMessageHeader) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *Any2AnyMessageHeader) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *Any2AnyMessageHeader) GetDestChainSelector() uint64 {
	if x != nil {
		return x.DestChainSelector
	}
	return 0
}

func (x *Any2AnyMessageHeader) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// Subject to change based on the message encoding decisions
type Any2AnyMessage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Header           *Any2AnyMessageHeader  `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Sender           []byte                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	OnrampAddress    []byte                 `protobuf:"bytes,3,opt,name=onramp_address,json=onrampAddress,proto3" json:"onramp_address,omitempty"`
	Data             []byte                 `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	Receiver         []byte                 `protobuf:"bytes,5,opt,name=receiver,proto3" json:"receiver,omitempty"`
	FeeToken         []byte                 `protobuf:"bytes,6,opt,name=fee_token,json=feeToken,proto3" json:"fee_token,omitempty"`
	FeeTokenAmount   []byte                 `protobuf:"bytes,7,opt,name=fee_token_amount,json=feeTokenAmount,proto3" json:"fee_token_amount,omitempty"`
	FeeValueJuels    []byte                 `protobuf:"bytes,8,opt,name=fee_value_juels,json=feeValueJuels,proto3" json:"fee_value_juels,omitempty"`
	TokenTransfer    *Any2AnyTokenTransfer  `protobuf:"bytes,9,opt,name=token_transfer,json=tokenTransfer,proto3" json:"token_transfer,omitempty"`
	VerifierReceipts []*AnyReceipt          `protobuf:"bytes,10,rep,name=verifier_receipts,json=verifierReceipts,proto3" json:"verifier_receipts,omitempty"`
	ExecutorReceipt  *AnyReceipt            `protobuf:"bytes,11,opt,name=executor_receipt,json=executorReceipt,proto3" json:"executor_receipt,omitempty"`
	TokenReceipt     *AnyReceipt            `protobuf:"bytes,12,opt,name=token_receipt,json=tokenReceipt,proto3" json:"token_receipt,omitempty"`
	ExtraArgs        []byte                 `protobuf:"bytes,13,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Any2AnyMessage) Reset() {
	*x = Any2AnyMessage{}
	mi := &file_proto_aggregator_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Any2AnyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any2AnyMessage) ProtoMessage() {}

func (x *Any2AnyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any2AnyMessage.ProtoReflect.Descriptor instead.
func (*Any2AnyMessage) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{1}
}

func (x *Any2AnyMessage) GetHeader() *Any2AnyMessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Any2AnyMessage) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Any2AnyMessage) GetOnrampAddress() []byte {
	if x != nil {
		return x.OnrampAddress
	}
	return nil
}

func (x *Any2AnyMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Any2AnyMessage) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Any2AnyMessage) GetFeeToken() []byte {
	if x != nil {
		return x.FeeToken
	}
	return nil
}

func (x *Any2AnyMessage) GetFeeTokenAmount() []byte {
	if x != nil {
		return x.FeeTokenAmount
	}
	return nil
}

func (x *Any2AnyMessage) GetFeeValueJuels() []byte {
	if x != nil {
		return x.FeeValueJuels
	}
	return nil
}

func (x *Any2AnyMessage) GetTokenTransfer() *Any2AnyTokenTransfer {
	if x != nil {
		return x.TokenTransfer
	}
	return nil
}

func (x *Any2AnyMessage) GetVerifierReceipts() []*AnyReceipt {
	if x != nil {
		return x.VerifierReceipts
	}
	return nil
}

func (x *Any2AnyMessage) GetExecutorReceipt() *AnyReceipt {
	if x != nil {
		return x.ExecutorReceipt
	}
	return nil
}

func (x *Any2AnyMessage) GetTokenReceipt() *AnyReceipt {
	if x != nil {
		return x.TokenReceipt
	}
	return nil
}

func (x *Any2AnyMessage) GetExtraArgs() []byte {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type Any2AnyTokenTransfer struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SourceTokenAddress []byte                 `protobuf:"bytes,1,opt,name=source_token_address,json=sourceTokenAddress,proto3" json:"source_token_address,omitempty"`
	DestTokenAddress   []byte                 `protobuf:"bytes,2,opt,name=dest_token_address,json=destTokenAddress,proto3" json:"dest_token_address,omitempty"`
	ExtraData          []byte                 `protobuf:"bytes,3,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	Amount             []byte                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Any2AnyTokenTransfer) Reset() {
	*x = Any2AnyTokenTransfer{}
	mi := &file_proto_aggregator_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Any2AnyTokenTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Any2AnyTokenTransfer) ProtoMessage() {}

func (x *Any2AnyTokenTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Any2AnyTokenTransfer.ProtoReflect.Descriptor instead.
func (*Any2AnyTokenTransfer) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{2}
}

func (x *Any2AnyTokenTransfer) GetSourceTokenAddress() []byte {
	if x != nil {
		return x.SourceTokenAddress
	}
	return nil
}

func (x *Any2AnyTokenTransfer) GetDestTokenAddress() []byte {
	if x != nil {
		return x.DestTokenAddress
	}
	return nil
}

func (x *Any2AnyTokenTransfer) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *Any2AnyTokenTransfer) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

type AnyReceipt struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Issuer            []byte                 `protobuf:"bytes,1,opt,name=issuer,proto3" json:"issuer,omitempty"`
	FeeTokenAmount    []byte                 `protobuf:"bytes,2,opt,name=fee_token_amount,json=feeTokenAmount,proto3" json:"fee_token_amount,omitempty"`
	DestGasLimit      uint64                 `protobuf:"varint,3,opt,name=dest_gas_limit,json=destGasLimit,proto3" json:"dest_gas_limit,omitempty"`
	DestBytesOverhead uint32                 `protobuf:"varint,4,opt,name=dest_bytes_overhead,json=destBytesOverhead,proto3" json:"dest_bytes_overhead,omitempty"`
	ExtraArgs         []byte                 `protobuf:"bytes,5,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *AnyReceipt) Reset() {
	*x = AnyReceipt{}
	mi := &file_proto_aggregator_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AnyReceipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnyReceipt) ProtoMessage() {}

func (x *AnyReceipt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnyReceipt.ProtoReflect.Descriptor instead.
func (*AnyReceipt) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{3}
}

func (x *AnyReceipt) GetIssuer() []byte {
	if x != nil {
		return x.Issuer
	}
	return nil
}

func (x *AnyReceipt) GetFeeTokenAmount() []byte {
	if x != nil {
		return x.FeeTokenAmount
	}
	return nil
}

func (x *AnyReceipt) GetDestGasLimit() uint64 {
	if x != nil {
		return x.DestGasLimit
	}
	return 0
}

func (x *AnyReceipt) GetDestBytesOverhead() uint32 {
	if x != nil {
		return x.DestBytesOverhead
	}
	return 0
}

func (x *AnyReceipt) GetExtraArgs() []byte {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

type CommitVerificationRecord struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MessageId             []byte                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SequenceNumber        uint64                 `protobuf:"varint,2,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	SourceChainSelector   uint64                 `protobuf:"varint,3,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	DestChainSelector     uint64                 `protobuf:"varint,4,opt,name=dest_chain_selector,json=destChainSelector,proto3" json:"dest_chain_selector,omitempty"`
	SourceVerifierAddress []byte                 `protobuf:"bytes,5,opt,name=source_verifier_address,json=sourceVerifierAddress,proto3" json:"source_verifier_address,omitempty"`
	DestVerifierAddress   []byte                 `protobuf:"bytes,6,opt,name=dest_verifier_address,json=destVerifierAddress,proto3" json:"dest_verifier_address,omitempty"`
	// ccv_data is the signature from the commit verifier node of the message data and the blob data
	CcvData []byte `protobuf:"bytes,7,opt,name=ccv_data,json=ccvData,proto3" json:"ccv_data,omitempty"`
	// blob_data is the encoded nonce from the source chain
	BlobData      []byte          `protobuf:"bytes,8,opt,name=blob_data,json=blobData,proto3" json:"blob_data,omitempty"`
	Timestamp     uint32          `protobuf:"varint,9,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Message       *Any2AnyMessage `protobuf:"bytes,10,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitVerificationRecord) Reset() {
	*x = CommitVerificationRecord{}
	mi := &file_proto_aggregator_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitVerificationRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitVerificationRecord) ProtoMessage() {}

func (x *CommitVerificationRecord) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitVerificationRecord.ProtoReflect.Descriptor instead.
func (*CommitVerificationRecord) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{4}
}

func (x *CommitVerificationRecord) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *CommitVerificationRecord) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *CommitVerificationRecord) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *CommitVerificationRecord) GetDestChainSelector() uint64 {
	if x != nil {
		return x.DestChainSelector
	}
	return 0
}

func (x *CommitVerificationRecord) GetSourceVerifierAddress() []byte {
	if x != nil {
		return x.SourceVerifierAddress
	}
	return nil
}

func (x *CommitVerificationRecord) GetDestVerifierAddress() []byte {
	if x != nil {
		return x.DestVerifierAddress
	}
	return nil
}

func (x *CommitVerificationRecord) GetCcvData() []byte {
	if x != nil {
		return x.CcvData
	}
	return nil
}

func (x *CommitVerificationRecord) GetBlobData() []byte {
	if x != nil {
		return x.BlobData
	}
	return nil
}

func (x *CommitVerificationRecord) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *CommitVerificationRecord) GetMessage() *Any2AnyMessage {
	if x != nil {
		return x.Message
	}
	return nil
}

type WriteCommitVerificationRequest struct {
	state                    protoimpl.MessageState    `protogen:"open.v1"`
	CommitVerificationRecord *CommitVerificationRecord `protobuf:"bytes,1,opt,name=commit_verification_record,json=commitVerificationRecord,proto3" json:"commit_verification_record,omitempty"`
	// This is the id of the signer. In concrete term every node operator will have their own id which identify them uniquely
	ParticipantId string `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	// This is used to seperate different group of signers. As we can have multiple commit verifiers
	CommitteeId   string `protobuf:"bytes,3,opt,name=committee_id,json=committeeId,proto3" json:"committee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteCommitVerificationRequest) Reset() {
	*x = WriteCommitVerificationRequest{}
	mi := &file_proto_aggregator_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteCommitVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCommitVerificationRequest) ProtoMessage() {}

func (x *WriteCommitVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCommitVerificationRequest.ProtoReflect.Descriptor instead.
func (*WriteCommitVerificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{5}
}

func (x *WriteCommitVerificationRequest) GetCommitVerificationRecord() *CommitVerificationRecord {
	if x != nil {
		return x.CommitVerificationRecord
	}
	return nil
}

func (x *WriteCommitVerificationRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *WriteCommitVerificationRequest) GetCommitteeId() string {
	if x != nil {
		return x.CommitteeId
	}
	return ""
}

type WriteCommitVerificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        WriteStatus            `protobuf:"varint,1,opt,name=status,proto3,enum=v2.aggregator.WriteStatus" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteCommitVerificationResponse) Reset() {
	*x = WriteCommitVerificationResponse{}
	mi := &file_proto_aggregator_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteCommitVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteCommitVerificationResponse) ProtoMessage() {}

func (x *WriteCommitVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteCommitVerificationResponse.ProtoReflect.Descriptor instead.
func (*WriteCommitVerificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{6}
}

func (x *WriteCommitVerificationResponse) GetStatus() WriteStatus {
	if x != nil {
		return x.Status
	}
	return WriteStatus_WRITE_STATUS_UNSPECIFIED
}

type ReadCommitVerificationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MessageId     []byte                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	CommitteeId   string                 `protobuf:"bytes,3,opt,name=committee_id,json=committeeId,proto3" json:"committee_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadCommitVerificationRequest) Reset() {
	*x = ReadCommitVerificationRequest{}
	mi := &file_proto_aggregator_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadCommitVerificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCommitVerificationRequest) ProtoMessage() {}

func (x *ReadCommitVerificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCommitVerificationRequest.ProtoReflect.Descriptor instead.
func (*ReadCommitVerificationRequest) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{7}
}

func (x *ReadCommitVerificationRequest) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *ReadCommitVerificationRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *ReadCommitVerificationRequest) GetCommitteeId() string {
	if x != nil {
		return x.CommitteeId
	}
	return ""
}

type ReadCommitVerificationResponse struct {
	state                    protoimpl.MessageState    `protogen:"open.v1"`
	CommitVerificationRecord *CommitVerificationRecord `protobuf:"bytes,1,opt,name=commit_verification_record,json=commitVerificationRecord,proto3" json:"commit_verification_record,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ReadCommitVerificationResponse) Reset() {
	*x = ReadCommitVerificationResponse{}
	mi := &file_proto_aggregator_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadCommitVerificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadCommitVerificationResponse) ProtoMessage() {}

func (x *ReadCommitVerificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_aggregator_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadCommitVerificationResponse.ProtoReflect.Descriptor instead.
func (*ReadCommitVerificationResponse) Descriptor() ([]byte, []int) {
	return file_proto_aggregator_proto_rawDescGZIP(), []int{8}
}

func (x *ReadCommitVerificationResponse) GetCommitVerificationRecord() *CommitVerificationRecord {
	if x != nil {
		return x.CommitVerificationRecord
	}
	return nil
}

var File_proto_aggregator_proto protoreflect.FileDescriptor

const file_proto_aggregator_proto_rawDesc = "" +
	"\n" +
	"\x16proto/aggregator.proto\x12\rv2.aggregator\"\xc2\x01\n" +
	"\x14Any2AnyMessageHeader\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\fR\tmessageId\x122\n" +
	"\x15source_chain_selector\x18\x02 \x01(\x04R\x13sourceChainSelector\x12.\n" +
	"\x13dest_chain_selector\x18\x03 \x01(\x04R\x11destChainSelector\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x04R\x0esequenceNumber\"\xe4\x04\n" +
	"\x0eAny2AnyMessage\x12;\n" +
	"\x06header\x18\x01 \x01(\v2#.v2.aggregator.Any2AnyMessageHeaderR\x06header\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\fR\x06sender\x12%\n" +
	"\x0eonramp_address\x18\x03 \x01(\fR\ronrampAddress\x12\x12\n" +
	"\x04data\x18\x04 \x01(\fR\x04data\x12\x1a\n" +
	"\breceiver\x18\x05 \x01(\fR\breceiver\x12\x1b\n" +
	"\tfee_token\x18\x06 \x01(\fR\bfeeToken\x12(\n" +
	"\x10fee_token_amount\x18\a \x01(\fR\x0efeeTokenAmount\x12&\n" +
	"\x0ffee_value_juels\x18\b \x01(\fR\rfeeValueJuels\x12J\n" +
	"\x0etoken_transfer\x18\t \x01(\v2#.v2.aggregator.Any2AnyTokenTransferR\rtokenTransfer\x12F\n" +
	"\x11verifier_receipts\x18\n" +
	" \x03(\v2\x19.v2.aggregator.AnyReceiptR\x10verifierReceipts\x12D\n" +
	"\x10executor_receipt\x18\v \x01(\v2\x19.v2.aggregator.AnyReceiptR\x0fexecutorReceipt\x12>\n" +
	"\rtoken_receipt\x18\f \x01(\v2\x19.v2.aggregator.AnyReceiptR\ftokenReceipt\x12\x1d\n" +
	"\n" +
	"extra_args\x18\r \x01(\fR\textraArgs\"\xad\x01\n" +
	"\x14Any2AnyTokenTransfer\x120\n" +
	"\x14source_token_address\x18\x01 \x01(\fR\x12sourceTokenAddress\x12,\n" +
	"\x12dest_token_address\x18\x02 \x01(\fR\x10destTokenAddress\x12\x1d\n" +
	"\n" +
	"extra_data\x18\x03 \x01(\fR\textraData\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\fR\x06amount\"\xc3\x01\n" +
	"\n" +
	"AnyReceipt\x12\x16\n" +
	"\x06issuer\x18\x01 \x01(\fR\x06issuer\x12(\n" +
	"\x10fee_token_amount\x18\x02 \x01(\fR\x0efeeTokenAmount\x12$\n" +
	"\x0edest_gas_limit\x18\x03 \x01(\x04R\fdestGasLimit\x12.\n" +
	"\x13dest_bytes_overhead\x18\x04 \x01(\rR\x11destBytesOverhead\x12\x1d\n" +
	"\n" +
	"extra_args\x18\x05 \x01(\fR\textraArgs\"\xc1\x03\n" +
	"\x18CommitVerificationRecord\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\fR\tmessageId\x12'\n" +
	"\x0fsequence_number\x18\x02 \x01(\x04R\x0esequenceNumber\x122\n" +
	"\x15source_chain_selector\x18\x03 \x01(\x04R\x13sourceChainSelector\x12.\n" +
	"\x13dest_chain_selector\x18\x04 \x01(\x04R\x11destChainSelector\x126\n" +
	"\x17source_verifier_address\x18\x05 \x01(\fR\x15sourceVerifierAddress\x122\n" +
	"\x15dest_verifier_address\x18\x06 \x01(\fR\x13destVerifierAddress\x12\x19\n" +
	"\bccv_data\x18\a \x01(\fR\accvData\x12\x1b\n" +
	"\tblob_data\x18\b \x01(\fR\bblobData\x12\x1c\n" +
	"\ttimestamp\x18\t \x01(\rR\ttimestamp\x127\n" +
	"\amessage\x18\n" +
	" \x01(\v2\x1d.v2.aggregator.Any2AnyMessageR\amessage\"\xd1\x01\n" +
	"\x1eWriteCommitVerificationRequest\x12e\n" +
	"\x1acommit_verification_record\x18\x01 \x01(\v2'.v2.aggregator.CommitVerificationRecordR\x18commitVerificationRecord\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x12!\n" +
	"\fcommittee_id\x18\x03 \x01(\tR\vcommitteeId\"U\n" +
	"\x1fWriteCommitVerificationResponse\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.v2.aggregator.WriteStatusR\x06status\"\x88\x01\n" +
	"\x1dReadCommitVerificationRequest\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\fR\tmessageId\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x12!\n" +
	"\fcommittee_id\x18\x03 \x01(\tR\vcommitteeId\"\x87\x01\n" +
	"\x1eReadCommitVerificationResponse\x12e\n" +
	"\x1acommit_verification_record\x18\x01 \x01(\v2'.v2.aggregator.CommitVerificationRecordR\x18commitVerificationRecord*^\n" +
	"\vWriteStatus\x12\x1c\n" +
	"\x18WRITE_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13WRITE_STATUS_FAILED\x10\x01\x12\x18\n" +
	"\x14WRITE_STATUS_SUCCESS\x10\x022\x84\x02\n" +
	"\x11AggregatorService\x12x\n" +
	"\x17WriteCommitVerification\x12-.v2.aggregator.WriteCommitVerificationRequest\x1a..v2.aggregator.WriteCommitVerificationResponse\x12u\n" +
	"\x16ReadCommitVerification\x12,.v2.aggregator.ReadCommitVerificationRequest\x1a-.v2.aggregator.ReadCommitVerificationResponseB\x0fZ\rpb/aggregatorb\x06proto3"

var (
	file_proto_aggregator_proto_rawDescOnce sync.Once
	file_proto_aggregator_proto_rawDescData []byte
)

func file_proto_aggregator_proto_rawDescGZIP() []byte {
	file_proto_aggregator_proto_rawDescOnce.Do(func() {
		file_proto_aggregator_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_aggregator_proto_rawDesc), len(file_proto_aggregator_proto_rawDesc)))
	})
	return file_proto_aggregator_proto_rawDescData
}

var file_proto_aggregator_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_aggregator_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_aggregator_proto_goTypes = []any{
	(WriteStatus)(0),                        // 0: v2.aggregator.WriteStatus
	(*Any2AnyMessageHeader)(nil),            // 1: v2.aggregator.Any2AnyMessageHeader
	(*Any2AnyMessage)(nil),                  // 2: v2.aggregator.Any2AnyMessage
	(*Any2AnyTokenTransfer)(nil),            // 3: v2.aggregator.Any2AnyTokenTransfer
	(*AnyReceipt)(nil),                      // 4: v2.aggregator.AnyReceipt
	(*CommitVerificationRecord)(nil),        // 5: v2.aggregator.CommitVerificationRecord
	(*WriteCommitVerificationRequest)(nil),  // 6: v2.aggregator.WriteCommitVerificationRequest
	(*WriteCommitVerificationResponse)(nil), // 7: v2.aggregator.WriteCommitVerificationResponse
	(*ReadCommitVerificationRequest)(nil),   // 8: v2.aggregator.ReadCommitVerificationRequest
	(*ReadCommitVerificationResponse)(nil),  // 9: v2.aggregator.ReadCommitVerificationResponse
}
var file_proto_aggregator_proto_depIdxs = []int32{
	1,  // 0: v2.aggregator.Any2AnyMessage.header:type_name -> v2.aggregator.Any2AnyMessageHeader
	3,  // 1: v2.aggregator.Any2AnyMessage.token_transfer:type_name -> v2.aggregator.Any2AnyTokenTransfer
	4,  // 2: v2.aggregator.Any2AnyMessage.verifier_receipts:type_name -> v2.aggregator.AnyReceipt
	4,  // 3: v2.aggregator.Any2AnyMessage.executor_receipt:type_name -> v2.aggregator.AnyReceipt
	4,  // 4: v2.aggregator.Any2AnyMessage.token_receipt:type_name -> v2.aggregator.AnyReceipt
	2,  // 5: v2.aggregator.CommitVerificationRecord.message:type_name -> v2.aggregator.Any2AnyMessage
	5,  // 6: v2.aggregator.WriteCommitVerificationRequest.commit_verification_record:type_name -> v2.aggregator.CommitVerificationRecord
	0,  // 7: v2.aggregator.WriteCommitVerificationResponse.status:type_name -> v2.aggregator.WriteStatus
	5,  // 8: v2.aggregator.ReadCommitVerificationResponse.commit_verification_record:type_name -> v2.aggregator.CommitVerificationRecord
	6,  // 9: v2.aggregator.AggregatorService.WriteCommitVerification:input_type -> v2.aggregator.WriteCommitVerificationRequest
	8,  // 10: v2.aggregator.AggregatorService.ReadCommitVerification:input_type -> v2.aggregator.ReadCommitVerificationRequest
	7,  // 11: v2.aggregator.AggregatorService.WriteCommitVerification:output_type -> v2.aggregator.WriteCommitVerificationResponse
	9,  // 12: v2.aggregator.AggregatorService.ReadCommitVerification:output_type -> v2.aggregator.ReadCommitVerificationResponse
	11, // [11:13] is the sub-list for method output_type
	9,  // [9:11] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_proto_aggregator_proto_init() }
func file_proto_aggregator_proto_init() {
	if File_proto_aggregator_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_aggregator_proto_rawDesc), len(file_proto_aggregator_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_aggregator_proto_goTypes,
		DependencyIndexes: file_proto_aggregator_proto_depIdxs,
		EnumInfos:         file_proto_aggregator_proto_enumTypes,
		MessageInfos:      file_proto_aggregator_proto_msgTypes,
	}.Build()
	File_proto_aggregator_proto = out.File
	file_proto_aggregator_proto_goTypes = nil
	file_proto_aggregator_proto_depIdxs = nil
}
