// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0
// source: pkg/ocrtypecodec/v1/ocrtypes.proto

package ocrtypecodecpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommitQuery struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	MerkleRootQuery *MerkleRootQuery       `protobuf:"bytes,1,opt,name=merkle_root_query,json=merkleRootQuery,proto3" json:"merkle_root_query,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CommitQuery) Reset() {
	*x = CommitQuery{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitQuery) ProtoMessage() {}

func (x *CommitQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitQuery.ProtoReflect.Descriptor instead.
func (*CommitQuery) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{0}
}

func (x *CommitQuery) GetMerkleRootQuery() *MerkleRootQuery {
	if x != nil {
		return x.MerkleRootQuery
	}
	return nil
}

type CommitObservation struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	MerkleRootObs         *MerkleRootObservation `protobuf:"bytes,1,opt,name=merkle_root_obs,json=merkleRootObs,proto3" json:"merkle_root_obs,omitempty"`
	TokenPriceObs         *TokenPriceObservation `protobuf:"bytes,2,opt,name=token_price_obs,json=tokenPriceObs,proto3" json:"token_price_obs,omitempty"`
	ChainFeeObs           *ChainFeeObservation   `protobuf:"bytes,3,opt,name=chain_fee_obs,json=chainFeeObs,proto3" json:"chain_fee_obs,omitempty"`
	DiscoveryObs          *DiscoveryObservation  `protobuf:"bytes,4,opt,name=discovery_obs,json=discoveryObs,proto3" json:"discovery_obs,omitempty"`
	FChain                map[uint64]int32       `protobuf:"bytes,5,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to f
	OnchainPriceOcrSeqNum uint64                 `protobuf:"varint,6,opt,name=onchain_price_ocr_seq_num,json=onchainPriceOcrSeqNum,proto3" json:"onchain_price_ocr_seq_num,omitempty"`                         // the ocr sequence number of the last report with prices seen onchain
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *CommitObservation) Reset() {
	*x = CommitObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitObservation) ProtoMessage() {}

func (x *CommitObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitObservation.ProtoReflect.Descriptor instead.
func (*CommitObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{1}
}

func (x *CommitObservation) GetMerkleRootObs() *MerkleRootObservation {
	if x != nil {
		return x.MerkleRootObs
	}
	return nil
}

func (x *CommitObservation) GetTokenPriceObs() *TokenPriceObservation {
	if x != nil {
		return x.TokenPriceObs
	}
	return nil
}

func (x *CommitObservation) GetChainFeeObs() *ChainFeeObservation {
	if x != nil {
		return x.ChainFeeObs
	}
	return nil
}

func (x *CommitObservation) GetDiscoveryObs() *DiscoveryObservation {
	if x != nil {
		return x.DiscoveryObs
	}
	return nil
}

func (x *CommitObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

func (x *CommitObservation) GetOnchainPriceOcrSeqNum() uint64 {
	if x != nil {
		return x.OnchainPriceOcrSeqNum
	}
	return 0
}

type CommitOutcome struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MerkleRootOutcome *MerkleRootOutcome     `protobuf:"bytes,1,opt,name=merkle_root_outcome,json=merkleRootOutcome,proto3" json:"merkle_root_outcome,omitempty"`
	TokenPriceOutcome *TokenPriceOutcome     `protobuf:"bytes,2,opt,name=token_price_outcome,json=tokenPriceOutcome,proto3" json:"token_price_outcome,omitempty"`
	ChainFeeOutcome   *ChainFeeOutcome       `protobuf:"bytes,3,opt,name=chain_fee_outcome,json=chainFeeOutcome,proto3" json:"chain_fee_outcome,omitempty"`
	MainOutcome       *MainOutcome           `protobuf:"bytes,4,opt,name=main_outcome,json=mainOutcome,proto3" json:"main_outcome,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *CommitOutcome) Reset() {
	*x = CommitOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitOutcome) ProtoMessage() {}

func (x *CommitOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitOutcome.ProtoReflect.Descriptor instead.
func (*CommitOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{2}
}

func (x *CommitOutcome) GetMerkleRootOutcome() *MerkleRootOutcome {
	if x != nil {
		return x.MerkleRootOutcome
	}
	return nil
}

func (x *CommitOutcome) GetTokenPriceOutcome() *TokenPriceOutcome {
	if x != nil {
		return x.TokenPriceOutcome
	}
	return nil
}

func (x *CommitOutcome) GetChainFeeOutcome() *ChainFeeOutcome {
	if x != nil {
		return x.ChainFeeOutcome
	}
	return nil
}

func (x *CommitOutcome) GetMainOutcome() *MainOutcome {
	if x != nil {
		return x.MainOutcome
	}
	return nil
}

type ExecObservation struct {
	state                 protoimpl.MessageState         `protogen:"open.v1"`
	CommitReports         map[uint64]*CommitObservations `protobuf:"bytes,1,rep,name=commit_reports,json=commitReports,proto3" json:"commit_reports,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`     // chainSelector to commitObservations
	SeqNumsToMsgs         map[uint64]*SeqNumToMessage    `protobuf:"bytes,2,rep,name=seq_nums_to_msgs,json=seqNumsToMsgs,proto3" json:"seq_nums_to_msgs,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // chainSelector to seqNum to msg
	MsgHashes             map[uint64]*SeqNumToBytes      `protobuf:"bytes,3,rep,name=msg_hashes,json=msgHashes,proto3" json:"msg_hashes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                 // chainSelector to seqNum to bytes32
	TokenDataObservations *TokenDataObservations         `protobuf:"bytes,4,opt,name=token_data_observations,json=tokenDataObservations,proto3" json:"token_data_observations,omitempty"`
	// Deprecated: Marked as deprecated in pkg/ocrtypecodec/v1/ocrtypes.proto.
	CostlyMessages [][]byte                      `protobuf:"bytes,5,rep,name=costly_messages,json=costlyMessages,proto3" json:"costly_messages,omitempty"` // DEPRECATED: Message IDs of costly messages
	Nonces         map[uint64]*StringAddrToNonce `protobuf:"bytes,6,rep,name=nonces,proto3" json:"nonces,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Contracts      *DiscoveryObservation         `protobuf:"bytes,7,opt,name=contracts,proto3" json:"contracts,omitempty"`
	FChain         map[uint64]int32              `protobuf:"bytes,8,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to f
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ExecObservation) Reset() {
	*x = ExecObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecObservation) ProtoMessage() {}

func (x *ExecObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecObservation.ProtoReflect.Descriptor instead.
func (*ExecObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{3}
}

func (x *ExecObservation) GetCommitReports() map[uint64]*CommitObservations {
	if x != nil {
		return x.CommitReports
	}
	return nil
}

func (x *ExecObservation) GetSeqNumsToMsgs() map[uint64]*SeqNumToMessage {
	if x != nil {
		return x.SeqNumsToMsgs
	}
	return nil
}

func (x *ExecObservation) GetMsgHashes() map[uint64]*SeqNumToBytes {
	if x != nil {
		return x.MsgHashes
	}
	return nil
}

func (x *ExecObservation) GetTokenDataObservations() *TokenDataObservations {
	if x != nil {
		return x.TokenDataObservations
	}
	return nil
}

// Deprecated: Marked as deprecated in pkg/ocrtypecodec/v1/ocrtypes.proto.
func (x *ExecObservation) GetCostlyMessages() [][]byte {
	if x != nil {
		return x.CostlyMessages
	}
	return nil
}

func (x *ExecObservation) GetNonces() map[uint64]*StringAddrToNonce {
	if x != nil {
		return x.Nonces
	}
	return nil
}

func (x *ExecObservation) GetContracts() *DiscoveryObservation {
	if x != nil {
		return x.Contracts
	}
	return nil
}

func (x *ExecObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

type ExecOutcome struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	PluginState          string                 `protobuf:"bytes,1,opt,name=plugin_state,json=pluginState,proto3" json:"plugin_state,omitempty"`
	CommitReports        []*CommitData          `protobuf:"bytes,2,rep,name=commit_reports,json=commitReports,proto3" json:"commit_reports,omitempty"`
	ExecutePluginReport  *ExecutePluginReport   `protobuf:"bytes,3,opt,name=execute_plugin_report,json=executePluginReport,proto3" json:"execute_plugin_report,omitempty"` // DEPRECATED: Use execute_plugin_reports instead
	ExecutePluginReports []*ExecutePluginReport `protobuf:"bytes,4,rep,name=execute_plugin_reports,json=executePluginReports,proto3" json:"execute_plugin_reports,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ExecOutcome) Reset() {
	*x = ExecOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecOutcome) ProtoMessage() {}

func (x *ExecOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecOutcome.ProtoReflect.Descriptor instead.
func (*ExecOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{4}
}

func (x *ExecOutcome) GetPluginState() string {
	if x != nil {
		return x.PluginState
	}
	return ""
}

func (x *ExecOutcome) GetCommitReports() []*CommitData {
	if x != nil {
		return x.CommitReports
	}
	return nil
}

func (x *ExecOutcome) GetExecutePluginReport() *ExecutePluginReport {
	if x != nil {
		return x.ExecutePluginReport
	}
	return nil
}

func (x *ExecOutcome) GetExecutePluginReports() []*ExecutePluginReport {
	if x != nil {
		return x.ExecutePluginReports
	}
	return nil
}

type MerkleRootQuery struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	RetryRmnSignatures bool                   `protobuf:"varint,1,opt,name=retry_rmn_signatures,json=retryRmnSignatures,proto3" json:"retry_rmn_signatures,omitempty"`
	RmnSignatures      *ReportSignatures      `protobuf:"bytes,2,opt,name=rmn_signatures,json=rmnSignatures,proto3" json:"rmn_signatures,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MerkleRootQuery) Reset() {
	*x = MerkleRootQuery{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleRootQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRootQuery) ProtoMessage() {}

func (x *MerkleRootQuery) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRootQuery.ProtoReflect.Descriptor instead.
func (*MerkleRootQuery) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{5}
}

func (x *MerkleRootQuery) GetRetryRmnSignatures() bool {
	if x != nil {
		return x.RetryRmnSignatures
	}
	return false
}

func (x *MerkleRootQuery) GetRmnSignatures() *ReportSignatures {
	if x != nil {
		return x.RmnSignatures
	}
	return nil
}

type ReportSignatures struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signatures    []*SignatureEcdsa      `protobuf:"bytes,1,rep,name=signatures,proto3" json:"signatures,omitempty"`
	LaneUpdates   []*DestChainUpdate     `protobuf:"bytes,2,rep,name=lane_updates,json=laneUpdates,proto3" json:"lane_updates,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportSignatures) Reset() {
	*x = ReportSignatures{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportSignatures) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportSignatures) ProtoMessage() {}

func (x *ReportSignatures) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportSignatures.ProtoReflect.Descriptor instead.
func (*ReportSignatures) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{6}
}

func (x *ReportSignatures) GetSignatures() []*SignatureEcdsa {
	if x != nil {
		return x.Signatures
	}
	return nil
}

func (x *ReportSignatures) GetLaneUpdates() []*DestChainUpdate {
	if x != nil {
		return x.LaneUpdates
	}
	return nil
}

type SignatureEcdsa struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R             []byte                 `protobuf:"bytes,1,opt,name=r,proto3" json:"r,omitempty"`
	S             []byte                 `protobuf:"bytes,2,opt,name=s,proto3" json:"s,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignatureEcdsa) Reset() {
	*x = SignatureEcdsa{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignatureEcdsa) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureEcdsa) ProtoMessage() {}

func (x *SignatureEcdsa) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureEcdsa.ProtoReflect.Descriptor instead.
func (*SignatureEcdsa) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{7}
}

func (x *SignatureEcdsa) GetR() []byte {
	if x != nil {
		return x.R
	}
	return nil
}

func (x *SignatureEcdsa) GetS() []byte {
	if x != nil {
		return x.S
	}
	return nil
}

type DestChainUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LaneSource    *SourceChainMeta       `protobuf:"bytes,1,opt,name=lane_source,json=laneSource,proto3" json:"lane_source,omitempty"`
	SeqNumRange   *SeqNumRange           `protobuf:"bytes,2,opt,name=seq_num_range,json=seqNumRange,proto3" json:"seq_num_range,omitempty"`
	Root          []byte                 `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"` // bytes32
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestChainUpdate) Reset() {
	*x = DestChainUpdate{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestChainUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestChainUpdate) ProtoMessage() {}

func (x *DestChainUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestChainUpdate.ProtoReflect.Descriptor instead.
func (*DestChainUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{8}
}

func (x *DestChainUpdate) GetLaneSource() *SourceChainMeta {
	if x != nil {
		return x.LaneSource
	}
	return nil
}

func (x *DestChainUpdate) GetSeqNumRange() *SeqNumRange {
	if x != nil {
		return x.SeqNumRange
	}
	return nil
}

func (x *DestChainUpdate) GetRoot() []byte {
	if x != nil {
		return x.Root
	}
	return nil
}

type MerkleRootObservation struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MerkleRoots        []*MerkleRootChain     `protobuf:"bytes,1,rep,name=merkle_roots,json=merkleRoots,proto3" json:"merkle_roots,omitempty"`
	RmnEnabledChains   map[uint64]bool        `protobuf:"bytes,2,rep,name=rmn_enabled_chains,json=rmnEnabledChains,proto3" json:"rmn_enabled_chains,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to bool
	OnRampMaxSeqNums   []*SeqNumChain         `protobuf:"bytes,3,rep,name=on_ramp_max_seq_nums,json=onRampMaxSeqNums,proto3" json:"on_ramp_max_seq_nums,omitempty"`
	OffRampNextSeqNums []*SeqNumChain         `protobuf:"bytes,4,rep,name=off_ramp_next_seq_nums,json=offRampNextSeqNums,proto3" json:"off_ramp_next_seq_nums,omitempty"`
	RmnRemoteConfig    *RmnRemoteConfig       `protobuf:"bytes,5,opt,name=rmn_remote_config,json=rmnRemoteConfig,proto3" json:"rmn_remote_config,omitempty"`
	FChain             map[uint64]int32       `protobuf:"bytes,6,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to f
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *MerkleRootObservation) Reset() {
	*x = MerkleRootObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleRootObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRootObservation) ProtoMessage() {}

func (x *MerkleRootObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRootObservation.ProtoReflect.Descriptor instead.
func (*MerkleRootObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{9}
}

func (x *MerkleRootObservation) GetMerkleRoots() []*MerkleRootChain {
	if x != nil {
		return x.MerkleRoots
	}
	return nil
}

func (x *MerkleRootObservation) GetRmnEnabledChains() map[uint64]bool {
	if x != nil {
		return x.RmnEnabledChains
	}
	return nil
}

func (x *MerkleRootObservation) GetOnRampMaxSeqNums() []*SeqNumChain {
	if x != nil {
		return x.OnRampMaxSeqNums
	}
	return nil
}

func (x *MerkleRootObservation) GetOffRampNextSeqNums() []*SeqNumChain {
	if x != nil {
		return x.OffRampNextSeqNums
	}
	return nil
}

func (x *MerkleRootObservation) GetRmnRemoteConfig() *RmnRemoteConfig {
	if x != nil {
		return x.RmnRemoteConfig
	}
	return nil
}

func (x *MerkleRootObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

type RmnRemoteConfig struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ContractAddress  []byte                 `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	ConfigDigest     []byte                 `protobuf:"bytes,2,opt,name=config_digest,json=configDigest,proto3" json:"config_digest,omitempty"`
	Signers          []*RemoteSignerInfo    `protobuf:"bytes,3,rep,name=signers,proto3" json:"signers,omitempty"`
	FSign            uint64                 `protobuf:"varint,4,opt,name=f_sign,json=fSign,proto3" json:"f_sign,omitempty"`
	ConfigVersion    uint32                 `protobuf:"varint,5,opt,name=config_version,json=configVersion,proto3" json:"config_version,omitempty"`
	RmnReportVersion []byte                 `protobuf:"bytes,6,opt,name=rmn_report_version,json=rmnReportVersion,proto3" json:"rmn_report_version,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RmnRemoteConfig) Reset() {
	*x = RmnRemoteConfig{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RmnRemoteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RmnRemoteConfig) ProtoMessage() {}

func (x *RmnRemoteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RmnRemoteConfig.ProtoReflect.Descriptor instead.
func (*RmnRemoteConfig) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{10}
}

func (x *RmnRemoteConfig) GetContractAddress() []byte {
	if x != nil {
		return x.ContractAddress
	}
	return nil
}

func (x *RmnRemoteConfig) GetConfigDigest() []byte {
	if x != nil {
		return x.ConfigDigest
	}
	return nil
}

func (x *RmnRemoteConfig) GetSigners() []*RemoteSignerInfo {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *RmnRemoteConfig) GetFSign() uint64 {
	if x != nil {
		return x.FSign
	}
	return 0
}

func (x *RmnRemoteConfig) GetConfigVersion() uint32 {
	if x != nil {
		return x.ConfigVersion
	}
	return 0
}

func (x *RmnRemoteConfig) GetRmnReportVersion() []byte {
	if x != nil {
		return x.RmnReportVersion
	}
	return nil
}

type RemoteSignerInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	OnchainPublicKey []byte                 `protobuf:"bytes,1,opt,name=onchain_public_key,json=onchainPublicKey,proto3" json:"onchain_public_key,omitempty"`
	NodeIndex        uint64                 `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RemoteSignerInfo) Reset() {
	*x = RemoteSignerInfo{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoteSignerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteSignerInfo) ProtoMessage() {}

func (x *RemoteSignerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteSignerInfo.ProtoReflect.Descriptor instead.
func (*RemoteSignerInfo) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{11}
}

func (x *RemoteSignerInfo) GetOnchainPublicKey() []byte {
	if x != nil {
		return x.OnchainPublicKey
	}
	return nil
}

func (x *RemoteSignerInfo) GetNodeIndex() uint64 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

type TokenPriceObservation struct {
	state                 protoimpl.MessageState     `protogen:"open.v1"`
	FeedTokenPrices       map[string][]byte          `protobuf:"bytes,1,rep,name=feed_token_prices,json=feedTokenPrices,proto3" json:"feed_token_prices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FeeQuoterTokenUpdates map[string]*TimestampedBig `protobuf:"bytes,2,rep,name=fee_quoter_token_updates,json=feeQuoterTokenUpdates,proto3" json:"fee_quoter_token_updates,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	FChain                map[uint64]int32           `protobuf:"bytes,3,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to f
	Timestamp             *timestamppb.Timestamp     `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *TokenPriceObservation) Reset() {
	*x = TokenPriceObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenPriceObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceObservation) ProtoMessage() {}

func (x *TokenPriceObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceObservation.ProtoReflect.Descriptor instead.
func (*TokenPriceObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{12}
}

func (x *TokenPriceObservation) GetFeedTokenPrices() map[string][]byte {
	if x != nil {
		return x.FeedTokenPrices
	}
	return nil
}

func (x *TokenPriceObservation) GetFeeQuoterTokenUpdates() map[string]*TimestampedBig {
	if x != nil {
		return x.FeeQuoterTokenUpdates
	}
	return nil
}

func (x *TokenPriceObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

func (x *TokenPriceObservation) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ChainFeeObservation struct {
	state             protoimpl.MessageState         `protogen:"open.v1"`
	FeeComponents     map[uint64]*ChainFeeComponents `protobuf:"bytes,1,rep,name=fee_components,json=feeComponents,proto3" json:"fee_components,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`               // chainSelector to ChainFeeComponents
	NativeTokenPrices map[uint64][]byte              `protobuf:"bytes,2,rep,name=native_token_prices,json=nativeTokenPrices,proto3" json:"native_token_prices,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // chainSelector to bigInt bytes
	ChainFeeUpdates   map[uint64]*ChainFeeUpdate     `protobuf:"bytes,3,rep,name=chain_fee_updates,json=chainFeeUpdates,proto3" json:"chain_fee_updates,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`       // chainSelector to ChainFeeUpdate
	FChain            map[uint64]int32               `protobuf:"bytes,4,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`                                   // chainSelector to f
	TimestampNow      *timestamppb.Timestamp         `protobuf:"bytes,5,opt,name=timestamp_now,json=timestampNow,proto3" json:"timestamp_now,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ChainFeeObservation) Reset() {
	*x = ChainFeeObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainFeeObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainFeeObservation) ProtoMessage() {}

func (x *ChainFeeObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainFeeObservation.ProtoReflect.Descriptor instead.
func (*ChainFeeObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{13}
}

func (x *ChainFeeObservation) GetFeeComponents() map[uint64]*ChainFeeComponents {
	if x != nil {
		return x.FeeComponents
	}
	return nil
}

func (x *ChainFeeObservation) GetNativeTokenPrices() map[uint64][]byte {
	if x != nil {
		return x.NativeTokenPrices
	}
	return nil
}

func (x *ChainFeeObservation) GetChainFeeUpdates() map[uint64]*ChainFeeUpdate {
	if x != nil {
		return x.ChainFeeUpdates
	}
	return nil
}

func (x *ChainFeeObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

func (x *ChainFeeObservation) GetTimestampNow() *timestamppb.Timestamp {
	if x != nil {
		return x.TimestampNow
	}
	return nil
}

type ChainFeeComponents struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	ExecutionFee        []byte                 `protobuf:"bytes,1,opt,name=execution_fee,json=executionFee,proto3" json:"execution_fee,omitempty"`                        // bigInt bytes
	DataAvailabilityFee []byte                 `protobuf:"bytes,2,opt,name=data_availability_fee,json=dataAvailabilityFee,proto3" json:"data_availability_fee,omitempty"` // bigInt bytes
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChainFeeComponents) Reset() {
	*x = ChainFeeComponents{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainFeeComponents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainFeeComponents) ProtoMessage() {}

func (x *ChainFeeComponents) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainFeeComponents.ProtoReflect.Descriptor instead.
func (*ChainFeeComponents) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{14}
}

func (x *ChainFeeComponents) GetExecutionFee() []byte {
	if x != nil {
		return x.ExecutionFee
	}
	return nil
}

func (x *ChainFeeComponents) GetDataAvailabilityFee() []byte {
	if x != nil {
		return x.DataAvailabilityFee
	}
	return nil
}

type ChainFeeUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainFee      *ComponentsUSDPrices   `protobuf:"bytes,1,opt,name=chain_fee,json=chainFee,proto3" json:"chain_fee,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainFeeUpdate) Reset() {
	*x = ChainFeeUpdate{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainFeeUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainFeeUpdate) ProtoMessage() {}

func (x *ChainFeeUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainFeeUpdate.ProtoReflect.Descriptor instead.
func (*ChainFeeUpdate) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{15}
}

func (x *ChainFeeUpdate) GetChainFee() *ComponentsUSDPrices {
	if x != nil {
		return x.ChainFee
	}
	return nil
}

func (x *ChainFeeUpdate) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ComponentsUSDPrices struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ExecutionFeePriceUsd []byte                 `protobuf:"bytes,1,opt,name=execution_fee_price_usd,json=executionFeePriceUsd,proto3" json:"execution_fee_price_usd,omitempty"` // bigInt bytes
	DataAvFeePriceUsd    []byte                 `protobuf:"bytes,2,opt,name=data_av_fee_price_usd,json=dataAvFeePriceUsd,proto3" json:"data_av_fee_price_usd,omitempty"`        // bigInt bytes
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ComponentsUSDPrices) Reset() {
	*x = ComponentsUSDPrices{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ComponentsUSDPrices) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComponentsUSDPrices) ProtoMessage() {}

func (x *ComponentsUSDPrices) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComponentsUSDPrices.ProtoReflect.Descriptor instead.
func (*ComponentsUSDPrices) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{16}
}

func (x *ComponentsUSDPrices) GetExecutionFeePriceUsd() []byte {
	if x != nil {
		return x.ExecutionFeePriceUsd
	}
	return nil
}

func (x *ComponentsUSDPrices) GetDataAvFeePriceUsd() []byte {
	if x != nil {
		return x.DataAvFeePriceUsd
	}
	return nil
}

type DiscoveryObservation struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	FChain        map[uint64]int32            `protobuf:"bytes,1,rep,name=f_chain,json=fChain,proto3" json:"f_chain,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to f
	ContractNames *ContractNameChainAddresses `protobuf:"bytes,2,opt,name=contract_names,json=contractNames,proto3" json:"contract_names,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiscoveryObservation) Reset() {
	*x = DiscoveryObservation{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiscoveryObservation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryObservation) ProtoMessage() {}

func (x *DiscoveryObservation) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryObservation.ProtoReflect.Descriptor instead.
func (*DiscoveryObservation) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{17}
}

func (x *DiscoveryObservation) GetFChain() map[uint64]int32 {
	if x != nil {
		return x.FChain
	}
	return nil
}

func (x *DiscoveryObservation) GetContractNames() *ContractNameChainAddresses {
	if x != nil {
		return x.ContractNames
	}
	return nil
}

type ContractNameChainAddresses struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Addresses     map[string]*ChainAddressMap `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // contract name to chain to address
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContractNameChainAddresses) Reset() {
	*x = ContractNameChainAddresses{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContractNameChainAddresses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractNameChainAddresses) ProtoMessage() {}

func (x *ContractNameChainAddresses) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractNameChainAddresses.ProtoReflect.Descriptor instead.
func (*ContractNameChainAddresses) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{18}
}

func (x *ContractNameChainAddresses) GetAddresses() map[string]*ChainAddressMap {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ChainAddressMap struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ChainAddresses map[uint64][]byte      `protobuf:"bytes,1,rep,name=chain_addresses,json=chainAddresses,proto3" json:"chain_addresses,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // chainSelector to address
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ChainAddressMap) Reset() {
	*x = ChainAddressMap{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainAddressMap) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainAddressMap) ProtoMessage() {}

func (x *ChainAddressMap) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainAddressMap.ProtoReflect.Descriptor instead.
func (*ChainAddressMap) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{19}
}

func (x *ChainAddressMap) GetChainAddresses() map[uint64][]byte {
	if x != nil {
		return x.ChainAddresses
	}
	return nil
}

type MerkleRootOutcome struct {
	state                           protoimpl.MessageState `protogen:"open.v1"`
	OutcomeType                     int32                  `protobuf:"varint,1,opt,name=outcome_type,json=outcomeType,proto3" json:"outcome_type,omitempty"`
	RangesSelectedForReport         []*ChainRange          `protobuf:"bytes,2,rep,name=ranges_selected_for_report,json=rangesSelectedForReport,proto3" json:"ranges_selected_for_report,omitempty"`
	RootsToReport                   []*MerkleRootChain     `protobuf:"bytes,3,rep,name=roots_to_report,json=rootsToReport,proto3" json:"roots_to_report,omitempty"`
	RmnEnabledChains                map[uint64]bool        `protobuf:"bytes,4,rep,name=rmn_enabled_chains,json=rmnEnabledChains,proto3" json:"rmn_enabled_chains,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // chainSelector to bool
	OffRampNextSeqNums              []*SeqNumChain         `protobuf:"bytes,5,rep,name=off_ramp_next_seq_nums,json=offRampNextSeqNums,proto3" json:"off_ramp_next_seq_nums,omitempty"`
	ReportTransmissionCheckAttempts uint32                 `protobuf:"varint,6,opt,name=report_transmission_check_attempts,json=reportTransmissionCheckAttempts,proto3" json:"report_transmission_check_attempts,omitempty"`
	RmnReportSignatures             []*SignatureEcdsa      `protobuf:"bytes,7,rep,name=rmn_report_signatures,json=rmnReportSignatures,proto3" json:"rmn_report_signatures,omitempty"`
	RmnRemoteCfg                    *RmnRemoteConfig       `protobuf:"bytes,8,opt,name=rmn_remote_cfg,json=rmnRemoteCfg,proto3" json:"rmn_remote_cfg,omitempty"`
	unknownFields                   protoimpl.UnknownFields
	sizeCache                       protoimpl.SizeCache
}

func (x *MerkleRootOutcome) Reset() {
	*x = MerkleRootOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleRootOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRootOutcome) ProtoMessage() {}

func (x *MerkleRootOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRootOutcome.ProtoReflect.Descriptor instead.
func (*MerkleRootOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{20}
}

func (x *MerkleRootOutcome) GetOutcomeType() int32 {
	if x != nil {
		return x.OutcomeType
	}
	return 0
}

func (x *MerkleRootOutcome) GetRangesSelectedForReport() []*ChainRange {
	if x != nil {
		return x.RangesSelectedForReport
	}
	return nil
}

func (x *MerkleRootOutcome) GetRootsToReport() []*MerkleRootChain {
	if x != nil {
		return x.RootsToReport
	}
	return nil
}

func (x *MerkleRootOutcome) GetRmnEnabledChains() map[uint64]bool {
	if x != nil {
		return x.RmnEnabledChains
	}
	return nil
}

func (x *MerkleRootOutcome) GetOffRampNextSeqNums() []*SeqNumChain {
	if x != nil {
		return x.OffRampNextSeqNums
	}
	return nil
}

func (x *MerkleRootOutcome) GetReportTransmissionCheckAttempts() uint32 {
	if x != nil {
		return x.ReportTransmissionCheckAttempts
	}
	return 0
}

func (x *MerkleRootOutcome) GetRmnReportSignatures() []*SignatureEcdsa {
	if x != nil {
		return x.RmnReportSignatures
	}
	return nil
}

func (x *MerkleRootOutcome) GetRmnRemoteCfg() *RmnRemoteConfig {
	if x != nil {
		return x.RmnRemoteCfg
	}
	return nil
}

type TokenPriceOutcome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenPrices   map[string][]byte      `protobuf:"bytes,1,rep,name=token_prices,json=tokenPrices,proto3" json:"token_prices,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenPriceOutcome) Reset() {
	*x = TokenPriceOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenPriceOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPriceOutcome) ProtoMessage() {}

func (x *TokenPriceOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPriceOutcome.ProtoReflect.Descriptor instead.
func (*TokenPriceOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{21}
}

func (x *TokenPriceOutcome) GetTokenPrices() map[string][]byte {
	if x != nil {
		return x.TokenPrices
	}
	return nil
}

type ChainFeeOutcome struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GasPrices     []*GasPriceChain       `protobuf:"bytes,1,rep,name=gas_prices,json=gasPrices,proto3" json:"gas_prices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainFeeOutcome) Reset() {
	*x = ChainFeeOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainFeeOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainFeeOutcome) ProtoMessage() {}

func (x *ChainFeeOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainFeeOutcome.ProtoReflect.Descriptor instead.
func (*ChainFeeOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{22}
}

func (x *ChainFeeOutcome) GetGasPrices() []*GasPriceChain {
	if x != nil {
		return x.GasPrices
	}
	return nil
}

type GasPriceChain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainSel      uint64                 `protobuf:"varint,1,opt,name=chain_sel,json=chainSel,proto3" json:"chain_sel,omitempty"`
	GasPrice      []byte                 `protobuf:"bytes,2,opt,name=gas_price,json=gasPrice,proto3" json:"gas_price,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GasPriceChain) Reset() {
	*x = GasPriceChain{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GasPriceChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GasPriceChain) ProtoMessage() {}

func (x *GasPriceChain) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GasPriceChain.ProtoReflect.Descriptor instead.
func (*GasPriceChain) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{23}
}

func (x *GasPriceChain) GetChainSel() uint64 {
	if x != nil {
		return x.ChainSel
	}
	return 0
}

func (x *GasPriceChain) GetGasPrice() []byte {
	if x != nil {
		return x.GasPrice
	}
	return nil
}

type MainOutcome struct {
	state                          protoimpl.MessageState `protogen:"open.v1"`
	InflightPriceOcrSequenceNumber uint64                 `protobuf:"varint,1,opt,name=inflight_price_ocr_sequence_number,json=inflightPriceOcrSequenceNumber,proto3" json:"inflight_price_ocr_sequence_number,omitempty"`
	RemainingPriceChecks           int32                  `protobuf:"varint,2,opt,name=remaining_price_checks,json=remainingPriceChecks,proto3" json:"remaining_price_checks,omitempty"`
	unknownFields                  protoimpl.UnknownFields
	sizeCache                      protoimpl.SizeCache
}

func (x *MainOutcome) Reset() {
	*x = MainOutcome{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MainOutcome) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainOutcome) ProtoMessage() {}

func (x *MainOutcome) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainOutcome.ProtoReflect.Descriptor instead.
func (*MainOutcome) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{24}
}

func (x *MainOutcome) GetInflightPriceOcrSequenceNumber() uint64 {
	if x != nil {
		return x.InflightPriceOcrSequenceNumber
	}
	return 0
}

func (x *MainOutcome) GetRemainingPriceChecks() int32 {
	if x != nil {
		return x.RemainingPriceChecks
	}
	return 0
}

type CommitObservations struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommitData    []*CommitData          `protobuf:"bytes,1,rep,name=commit_data,json=commitData,proto3" json:"commit_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommitObservations) Reset() {
	*x = CommitObservations{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitObservations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitObservations) ProtoMessage() {}

func (x *CommitObservations) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitObservations.ProtoReflect.Descriptor instead.
func (*CommitObservations) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{25}
}

func (x *CommitObservations) GetCommitData() []*CommitData {
	if x != nil {
		return x.CommitData
	}
	return nil
}

type CommitData struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SourceChain         uint64                 `protobuf:"varint,1,opt,name=source_chain,json=sourceChain,proto3" json:"source_chain,omitempty"`
	OnRampAddress       []byte                 `protobuf:"bytes,2,opt,name=on_ramp_address,json=onRampAddress,proto3" json:"on_ramp_address,omitempty"`
	Timestamp           *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	BlockNum            uint64                 `protobuf:"varint,4,opt,name=block_num,json=blockNum,proto3" json:"block_num,omitempty"`
	MerkleRoot          []byte                 `protobuf:"bytes,5,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"` // Should be 32bytes
	SequenceNumberRange *SeqNumRange           `protobuf:"bytes,6,opt,name=sequence_number_range,json=sequenceNumberRange,proto3" json:"sequence_number_range,omitempty"`
	ExecutedMessages    []uint64               `protobuf:"varint,7,rep,packed,name=executed_messages,json=executedMessages,proto3" json:"executed_messages,omitempty"`
	Messages            []*Message             `protobuf:"bytes,8,rep,name=messages,proto3" json:"messages,omitempty"`
	Hashes              [][]byte               `protobuf:"bytes,9,rep,name=hashes,proto3" json:"hashes,omitempty"` // Each bytes should be 32bytes
	// Deprecated: Marked as deprecated in pkg/ocrtypecodec/v1/ocrtypes.proto.
	CostlyMessages   [][]byte            `protobuf:"bytes,10,rep,name=costly_messages,json=costlyMessages,proto3" json:"costly_messages,omitempty"` // DEPRECATED: Message IDs of costly messages
	MessageTokenData []*MessageTokenData `protobuf:"bytes,11,rep,name=message_token_data,json=messageTokenData,proto3" json:"message_token_data,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CommitData) Reset() {
	*x = CommitData{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitData) ProtoMessage() {}

func (x *CommitData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitData.ProtoReflect.Descriptor instead.
func (*CommitData) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{26}
}

func (x *CommitData) GetSourceChain() uint64 {
	if x != nil {
		return x.SourceChain
	}
	return 0
}

func (x *CommitData) GetOnRampAddress() []byte {
	if x != nil {
		return x.OnRampAddress
	}
	return nil
}

func (x *CommitData) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *CommitData) GetBlockNum() uint64 {
	if x != nil {
		return x.BlockNum
	}
	return 0
}

func (x *CommitData) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

func (x *CommitData) GetSequenceNumberRange() *SeqNumRange {
	if x != nil {
		return x.SequenceNumberRange
	}
	return nil
}

func (x *CommitData) GetExecutedMessages() []uint64 {
	if x != nil {
		return x.ExecutedMessages
	}
	return nil
}

func (x *CommitData) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *CommitData) GetHashes() [][]byte {
	if x != nil {
		return x.Hashes
	}
	return nil
}

// Deprecated: Marked as deprecated in pkg/ocrtypecodec/v1/ocrtypes.proto.
func (x *CommitData) GetCostlyMessages() [][]byte {
	if x != nil {
		return x.CostlyMessages
	}
	return nil
}

func (x *CommitData) GetMessageTokenData() []*MessageTokenData {
	if x != nil {
		return x.MessageTokenData
	}
	return nil
}

type MessageTokenData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TokenData     []*TokenData           `protobuf:"bytes,1,rep,name=token_data,json=tokenData,proto3" json:"token_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageTokenData) Reset() {
	*x = MessageTokenData{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageTokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageTokenData) ProtoMessage() {}

func (x *MessageTokenData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageTokenData.ProtoReflect.Descriptor instead.
func (*MessageTokenData) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{27}
}

func (x *MessageTokenData) GetTokenData() []*TokenData {
	if x != nil {
		return x.TokenData
	}
	return nil
}

type TokenData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenData) Reset() {
	*x = TokenData{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenData) ProtoMessage() {}

func (x *TokenData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenData.ProtoReflect.Descriptor instead.
func (*TokenData) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{28}
}

func (x *TokenData) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *TokenData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type SeqNumToMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      map[uint64]*Message    `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqNumToMessage) Reset() {
	*x = SeqNumToMessage{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqNumToMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqNumToMessage) ProtoMessage() {}

func (x *SeqNumToMessage) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqNumToMessage.ProtoReflect.Descriptor instead.
func (*SeqNumToMessage) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{29}
}

func (x *SeqNumToMessage) GetMessages() map[uint64]*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

type SeqNumToBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SeqNumToBytes map[uint64][]byte      `protobuf:"bytes,1,rep,name=seq_num_to_bytes,json=seqNumToBytes,proto3" json:"seq_num_to_bytes,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqNumToBytes) Reset() {
	*x = SeqNumToBytes{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqNumToBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqNumToBytes) ProtoMessage() {}

func (x *SeqNumToBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqNumToBytes.ProtoReflect.Descriptor instead.
func (*SeqNumToBytes) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{30}
}

func (x *SeqNumToBytes) GetSeqNumToBytes() map[uint64][]byte {
	if x != nil {
		return x.SeqNumToBytes
	}
	return nil
}

type TokenDataObservations struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	TokenData     map[uint64]*SeqNumToTokenData `protobuf:"bytes,1,rep,name=token_data,json=tokenData,proto3" json:"token_data,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TokenDataObservations) Reset() {
	*x = TokenDataObservations{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TokenDataObservations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenDataObservations) ProtoMessage() {}

func (x *TokenDataObservations) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenDataObservations.ProtoReflect.Descriptor instead.
func (*TokenDataObservations) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{31}
}

func (x *TokenDataObservations) GetTokenData() map[uint64]*SeqNumToTokenData {
	if x != nil {
		return x.TokenData
	}
	return nil
}

type SeqNumToTokenData struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	TokenData     map[uint64]*MessageTokenData `protobuf:"bytes,1,rep,name=token_data,json=tokenData,proto3" json:"token_data,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqNumToTokenData) Reset() {
	*x = SeqNumToTokenData{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqNumToTokenData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqNumToTokenData) ProtoMessage() {}

func (x *SeqNumToTokenData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqNumToTokenData.ProtoReflect.Descriptor instead.
func (*SeqNumToTokenData) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{32}
}

func (x *SeqNumToTokenData) GetTokenData() map[uint64]*MessageTokenData {
	if x != nil {
		return x.TokenData
	}
	return nil
}

type Message struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Header         *RampMessageHeader     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Sender         []byte                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"` // address
	Data           []byte                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Receiver       []byte                 `protobuf:"bytes,4,opt,name=receiver,proto3" json:"receiver,omitempty"` // address
	ExtraArgs      []byte                 `protobuf:"bytes,5,opt,name=extra_args,json=extraArgs,proto3" json:"extra_args,omitempty"`
	FeeToken       []byte                 `protobuf:"bytes,7,opt,name=fee_token,json=feeToken,proto3" json:"fee_token,omitempty"`                     // address
	FeeTokenAmount []byte                 `protobuf:"bytes,8,opt,name=fee_token_amount,json=feeTokenAmount,proto3" json:"fee_token_amount,omitempty"` // bigInt bytes
	FeeValueJuels  []byte                 `protobuf:"bytes,9,opt,name=fee_value_juels,json=feeValueJuels,proto3" json:"fee_value_juels,omitempty"`    // bigInt bytes
	TokenAmounts   []*RampTokenAmount     `protobuf:"bytes,10,rep,name=token_amounts,json=tokenAmounts,proto3" json:"token_amounts,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{33}
}

func (x *Message) GetHeader() *RampMessageHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *Message) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Message) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *Message) GetExtraArgs() []byte {
	if x != nil {
		return x.ExtraArgs
	}
	return nil
}

func (x *Message) GetFeeToken() []byte {
	if x != nil {
		return x.FeeToken
	}
	return nil
}

func (x *Message) GetFeeTokenAmount() []byte {
	if x != nil {
		return x.FeeTokenAmount
	}
	return nil
}

func (x *Message) GetFeeValueJuels() []byte {
	if x != nil {
		return x.FeeValueJuels
	}
	return nil
}

func (x *Message) GetTokenAmounts() []*RampTokenAmount {
	if x != nil {
		return x.TokenAmounts
	}
	return nil
}

type RampMessageHeader struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	MessageId           []byte                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	SourceChainSelector uint64                 `protobuf:"varint,2,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	DestChainSelector   uint64                 `protobuf:"varint,3,opt,name=dest_chain_selector,json=destChainSelector,proto3" json:"dest_chain_selector,omitempty"`
	SequenceNumber      uint64                 `protobuf:"varint,4,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	Nonce               uint64                 `protobuf:"varint,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
	MsgHash             []byte                 `protobuf:"bytes,6,opt,name=msg_hash,json=msgHash,proto3" json:"msg_hash,omitempty"`
	OnRamp              []byte                 `protobuf:"bytes,7,opt,name=on_ramp,json=onRamp,proto3" json:"on_ramp,omitempty"` // address
	TxHash              string                 `protobuf:"bytes,8,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *RampMessageHeader) Reset() {
	*x = RampMessageHeader{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RampMessageHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RampMessageHeader) ProtoMessage() {}

func (x *RampMessageHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RampMessageHeader.ProtoReflect.Descriptor instead.
func (*RampMessageHeader) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{34}
}

func (x *RampMessageHeader) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *RampMessageHeader) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *RampMessageHeader) GetDestChainSelector() uint64 {
	if x != nil {
		return x.DestChainSelector
	}
	return 0
}

func (x *RampMessageHeader) GetSequenceNumber() uint64 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

func (x *RampMessageHeader) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *RampMessageHeader) GetMsgHash() []byte {
	if x != nil {
		return x.MsgHash
	}
	return nil
}

func (x *RampMessageHeader) GetOnRamp() []byte {
	if x != nil {
		return x.OnRamp
	}
	return nil
}

func (x *RampMessageHeader) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

type RampTokenAmount struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SourcePoolAddress []byte                 `protobuf:"bytes,1,opt,name=source_pool_address,json=sourcePoolAddress,proto3" json:"source_pool_address,omitempty"` // address
	DestTokenAddress  []byte                 `protobuf:"bytes,2,opt,name=dest_token_address,json=destTokenAddress,proto3" json:"dest_token_address,omitempty"`    // address
	ExtraData         []byte                 `protobuf:"bytes,3,opt,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty"`
	Amount            []byte                 `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"` // bigInt bytes
	DestExecData      []byte                 `protobuf:"bytes,5,opt,name=dest_exec_data,json=destExecData,proto3" json:"dest_exec_data,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RampTokenAmount) Reset() {
	*x = RampTokenAmount{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RampTokenAmount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RampTokenAmount) ProtoMessage() {}

func (x *RampTokenAmount) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RampTokenAmount.ProtoReflect.Descriptor instead.
func (*RampTokenAmount) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{35}
}

func (x *RampTokenAmount) GetSourcePoolAddress() []byte {
	if x != nil {
		return x.SourcePoolAddress
	}
	return nil
}

func (x *RampTokenAmount) GetDestTokenAddress() []byte {
	if x != nil {
		return x.DestTokenAddress
	}
	return nil
}

func (x *RampTokenAmount) GetExtraData() []byte {
	if x != nil {
		return x.ExtraData
	}
	return nil
}

func (x *RampTokenAmount) GetAmount() []byte {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *RampTokenAmount) GetDestExecData() []byte {
	if x != nil {
		return x.DestExecData
	}
	return nil
}

type StringAddrToNonce struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nonces        map[string]uint64      `protobuf:"bytes,1,rep,name=nonces,proto3" json:"nonces,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // address string to nonce
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringAddrToNonce) Reset() {
	*x = StringAddrToNonce{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringAddrToNonce) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringAddrToNonce) ProtoMessage() {}

func (x *StringAddrToNonce) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringAddrToNonce.ProtoReflect.Descriptor instead.
func (*StringAddrToNonce) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{36}
}

func (x *StringAddrToNonce) GetNonces() map[string]uint64 {
	if x != nil {
		return x.Nonces
	}
	return nil
}

type ExecutePluginReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainReports  []*ChainReport         `protobuf:"bytes,1,rep,name=chain_reports,json=chainReports,proto3" json:"chain_reports,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutePluginReport) Reset() {
	*x = ExecutePluginReport{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutePluginReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutePluginReport) ProtoMessage() {}

func (x *ExecutePluginReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutePluginReport.ProtoReflect.Descriptor instead.
func (*ExecutePluginReport) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{37}
}

func (x *ExecutePluginReport) GetChainReports() []*ChainReport {
	if x != nil {
		return x.ChainReports
	}
	return nil
}

type ChainReport struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SourceChainSelector uint64                 `protobuf:"varint,1,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	Messages            []*Message             `protobuf:"bytes,2,rep,name=messages,proto3" json:"messages,omitempty"`
	OffchainTokenData   []*RepeatedBytes       `protobuf:"bytes,3,rep,name=offchain_token_data,json=offchainTokenData,proto3" json:"offchain_token_data,omitempty"`
	Proofs              [][]byte               `protobuf:"bytes,4,rep,name=proofs,proto3" json:"proofs,omitempty"`
	ProofFlagBits       []byte                 `protobuf:"bytes,5,opt,name=proof_flag_bits,json=proofFlagBits,proto3" json:"proof_flag_bits,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *ChainReport) Reset() {
	*x = ChainReport{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainReport) ProtoMessage() {}

func (x *ChainReport) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainReport.ProtoReflect.Descriptor instead.
func (*ChainReport) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{38}
}

func (x *ChainReport) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *ChainReport) GetMessages() []*Message {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ChainReport) GetOffchainTokenData() []*RepeatedBytes {
	if x != nil {
		return x.OffchainTokenData
	}
	return nil
}

func (x *ChainReport) GetProofs() [][]byte {
	if x != nil {
		return x.Proofs
	}
	return nil
}

func (x *ChainReport) GetProofFlagBits() []byte {
	if x != nil {
		return x.ProofFlagBits
	}
	return nil
}

type RepeatedBytes struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         [][]byte               `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RepeatedBytes) Reset() {
	*x = RepeatedBytes{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RepeatedBytes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RepeatedBytes) ProtoMessage() {}

func (x *RepeatedBytes) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RepeatedBytes.ProtoReflect.Descriptor instead.
func (*RepeatedBytes) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{39}
}

func (x *RepeatedBytes) GetItems() [][]byte {
	if x != nil {
		return x.Items
	}
	return nil
}

type SeqNumRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MinMsgNr      uint64                 `protobuf:"varint,1,opt,name=min_msg_nr,json=minMsgNr,proto3" json:"min_msg_nr,omitempty"`
	MaxMsgNr      uint64                 `protobuf:"varint,2,opt,name=max_msg_nr,json=maxMsgNr,proto3" json:"max_msg_nr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqNumRange) Reset() {
	*x = SeqNumRange{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqNumRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqNumRange) ProtoMessage() {}

func (x *SeqNumRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqNumRange.ProtoReflect.Descriptor instead.
func (*SeqNumRange) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{40}
}

func (x *SeqNumRange) GetMinMsgNr() uint64 {
	if x != nil {
		return x.MinMsgNr
	}
	return 0
}

func (x *SeqNumRange) GetMaxMsgNr() uint64 {
	if x != nil {
		return x.MaxMsgNr
	}
	return 0
}

type SeqNumChain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainSel      uint64                 `protobuf:"varint,1,opt,name=chain_sel,json=chainSel,proto3" json:"chain_sel,omitempty"`
	SeqNum        uint64                 `protobuf:"varint,2,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SeqNumChain) Reset() {
	*x = SeqNumChain{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SeqNumChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SeqNumChain) ProtoMessage() {}

func (x *SeqNumChain) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SeqNumChain.ProtoReflect.Descriptor instead.
func (*SeqNumChain) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{41}
}

func (x *SeqNumChain) GetChainSel() uint64 {
	if x != nil {
		return x.ChainSel
	}
	return 0
}

func (x *SeqNumChain) GetSeqNum() uint64 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

type ChainRange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainSel      uint64                 `protobuf:"varint,1,opt,name=chain_sel,json=chainSel,proto3" json:"chain_sel,omitempty"`
	SeqNumRange   *SeqNumRange           `protobuf:"bytes,2,opt,name=seq_num_range,json=seqNumRange,proto3" json:"seq_num_range,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainRange) Reset() {
	*x = ChainRange{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainRange) ProtoMessage() {}

func (x *ChainRange) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainRange.ProtoReflect.Descriptor instead.
func (*ChainRange) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{42}
}

func (x *ChainRange) GetChainSel() uint64 {
	if x != nil {
		return x.ChainSel
	}
	return 0
}

func (x *ChainRange) GetSeqNumRange() *SeqNumRange {
	if x != nil {
		return x.SeqNumRange
	}
	return nil
}

type SourceChainMeta struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	SourceChainSelector uint64                 `protobuf:"varint,1,opt,name=source_chain_selector,json=sourceChainSelector,proto3" json:"source_chain_selector,omitempty"`
	OnrampAddress       []byte                 `protobuf:"bytes,2,opt,name=onramp_address,json=onrampAddress,proto3" json:"onramp_address,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *SourceChainMeta) Reset() {
	*x = SourceChainMeta{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SourceChainMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SourceChainMeta) ProtoMessage() {}

func (x *SourceChainMeta) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SourceChainMeta.ProtoReflect.Descriptor instead.
func (*SourceChainMeta) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{43}
}

func (x *SourceChainMeta) GetSourceChainSelector() uint64 {
	if x != nil {
		return x.SourceChainSelector
	}
	return 0
}

func (x *SourceChainMeta) GetOnrampAddress() []byte {
	if x != nil {
		return x.OnrampAddress
	}
	return nil
}

type MerkleRootChain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainSel      uint64                 `protobuf:"varint,1,opt,name=chain_sel,json=chainSel,proto3" json:"chain_sel,omitempty"`
	OnRampAddress []byte                 `protobuf:"bytes,2,opt,name=on_ramp_address,json=onRampAddress,proto3" json:"on_ramp_address,omitempty"`
	SeqNumsRange  *SeqNumRange           `protobuf:"bytes,3,opt,name=seq_nums_range,json=seqNumsRange,proto3" json:"seq_nums_range,omitempty"`
	MerkleRoot    []byte                 `protobuf:"bytes,4,opt,name=merkle_root,json=merkleRoot,proto3" json:"merkle_root,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MerkleRootChain) Reset() {
	*x = MerkleRootChain{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MerkleRootChain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MerkleRootChain) ProtoMessage() {}

func (x *MerkleRootChain) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MerkleRootChain.ProtoReflect.Descriptor instead.
func (*MerkleRootChain) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{44}
}

func (x *MerkleRootChain) GetChainSel() uint64 {
	if x != nil {
		return x.ChainSel
	}
	return 0
}

func (x *MerkleRootChain) GetOnRampAddress() []byte {
	if x != nil {
		return x.OnRampAddress
	}
	return nil
}

func (x *MerkleRootChain) GetSeqNumsRange() *SeqNumRange {
	if x != nil {
		return x.SeqNumsRange
	}
	return nil
}

func (x *MerkleRootChain) GetMerkleRoot() []byte {
	if x != nil {
		return x.MerkleRoot
	}
	return nil
}

type TimestampedBig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimestampedBig) Reset() {
	*x = TimestampedBig{}
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimestampedBig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimestampedBig) ProtoMessage() {}

func (x *TimestampedBig) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimestampedBig.ProtoReflect.Descriptor instead.
func (*TimestampedBig) Descriptor() ([]byte, []int) {
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP(), []int{45}
}

func (x *TimestampedBig) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *TimestampedBig) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_pkg_ocrtypecodec_v1_ocrtypes_proto protoreflect.FileDescriptor

const file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDesc = "" +
	"\n" +
	"\"pkg/ocrtypecodec/v1/ocrtypes.proto\x12\x13pkg.ocrtypecodec.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"_\n" +
	"\vCommitQuery\x12P\n" +
	"\x11merkle_root_query\x18\x01 \x01(\v2$.pkg.ocrtypecodec.v1.MerkleRootQueryR\x0fmerkleRootQuery\"\x9b\x04\n" +
	"\x11CommitObservation\x12R\n" +
	"\x0fmerkle_root_obs\x18\x01 \x01(\v2*.pkg.ocrtypecodec.v1.MerkleRootObservationR\rmerkleRootObs\x12R\n" +
	"\x0ftoken_price_obs\x18\x02 \x01(\v2*.pkg.ocrtypecodec.v1.TokenPriceObservationR\rtokenPriceObs\x12L\n" +
	"\rchain_fee_obs\x18\x03 \x01(\v2(.pkg.ocrtypecodec.v1.ChainFeeObservationR\vchainFeeObs\x12N\n" +
	"\rdiscovery_obs\x18\x04 \x01(\v2).pkg.ocrtypecodec.v1.DiscoveryObservationR\fdiscoveryObs\x12K\n" +
	"\af_chain\x18\x05 \x03(\v22.pkg.ocrtypecodec.v1.CommitObservation.FChainEntryR\x06fChain\x128\n" +
	"\x19onchain_price_ocr_seq_num\x18\x06 \x01(\x04R\x15onchainPriceOcrSeqNum\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xd6\x02\n" +
	"\rCommitOutcome\x12V\n" +
	"\x13merkle_root_outcome\x18\x01 \x01(\v2&.pkg.ocrtypecodec.v1.MerkleRootOutcomeR\x11merkleRootOutcome\x12V\n" +
	"\x13token_price_outcome\x18\x02 \x01(\v2&.pkg.ocrtypecodec.v1.TokenPriceOutcomeR\x11tokenPriceOutcome\x12P\n" +
	"\x11chain_fee_outcome\x18\x03 \x01(\v2$.pkg.ocrtypecodec.v1.ChainFeeOutcomeR\x0fchainFeeOutcome\x12C\n" +
	"\fmain_outcome\x18\x04 \x01(\v2 .pkg.ocrtypecodec.v1.MainOutcomeR\vmainOutcome\"\xe9\b\n" +
	"\x0fExecObservation\x12^\n" +
	"\x0ecommit_reports\x18\x01 \x03(\v27.pkg.ocrtypecodec.v1.ExecObservation.CommitReportsEntryR\rcommitReports\x12`\n" +
	"\x10seq_nums_to_msgs\x18\x02 \x03(\v27.pkg.ocrtypecodec.v1.ExecObservation.SeqNumsToMsgsEntryR\rseqNumsToMsgs\x12R\n" +
	"\n" +
	"msg_hashes\x18\x03 \x03(\v23.pkg.ocrtypecodec.v1.ExecObservation.MsgHashesEntryR\tmsgHashes\x12b\n" +
	"\x17token_data_observations\x18\x04 \x01(\v2*.pkg.ocrtypecodec.v1.TokenDataObservationsR\x15tokenDataObservations\x12+\n" +
	"\x0fcostly_messages\x18\x05 \x03(\fB\x02\x18\x01R\x0ecostlyMessages\x12H\n" +
	"\x06nonces\x18\x06 \x03(\v20.pkg.ocrtypecodec.v1.ExecObservation.NoncesEntryR\x06nonces\x12G\n" +
	"\tcontracts\x18\a \x01(\v2).pkg.ocrtypecodec.v1.DiscoveryObservationR\tcontracts\x12I\n" +
	"\af_chain\x18\b \x03(\v20.pkg.ocrtypecodec.v1.ExecObservation.FChainEntryR\x06fChain\x1ai\n" +
	"\x12CommitReportsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.pkg.ocrtypecodec.v1.CommitObservationsR\x05value:\x028\x01\x1af\n" +
	"\x12SeqNumsToMsgsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.pkg.ocrtypecodec.v1.SeqNumToMessageR\x05value:\x028\x01\x1a`\n" +
	"\x0eMsgHashesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x128\n" +
	"\x05value\x18\x02 \x01(\v2\".pkg.ocrtypecodec.v1.SeqNumToBytesR\x05value:\x028\x01\x1aa\n" +
	"\vNoncesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.pkg.ocrtypecodec.v1.StringAddrToNonceR\x05value:\x028\x01\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xb6\x02\n" +
	"\vExecOutcome\x12!\n" +
	"\fplugin_state\x18\x01 \x01(\tR\vpluginState\x12F\n" +
	"\x0ecommit_reports\x18\x02 \x03(\v2\x1f.pkg.ocrtypecodec.v1.CommitDataR\rcommitReports\x12\\\n" +
	"\x15execute_plugin_report\x18\x03 \x01(\v2(.pkg.ocrtypecodec.v1.ExecutePluginReportR\x13executePluginReport\x12^\n" +
	"\x16execute_plugin_reports\x18\x04 \x03(\v2(.pkg.ocrtypecodec.v1.ExecutePluginReportR\x14executePluginReports\"\x91\x01\n" +
	"\x0fMerkleRootQuery\x120\n" +
	"\x14retry_rmn_signatures\x18\x01 \x01(\bR\x12retryRmnSignatures\x12L\n" +
	"\x0ermn_signatures\x18\x02 \x01(\v2%.pkg.ocrtypecodec.v1.ReportSignaturesR\rrmnSignatures\"\xa0\x01\n" +
	"\x10ReportSignatures\x12C\n" +
	"\n" +
	"signatures\x18\x01 \x03(\v2#.pkg.ocrtypecodec.v1.SignatureEcdsaR\n" +
	"signatures\x12G\n" +
	"\flane_updates\x18\x02 \x03(\v2$.pkg.ocrtypecodec.v1.DestChainUpdateR\vlaneUpdates\",\n" +
	"\x0eSignatureEcdsa\x12\f\n" +
	"\x01r\x18\x01 \x01(\fR\x01r\x12\f\n" +
	"\x01s\x18\x02 \x01(\fR\x01s\"\xb2\x01\n" +
	"\x0fDestChainUpdate\x12E\n" +
	"\vlane_source\x18\x01 \x01(\v2$.pkg.ocrtypecodec.v1.SourceChainMetaR\n" +
	"laneSource\x12D\n" +
	"\rseq_num_range\x18\x02 \x01(\v2 .pkg.ocrtypecodec.v1.SeqNumRangeR\vseqNumRange\x12\x12\n" +
	"\x04root\x18\x03 \x01(\fR\x04root\"\x9b\x05\n" +
	"\x15MerkleRootObservation\x12G\n" +
	"\fmerkle_roots\x18\x01 \x03(\v2$.pkg.ocrtypecodec.v1.MerkleRootChainR\vmerkleRoots\x12n\n" +
	"\x12rmn_enabled_chains\x18\x02 \x03(\v2@.pkg.ocrtypecodec.v1.MerkleRootObservation.RmnEnabledChainsEntryR\x10rmnEnabledChains\x12P\n" +
	"\x14on_ramp_max_seq_nums\x18\x03 \x03(\v2 .pkg.ocrtypecodec.v1.SeqNumChainR\x10onRampMaxSeqNums\x12T\n" +
	"\x16off_ramp_next_seq_nums\x18\x04 \x03(\v2 .pkg.ocrtypecodec.v1.SeqNumChainR\x12offRampNextSeqNums\x12P\n" +
	"\x11rmn_remote_config\x18\x05 \x01(\v2$.pkg.ocrtypecodec.v1.RmnRemoteConfigR\x0frmnRemoteConfig\x12O\n" +
	"\af_chain\x18\x06 \x03(\v26.pkg.ocrtypecodec.v1.MerkleRootObservation.FChainEntryR\x06fChain\x1aC\n" +
	"\x15RmnEnabledChainsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\x8e\x02\n" +
	"\x0fRmnRemoteConfig\x12)\n" +
	"\x10contract_address\x18\x01 \x01(\fR\x0fcontractAddress\x12#\n" +
	"\rconfig_digest\x18\x02 \x01(\fR\fconfigDigest\x12?\n" +
	"\asigners\x18\x03 \x03(\v2%.pkg.ocrtypecodec.v1.RemoteSignerInfoR\asigners\x12\x15\n" +
	"\x06f_sign\x18\x04 \x01(\x04R\x05fSign\x12%\n" +
	"\x0econfig_version\x18\x05 \x01(\rR\rconfigVersion\x12,\n" +
	"\x12rmn_report_version\x18\x06 \x01(\fR\x10rmnReportVersion\"_\n" +
	"\x10RemoteSignerInfo\x12,\n" +
	"\x12onchain_public_key\x18\x01 \x01(\fR\x10onchainPublicKey\x12\x1d\n" +
	"\n" +
	"node_index\x18\x02 \x01(\x04R\tnodeIndex\"\xfd\x04\n" +
	"\x15TokenPriceObservation\x12k\n" +
	"\x11feed_token_prices\x18\x01 \x03(\v2?.pkg.ocrtypecodec.v1.TokenPriceObservation.FeedTokenPricesEntryR\x0ffeedTokenPrices\x12~\n" +
	"\x18fee_quoter_token_updates\x18\x02 \x03(\v2E.pkg.ocrtypecodec.v1.TokenPriceObservation.FeeQuoterTokenUpdatesEntryR\x15feeQuoterTokenUpdates\x12O\n" +
	"\af_chain\x18\x03 \x03(\v26.pkg.ocrtypecodec.v1.TokenPriceObservation.FChainEntryR\x06fChain\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1aB\n" +
	"\x14FeedTokenPricesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1am\n" +
	"\x1aFeeQuoterTokenUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.pkg.ocrtypecodec.v1.TimestampedBigR\x05value:\x028\x01\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xba\x06\n" +
	"\x13ChainFeeObservation\x12b\n" +
	"\x0efee_components\x18\x01 \x03(\v2;.pkg.ocrtypecodec.v1.ChainFeeObservation.FeeComponentsEntryR\rfeeComponents\x12o\n" +
	"\x13native_token_prices\x18\x02 \x03(\v2?.pkg.ocrtypecodec.v1.ChainFeeObservation.NativeTokenPricesEntryR\x11nativeTokenPrices\x12i\n" +
	"\x11chain_fee_updates\x18\x03 \x03(\v2=.pkg.ocrtypecodec.v1.ChainFeeObservation.ChainFeeUpdatesEntryR\x0fchainFeeUpdates\x12M\n" +
	"\af_chain\x18\x04 \x03(\v24.pkg.ocrtypecodec.v1.ChainFeeObservation.FChainEntryR\x06fChain\x12?\n" +
	"\rtimestamp_now\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ftimestampNow\x1ai\n" +
	"\x12FeeComponentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12=\n" +
	"\x05value\x18\x02 \x01(\v2'.pkg.ocrtypecodec.v1.ChainFeeComponentsR\x05value:\x028\x01\x1aD\n" +
	"\x16NativeTokenPricesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1ag\n" +
	"\x14ChainFeeUpdatesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x129\n" +
	"\x05value\x18\x02 \x01(\v2#.pkg.ocrtypecodec.v1.ChainFeeUpdateR\x05value:\x028\x01\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"m\n" +
	"\x12ChainFeeComponents\x12#\n" +
	"\rexecution_fee\x18\x01 \x01(\fR\fexecutionFee\x122\n" +
	"\x15data_availability_fee\x18\x02 \x01(\fR\x13dataAvailabilityFee\"\x91\x01\n" +
	"\x0eChainFeeUpdate\x12E\n" +
	"\tchain_fee\x18\x01 \x01(\v2(.pkg.ocrtypecodec.v1.ComponentsUSDPricesR\bchainFee\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"~\n" +
	"\x13ComponentsUSDPrices\x125\n" +
	"\x17execution_fee_price_usd\x18\x01 \x01(\fR\x14executionFeePriceUsd\x120\n" +
	"\x15data_av_fee_price_usd\x18\x02 \x01(\fR\x11dataAvFeePriceUsd\"\xf9\x01\n" +
	"\x14DiscoveryObservation\x12N\n" +
	"\af_chain\x18\x01 \x03(\v25.pkg.ocrtypecodec.v1.DiscoveryObservation.FChainEntryR\x06fChain\x12V\n" +
	"\x0econtract_names\x18\x02 \x01(\v2/.pkg.ocrtypecodec.v1.ContractNameChainAddressesR\rcontractNames\x1a9\n" +
	"\vFChainEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value:\x028\x01\"\xde\x01\n" +
	"\x1aContractNameChainAddresses\x12\\\n" +
	"\taddresses\x18\x01 \x03(\v2>.pkg.ocrtypecodec.v1.ContractNameChainAddresses.AddressesEntryR\taddresses\x1ab\n" +
	"\x0eAddressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12:\n" +
	"\x05value\x18\x02 \x01(\v2$.pkg.ocrtypecodec.v1.ChainAddressMapR\x05value:\x028\x01\"\xb7\x01\n" +
	"\x0fChainAddressMap\x12a\n" +
	"\x0fchain_addresses\x18\x01 \x03(\v28.pkg.ocrtypecodec.v1.ChainAddressMap.ChainAddressesEntryR\x0echainAddresses\x1aA\n" +
	"\x13ChainAddressesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xdb\x05\n" +
	"\x11MerkleRootOutcome\x12!\n" +
	"\foutcome_type\x18\x01 \x01(\x05R\voutcomeType\x12\\\n" +
	"\x1aranges_selected_for_report\x18\x02 \x03(\v2\x1f.pkg.ocrtypecodec.v1.ChainRangeR\x17rangesSelectedForReport\x12L\n" +
	"\x0froots_to_report\x18\x03 \x03(\v2$.pkg.ocrtypecodec.v1.MerkleRootChainR\rrootsToReport\x12j\n" +
	"\x12rmn_enabled_chains\x18\x04 \x03(\v2<.pkg.ocrtypecodec.v1.MerkleRootOutcome.RmnEnabledChainsEntryR\x10rmnEnabledChains\x12T\n" +
	"\x16off_ramp_next_seq_nums\x18\x05 \x03(\v2 .pkg.ocrtypecodec.v1.SeqNumChainR\x12offRampNextSeqNums\x12K\n" +
	"\"report_transmission_check_attempts\x18\x06 \x01(\rR\x1freportTransmissionCheckAttempts\x12W\n" +
	"\x15rmn_report_signatures\x18\a \x03(\v2#.pkg.ocrtypecodec.v1.SignatureEcdsaR\x13rmnReportSignatures\x12J\n" +
	"\x0ermn_remote_cfg\x18\b \x01(\v2$.pkg.ocrtypecodec.v1.RmnRemoteConfigR\frmnRemoteCfg\x1aC\n" +
	"\x15RmnEnabledChainsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\bR\x05value:\x028\x01\"\xaf\x01\n" +
	"\x11TokenPriceOutcome\x12Z\n" +
	"\ftoken_prices\x18\x01 \x03(\v27.pkg.ocrtypecodec.v1.TokenPriceOutcome.TokenPricesEntryR\vtokenPrices\x1a>\n" +
	"\x10TokenPricesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"T\n" +
	"\x0fChainFeeOutcome\x12A\n" +
	"\n" +
	"gas_prices\x18\x01 \x03(\v2\".pkg.ocrtypecodec.v1.GasPriceChainR\tgasPrices\"I\n" +
	"\rGasPriceChain\x12\x1b\n" +
	"\tchain_sel\x18\x01 \x01(\x04R\bchainSel\x12\x1b\n" +
	"\tgas_price\x18\x02 \x01(\fR\bgasPrice\"\x8f\x01\n" +
	"\vMainOutcome\x12J\n" +
	"\"inflight_price_ocr_sequence_number\x18\x01 \x01(\x04R\x1einflightPriceOcrSequenceNumber\x124\n" +
	"\x16remaining_price_checks\x18\x02 \x01(\x05R\x14remainingPriceChecks\"V\n" +
	"\x12CommitObservations\x12@\n" +
	"\vcommit_data\x18\x01 \x03(\v2\x1f.pkg.ocrtypecodec.v1.CommitDataR\n" +
	"commitData\"\xa6\x04\n" +
	"\n" +
	"CommitData\x12!\n" +
	"\fsource_chain\x18\x01 \x01(\x04R\vsourceChain\x12&\n" +
	"\x0fon_ramp_address\x18\x02 \x01(\fR\ronRampAddress\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x1b\n" +
	"\tblock_num\x18\x04 \x01(\x04R\bblockNum\x12\x1f\n" +
	"\vmerkle_root\x18\x05 \x01(\fR\n" +
	"merkleRoot\x12T\n" +
	"\x15sequence_number_range\x18\x06 \x01(\v2 .pkg.ocrtypecodec.v1.SeqNumRangeR\x13sequenceNumberRange\x12+\n" +
	"\x11executed_messages\x18\a \x03(\x04R\x10executedMessages\x128\n" +
	"\bmessages\x18\b \x03(\v2\x1c.pkg.ocrtypecodec.v1.MessageR\bmessages\x12\x16\n" +
	"\x06hashes\x18\t \x03(\fR\x06hashes\x12+\n" +
	"\x0fcostly_messages\x18\n" +
	" \x03(\fB\x02\x18\x01R\x0ecostlyMessages\x12S\n" +
	"\x12message_token_data\x18\v \x03(\v2%.pkg.ocrtypecodec.v1.MessageTokenDataR\x10messageTokenData\"Q\n" +
	"\x10MessageTokenData\x12=\n" +
	"\n" +
	"token_data\x18\x01 \x03(\v2\x1e.pkg.ocrtypecodec.v1.TokenDataR\ttokenData\"5\n" +
	"\tTokenData\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\xbc\x01\n" +
	"\x0fSeqNumToMessage\x12N\n" +
	"\bmessages\x18\x01 \x03(\v22.pkg.ocrtypecodec.v1.SeqNumToMessage.MessagesEntryR\bmessages\x1aY\n" +
	"\rMessagesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x122\n" +
	"\x05value\x18\x02 \x01(\v2\x1c.pkg.ocrtypecodec.v1.MessageR\x05value:\x028\x01\"\xb1\x01\n" +
	"\rSeqNumToBytes\x12^\n" +
	"\x10seq_num_to_bytes\x18\x01 \x03(\v25.pkg.ocrtypecodec.v1.SeqNumToBytes.SeqNumToBytesEntryR\rseqNumToBytes\x1a@\n" +
	"\x12SeqNumToBytesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\"\xd7\x01\n" +
	"\x15TokenDataObservations\x12X\n" +
	"\n" +
	"token_data\x18\x01 \x03(\v29.pkg.ocrtypecodec.v1.TokenDataObservations.TokenDataEntryR\ttokenData\x1ad\n" +
	"\x0eTokenDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12<\n" +
	"\x05value\x18\x02 \x01(\v2&.pkg.ocrtypecodec.v1.SeqNumToTokenDataR\x05value:\x028\x01\"\xce\x01\n" +
	"\x11SeqNumToTokenData\x12T\n" +
	"\n" +
	"token_data\x18\x01 \x03(\v25.pkg.ocrtypecodec.v1.SeqNumToTokenData.TokenDataEntryR\ttokenData\x1ac\n" +
	"\x0eTokenDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x04R\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.pkg.ocrtypecodec.v1.MessageTokenDataR\x05value:\x028\x01\"\xea\x02\n" +
	"\aMessage\x12>\n" +
	"\x06header\x18\x01 \x01(\v2&.pkg.ocrtypecodec.v1.RampMessageHeaderR\x06header\x12\x16\n" +
	"\x06sender\x18\x02 \x01(\fR\x06sender\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\x12\x1a\n" +
	"\breceiver\x18\x04 \x01(\fR\breceiver\x12\x1d\n" +
	"\n" +
	"extra_args\x18\x05 \x01(\fR\textraArgs\x12\x1b\n" +
	"\tfee_token\x18\a \x01(\fR\bfeeToken\x12(\n" +
	"\x10fee_token_amount\x18\b \x01(\fR\x0efeeTokenAmount\x12&\n" +
	"\x0ffee_value_juels\x18\t \x01(\fR\rfeeValueJuels\x12I\n" +
	"\rtoken_amounts\x18\n" +
	" \x03(\v2$.pkg.ocrtypecodec.v1.RampTokenAmountR\ftokenAmounts\"\xa2\x02\n" +
	"\x11RampMessageHeader\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\fR\tmessageId\x122\n" +
	"\x15source_chain_selector\x18\x02 \x01(\x04R\x13sourceChainSelector\x12.\n" +
	"\x13dest_chain_selector\x18\x03 \x01(\x04R\x11destChainSelector\x12'\n" +
	"\x0fsequence_number\x18\x04 \x01(\x04R\x0esequenceNumber\x12\x14\n" +
	"\x05nonce\x18\x05 \x01(\x04R\x05nonce\x12\x19\n" +
	"\bmsg_hash\x18\x06 \x01(\fR\amsgHash\x12\x17\n" +
	"\aon_ramp\x18\a \x01(\fR\x06onRamp\x12\x17\n" +
	"\atx_hash\x18\b \x01(\tR\x06txHash\"\xcc\x01\n" +
	"\x0fRampTokenAmount\x12.\n" +
	"\x13source_pool_address\x18\x01 \x01(\fR\x11sourcePoolAddress\x12,\n" +
	"\x12dest_token_address\x18\x02 \x01(\fR\x10destTokenAddress\x12\x1d\n" +
	"\n" +
	"extra_data\x18\x03 \x01(\fR\textraData\x12\x16\n" +
	"\x06amount\x18\x04 \x01(\fR\x06amount\x12$\n" +
	"\x0edest_exec_data\x18\x05 \x01(\fR\fdestExecData\"\x9a\x01\n" +
	"\x11StringAddrToNonce\x12J\n" +
	"\x06nonces\x18\x01 \x03(\v22.pkg.ocrtypecodec.v1.StringAddrToNonce.NoncesEntryR\x06nonces\x1a9\n" +
	"\vNoncesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\\\n" +
	"\x13ExecutePluginReport\x12E\n" +
	"\rchain_reports\x18\x01 \x03(\v2 .pkg.ocrtypecodec.v1.ChainReportR\fchainReports\"\x8f\x02\n" +
	"\vChainReport\x122\n" +
	"\x15source_chain_selector\x18\x01 \x01(\x04R\x13sourceChainSelector\x128\n" +
	"\bmessages\x18\x02 \x03(\v2\x1c.pkg.ocrtypecodec.v1.MessageR\bmessages\x12R\n" +
	"\x13offchain_token_data\x18\x03 \x03(\v2\".pkg.ocrtypecodec.v1.RepeatedBytesR\x11offchainTokenData\x12\x16\n" +
	"\x06proofs\x18\x04 \x03(\fR\x06proofs\x12&\n" +
	"\x0fproof_flag_bits\x18\x05 \x01(\fR\rproofFlagBits\"%\n" +
	"\rRepeatedBytes\x12\x14\n" +
	"\x05items\x18\x01 \x03(\fR\x05items\"I\n" +
	"\vSeqNumRange\x12\x1c\n" +
	"\n" +
	"min_msg_nr\x18\x01 \x01(\x04R\bminMsgNr\x12\x1c\n" +
	"\n" +
	"max_msg_nr\x18\x02 \x01(\x04R\bmaxMsgNr\"C\n" +
	"\vSeqNumChain\x12\x1b\n" +
	"\tchain_sel\x18\x01 \x01(\x04R\bchainSel\x12\x17\n" +
	"\aseq_num\x18\x02 \x01(\x04R\x06seqNum\"o\n" +
	"\n" +
	"ChainRange\x12\x1b\n" +
	"\tchain_sel\x18\x01 \x01(\x04R\bchainSel\x12D\n" +
	"\rseq_num_range\x18\x02 \x01(\v2 .pkg.ocrtypecodec.v1.SeqNumRangeR\vseqNumRange\"l\n" +
	"\x0fSourceChainMeta\x122\n" +
	"\x15source_chain_selector\x18\x01 \x01(\x04R\x13sourceChainSelector\x12%\n" +
	"\x0eonramp_address\x18\x02 \x01(\fR\ronrampAddress\"\xbf\x01\n" +
	"\x0fMerkleRootChain\x12\x1b\n" +
	"\tchain_sel\x18\x01 \x01(\x04R\bchainSel\x12&\n" +
	"\x0fon_ramp_address\x18\x02 \x01(\fR\ronRampAddress\x12F\n" +
	"\x0eseq_nums_range\x18\x03 \x01(\v2 .pkg.ocrtypecodec.v1.SeqNumRangeR\fseqNumsRange\x12\x1f\n" +
	"\vmerkle_root\x18\x04 \x01(\fR\n" +
	"merkleRoot\"`\n" +
	"\x0eTimestampedBig\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05valueB\x13Z\x11./;ocrtypecodecpbb\x06proto3"

var (
	file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescOnce sync.Once
	file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescData []byte
)

func file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescGZIP() []byte {
	file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescOnce.Do(func() {
		file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDesc), len(file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDesc)))
	})
	return file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDescData
}

var file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes = make([]protoimpl.MessageInfo, 71)
var file_pkg_ocrtypecodec_v1_ocrtypes_proto_goTypes = []any{
	(*CommitQuery)(nil),                // 0: pkg.ocrtypecodec.v1.CommitQuery
	(*CommitObservation)(nil),          // 1: pkg.ocrtypecodec.v1.CommitObservation
	(*CommitOutcome)(nil),              // 2: pkg.ocrtypecodec.v1.CommitOutcome
	(*ExecObservation)(nil),            // 3: pkg.ocrtypecodec.v1.ExecObservation
	(*ExecOutcome)(nil),                // 4: pkg.ocrtypecodec.v1.ExecOutcome
	(*MerkleRootQuery)(nil),            // 5: pkg.ocrtypecodec.v1.MerkleRootQuery
	(*ReportSignatures)(nil),           // 6: pkg.ocrtypecodec.v1.ReportSignatures
	(*SignatureEcdsa)(nil),             // 7: pkg.ocrtypecodec.v1.SignatureEcdsa
	(*DestChainUpdate)(nil),            // 8: pkg.ocrtypecodec.v1.DestChainUpdate
	(*MerkleRootObservation)(nil),      // 9: pkg.ocrtypecodec.v1.MerkleRootObservation
	(*RmnRemoteConfig)(nil),            // 10: pkg.ocrtypecodec.v1.RmnRemoteConfig
	(*RemoteSignerInfo)(nil),           // 11: pkg.ocrtypecodec.v1.RemoteSignerInfo
	(*TokenPriceObservation)(nil),      // 12: pkg.ocrtypecodec.v1.TokenPriceObservation
	(*ChainFeeObservation)(nil),        // 13: pkg.ocrtypecodec.v1.ChainFeeObservation
	(*ChainFeeComponents)(nil),         // 14: pkg.ocrtypecodec.v1.ChainFeeComponents
	(*ChainFeeUpdate)(nil),             // 15: pkg.ocrtypecodec.v1.ChainFeeUpdate
	(*ComponentsUSDPrices)(nil),        // 16: pkg.ocrtypecodec.v1.ComponentsUSDPrices
	(*DiscoveryObservation)(nil),       // 17: pkg.ocrtypecodec.v1.DiscoveryObservation
	(*ContractNameChainAddresses)(nil), // 18: pkg.ocrtypecodec.v1.ContractNameChainAddresses
	(*ChainAddressMap)(nil),            // 19: pkg.ocrtypecodec.v1.ChainAddressMap
	(*MerkleRootOutcome)(nil),          // 20: pkg.ocrtypecodec.v1.MerkleRootOutcome
	(*TokenPriceOutcome)(nil),          // 21: pkg.ocrtypecodec.v1.TokenPriceOutcome
	(*ChainFeeOutcome)(nil),            // 22: pkg.ocrtypecodec.v1.ChainFeeOutcome
	(*GasPriceChain)(nil),              // 23: pkg.ocrtypecodec.v1.GasPriceChain
	(*MainOutcome)(nil),                // 24: pkg.ocrtypecodec.v1.MainOutcome
	(*CommitObservations)(nil),         // 25: pkg.ocrtypecodec.v1.CommitObservations
	(*CommitData)(nil),                 // 26: pkg.ocrtypecodec.v1.CommitData
	(*MessageTokenData)(nil),           // 27: pkg.ocrtypecodec.v1.MessageTokenData
	(*TokenData)(nil),                  // 28: pkg.ocrtypecodec.v1.TokenData
	(*SeqNumToMessage)(nil),            // 29: pkg.ocrtypecodec.v1.SeqNumToMessage
	(*SeqNumToBytes)(nil),              // 30: pkg.ocrtypecodec.v1.SeqNumToBytes
	(*TokenDataObservations)(nil),      // 31: pkg.ocrtypecodec.v1.TokenDataObservations
	(*SeqNumToTokenData)(nil),          // 32: pkg.ocrtypecodec.v1.SeqNumToTokenData
	(*Message)(nil),                    // 33: pkg.ocrtypecodec.v1.Message
	(*RampMessageHeader)(nil),          // 34: pkg.ocrtypecodec.v1.RampMessageHeader
	(*RampTokenAmount)(nil),            // 35: pkg.ocrtypecodec.v1.RampTokenAmount
	(*StringAddrToNonce)(nil),          // 36: pkg.ocrtypecodec.v1.StringAddrToNonce
	(*ExecutePluginReport)(nil),        // 37: pkg.ocrtypecodec.v1.ExecutePluginReport
	(*ChainReport)(nil),                // 38: pkg.ocrtypecodec.v1.ChainReport
	(*RepeatedBytes)(nil),              // 39: pkg.ocrtypecodec.v1.RepeatedBytes
	(*SeqNumRange)(nil),                // 40: pkg.ocrtypecodec.v1.SeqNumRange
	(*SeqNumChain)(nil),                // 41: pkg.ocrtypecodec.v1.SeqNumChain
	(*ChainRange)(nil),                 // 42: pkg.ocrtypecodec.v1.ChainRange
	(*SourceChainMeta)(nil),            // 43: pkg.ocrtypecodec.v1.SourceChainMeta
	(*MerkleRootChain)(nil),            // 44: pkg.ocrtypecodec.v1.MerkleRootChain
	(*TimestampedBig)(nil),             // 45: pkg.ocrtypecodec.v1.TimestampedBig
	nil,                                // 46: pkg.ocrtypecodec.v1.CommitObservation.FChainEntry
	nil,                                // 47: pkg.ocrtypecodec.v1.ExecObservation.CommitReportsEntry
	nil,                                // 48: pkg.ocrtypecodec.v1.ExecObservation.SeqNumsToMsgsEntry
	nil,                                // 49: pkg.ocrtypecodec.v1.ExecObservation.MsgHashesEntry
	nil,                                // 50: pkg.ocrtypecodec.v1.ExecObservation.NoncesEntry
	nil,                                // 51: pkg.ocrtypecodec.v1.ExecObservation.FChainEntry
	nil,                                // 52: pkg.ocrtypecodec.v1.MerkleRootObservation.RmnEnabledChainsEntry
	nil,                                // 53: pkg.ocrtypecodec.v1.MerkleRootObservation.FChainEntry
	nil,                                // 54: pkg.ocrtypecodec.v1.TokenPriceObservation.FeedTokenPricesEntry
	nil,                                // 55: pkg.ocrtypecodec.v1.TokenPriceObservation.FeeQuoterTokenUpdatesEntry
	nil,                                // 56: pkg.ocrtypecodec.v1.TokenPriceObservation.FChainEntry
	nil,                                // 57: pkg.ocrtypecodec.v1.ChainFeeObservation.FeeComponentsEntry
	nil,                                // 58: pkg.ocrtypecodec.v1.ChainFeeObservation.NativeTokenPricesEntry
	nil,                                // 59: pkg.ocrtypecodec.v1.ChainFeeObservation.ChainFeeUpdatesEntry
	nil,                                // 60: pkg.ocrtypecodec.v1.ChainFeeObservation.FChainEntry
	nil,                                // 61: pkg.ocrtypecodec.v1.DiscoveryObservation.FChainEntry
	nil,                                // 62: pkg.ocrtypecodec.v1.ContractNameChainAddresses.AddressesEntry
	nil,                                // 63: pkg.ocrtypecodec.v1.ChainAddressMap.ChainAddressesEntry
	nil,                                // 64: pkg.ocrtypecodec.v1.MerkleRootOutcome.RmnEnabledChainsEntry
	nil,                                // 65: pkg.ocrtypecodec.v1.TokenPriceOutcome.TokenPricesEntry
	nil,                                // 66: pkg.ocrtypecodec.v1.SeqNumToMessage.MessagesEntry
	nil,                                // 67: pkg.ocrtypecodec.v1.SeqNumToBytes.SeqNumToBytesEntry
	nil,                                // 68: pkg.ocrtypecodec.v1.TokenDataObservations.TokenDataEntry
	nil,                                // 69: pkg.ocrtypecodec.v1.SeqNumToTokenData.TokenDataEntry
	nil,                                // 70: pkg.ocrtypecodec.v1.StringAddrToNonce.NoncesEntry
	(*timestamppb.Timestamp)(nil),      // 71: google.protobuf.Timestamp
}
var file_pkg_ocrtypecodec_v1_ocrtypes_proto_depIdxs = []int32{
	5,  // 0: pkg.ocrtypecodec.v1.CommitQuery.merkle_root_query:type_name -> pkg.ocrtypecodec.v1.MerkleRootQuery
	9,  // 1: pkg.ocrtypecodec.v1.CommitObservation.merkle_root_obs:type_name -> pkg.ocrtypecodec.v1.MerkleRootObservation
	12, // 2: pkg.ocrtypecodec.v1.CommitObservation.token_price_obs:type_name -> pkg.ocrtypecodec.v1.TokenPriceObservation
	13, // 3: pkg.ocrtypecodec.v1.CommitObservation.chain_fee_obs:type_name -> pkg.ocrtypecodec.v1.ChainFeeObservation
	17, // 4: pkg.ocrtypecodec.v1.CommitObservation.discovery_obs:type_name -> pkg.ocrtypecodec.v1.DiscoveryObservation
	46, // 5: pkg.ocrtypecodec.v1.CommitObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.CommitObservation.FChainEntry
	20, // 6: pkg.ocrtypecodec.v1.CommitOutcome.merkle_root_outcome:type_name -> pkg.ocrtypecodec.v1.MerkleRootOutcome
	21, // 7: pkg.ocrtypecodec.v1.CommitOutcome.token_price_outcome:type_name -> pkg.ocrtypecodec.v1.TokenPriceOutcome
	22, // 8: pkg.ocrtypecodec.v1.CommitOutcome.chain_fee_outcome:type_name -> pkg.ocrtypecodec.v1.ChainFeeOutcome
	24, // 9: pkg.ocrtypecodec.v1.CommitOutcome.main_outcome:type_name -> pkg.ocrtypecodec.v1.MainOutcome
	47, // 10: pkg.ocrtypecodec.v1.ExecObservation.commit_reports:type_name -> pkg.ocrtypecodec.v1.ExecObservation.CommitReportsEntry
	48, // 11: pkg.ocrtypecodec.v1.ExecObservation.seq_nums_to_msgs:type_name -> pkg.ocrtypecodec.v1.ExecObservation.SeqNumsToMsgsEntry
	49, // 12: pkg.ocrtypecodec.v1.ExecObservation.msg_hashes:type_name -> pkg.ocrtypecodec.v1.ExecObservation.MsgHashesEntry
	31, // 13: pkg.ocrtypecodec.v1.ExecObservation.token_data_observations:type_name -> pkg.ocrtypecodec.v1.TokenDataObservations
	50, // 14: pkg.ocrtypecodec.v1.ExecObservation.nonces:type_name -> pkg.ocrtypecodec.v1.ExecObservation.NoncesEntry
	17, // 15: pkg.ocrtypecodec.v1.ExecObservation.contracts:type_name -> pkg.ocrtypecodec.v1.DiscoveryObservation
	51, // 16: pkg.ocrtypecodec.v1.ExecObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.ExecObservation.FChainEntry
	26, // 17: pkg.ocrtypecodec.v1.ExecOutcome.commit_reports:type_name -> pkg.ocrtypecodec.v1.CommitData
	37, // 18: pkg.ocrtypecodec.v1.ExecOutcome.execute_plugin_report:type_name -> pkg.ocrtypecodec.v1.ExecutePluginReport
	37, // 19: pkg.ocrtypecodec.v1.ExecOutcome.execute_plugin_reports:type_name -> pkg.ocrtypecodec.v1.ExecutePluginReport
	6,  // 20: pkg.ocrtypecodec.v1.MerkleRootQuery.rmn_signatures:type_name -> pkg.ocrtypecodec.v1.ReportSignatures
	7,  // 21: pkg.ocrtypecodec.v1.ReportSignatures.signatures:type_name -> pkg.ocrtypecodec.v1.SignatureEcdsa
	8,  // 22: pkg.ocrtypecodec.v1.ReportSignatures.lane_updates:type_name -> pkg.ocrtypecodec.v1.DestChainUpdate
	43, // 23: pkg.ocrtypecodec.v1.DestChainUpdate.lane_source:type_name -> pkg.ocrtypecodec.v1.SourceChainMeta
	40, // 24: pkg.ocrtypecodec.v1.DestChainUpdate.seq_num_range:type_name -> pkg.ocrtypecodec.v1.SeqNumRange
	44, // 25: pkg.ocrtypecodec.v1.MerkleRootObservation.merkle_roots:type_name -> pkg.ocrtypecodec.v1.MerkleRootChain
	52, // 26: pkg.ocrtypecodec.v1.MerkleRootObservation.rmn_enabled_chains:type_name -> pkg.ocrtypecodec.v1.MerkleRootObservation.RmnEnabledChainsEntry
	41, // 27: pkg.ocrtypecodec.v1.MerkleRootObservation.on_ramp_max_seq_nums:type_name -> pkg.ocrtypecodec.v1.SeqNumChain
	41, // 28: pkg.ocrtypecodec.v1.MerkleRootObservation.off_ramp_next_seq_nums:type_name -> pkg.ocrtypecodec.v1.SeqNumChain
	10, // 29: pkg.ocrtypecodec.v1.MerkleRootObservation.rmn_remote_config:type_name -> pkg.ocrtypecodec.v1.RmnRemoteConfig
	53, // 30: pkg.ocrtypecodec.v1.MerkleRootObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.MerkleRootObservation.FChainEntry
	11, // 31: pkg.ocrtypecodec.v1.RmnRemoteConfig.signers:type_name -> pkg.ocrtypecodec.v1.RemoteSignerInfo
	54, // 32: pkg.ocrtypecodec.v1.TokenPriceObservation.feed_token_prices:type_name -> pkg.ocrtypecodec.v1.TokenPriceObservation.FeedTokenPricesEntry
	55, // 33: pkg.ocrtypecodec.v1.TokenPriceObservation.fee_quoter_token_updates:type_name -> pkg.ocrtypecodec.v1.TokenPriceObservation.FeeQuoterTokenUpdatesEntry
	56, // 34: pkg.ocrtypecodec.v1.TokenPriceObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.TokenPriceObservation.FChainEntry
	71, // 35: pkg.ocrtypecodec.v1.TokenPriceObservation.timestamp:type_name -> google.protobuf.Timestamp
	57, // 36: pkg.ocrtypecodec.v1.ChainFeeObservation.fee_components:type_name -> pkg.ocrtypecodec.v1.ChainFeeObservation.FeeComponentsEntry
	58, // 37: pkg.ocrtypecodec.v1.ChainFeeObservation.native_token_prices:type_name -> pkg.ocrtypecodec.v1.ChainFeeObservation.NativeTokenPricesEntry
	59, // 38: pkg.ocrtypecodec.v1.ChainFeeObservation.chain_fee_updates:type_name -> pkg.ocrtypecodec.v1.ChainFeeObservation.ChainFeeUpdatesEntry
	60, // 39: pkg.ocrtypecodec.v1.ChainFeeObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.ChainFeeObservation.FChainEntry
	71, // 40: pkg.ocrtypecodec.v1.ChainFeeObservation.timestamp_now:type_name -> google.protobuf.Timestamp
	16, // 41: pkg.ocrtypecodec.v1.ChainFeeUpdate.chain_fee:type_name -> pkg.ocrtypecodec.v1.ComponentsUSDPrices
	71, // 42: pkg.ocrtypecodec.v1.ChainFeeUpdate.timestamp:type_name -> google.protobuf.Timestamp
	61, // 43: pkg.ocrtypecodec.v1.DiscoveryObservation.f_chain:type_name -> pkg.ocrtypecodec.v1.DiscoveryObservation.FChainEntry
	18, // 44: pkg.ocrtypecodec.v1.DiscoveryObservation.contract_names:type_name -> pkg.ocrtypecodec.v1.ContractNameChainAddresses
	62, // 45: pkg.ocrtypecodec.v1.ContractNameChainAddresses.addresses:type_name -> pkg.ocrtypecodec.v1.ContractNameChainAddresses.AddressesEntry
	63, // 46: pkg.ocrtypecodec.v1.ChainAddressMap.chain_addresses:type_name -> pkg.ocrtypecodec.v1.ChainAddressMap.ChainAddressesEntry
	42, // 47: pkg.ocrtypecodec.v1.MerkleRootOutcome.ranges_selected_for_report:type_name -> pkg.ocrtypecodec.v1.ChainRange
	44, // 48: pkg.ocrtypecodec.v1.MerkleRootOutcome.roots_to_report:type_name -> pkg.ocrtypecodec.v1.MerkleRootChain
	64, // 49: pkg.ocrtypecodec.v1.MerkleRootOutcome.rmn_enabled_chains:type_name -> pkg.ocrtypecodec.v1.MerkleRootOutcome.RmnEnabledChainsEntry
	41, // 50: pkg.ocrtypecodec.v1.MerkleRootOutcome.off_ramp_next_seq_nums:type_name -> pkg.ocrtypecodec.v1.SeqNumChain
	7,  // 51: pkg.ocrtypecodec.v1.MerkleRootOutcome.rmn_report_signatures:type_name -> pkg.ocrtypecodec.v1.SignatureEcdsa
	10, // 52: pkg.ocrtypecodec.v1.MerkleRootOutcome.rmn_remote_cfg:type_name -> pkg.ocrtypecodec.v1.RmnRemoteConfig
	65, // 53: pkg.ocrtypecodec.v1.TokenPriceOutcome.token_prices:type_name -> pkg.ocrtypecodec.v1.TokenPriceOutcome.TokenPricesEntry
	23, // 54: pkg.ocrtypecodec.v1.ChainFeeOutcome.gas_prices:type_name -> pkg.ocrtypecodec.v1.GasPriceChain
	26, // 55: pkg.ocrtypecodec.v1.CommitObservations.commit_data:type_name -> pkg.ocrtypecodec.v1.CommitData
	71, // 56: pkg.ocrtypecodec.v1.CommitData.timestamp:type_name -> google.protobuf.Timestamp
	40, // 57: pkg.ocrtypecodec.v1.CommitData.sequence_number_range:type_name -> pkg.ocrtypecodec.v1.SeqNumRange
	33, // 58: pkg.ocrtypecodec.v1.CommitData.messages:type_name -> pkg.ocrtypecodec.v1.Message
	27, // 59: pkg.ocrtypecodec.v1.CommitData.message_token_data:type_name -> pkg.ocrtypecodec.v1.MessageTokenData
	28, // 60: pkg.ocrtypecodec.v1.MessageTokenData.token_data:type_name -> pkg.ocrtypecodec.v1.TokenData
	66, // 61: pkg.ocrtypecodec.v1.SeqNumToMessage.messages:type_name -> pkg.ocrtypecodec.v1.SeqNumToMessage.MessagesEntry
	67, // 62: pkg.ocrtypecodec.v1.SeqNumToBytes.seq_num_to_bytes:type_name -> pkg.ocrtypecodec.v1.SeqNumToBytes.SeqNumToBytesEntry
	68, // 63: pkg.ocrtypecodec.v1.TokenDataObservations.token_data:type_name -> pkg.ocrtypecodec.v1.TokenDataObservations.TokenDataEntry
	69, // 64: pkg.ocrtypecodec.v1.SeqNumToTokenData.token_data:type_name -> pkg.ocrtypecodec.v1.SeqNumToTokenData.TokenDataEntry
	34, // 65: pkg.ocrtypecodec.v1.Message.header:type_name -> pkg.ocrtypecodec.v1.RampMessageHeader
	35, // 66: pkg.ocrtypecodec.v1.Message.token_amounts:type_name -> pkg.ocrtypecodec.v1.RampTokenAmount
	70, // 67: pkg.ocrtypecodec.v1.StringAddrToNonce.nonces:type_name -> pkg.ocrtypecodec.v1.StringAddrToNonce.NoncesEntry
	38, // 68: pkg.ocrtypecodec.v1.ExecutePluginReport.chain_reports:type_name -> pkg.ocrtypecodec.v1.ChainReport
	33, // 69: pkg.ocrtypecodec.v1.ChainReport.messages:type_name -> pkg.ocrtypecodec.v1.Message
	39, // 70: pkg.ocrtypecodec.v1.ChainReport.offchain_token_data:type_name -> pkg.ocrtypecodec.v1.RepeatedBytes
	40, // 71: pkg.ocrtypecodec.v1.ChainRange.seq_num_range:type_name -> pkg.ocrtypecodec.v1.SeqNumRange
	40, // 72: pkg.ocrtypecodec.v1.MerkleRootChain.seq_nums_range:type_name -> pkg.ocrtypecodec.v1.SeqNumRange
	71, // 73: pkg.ocrtypecodec.v1.TimestampedBig.timestamp:type_name -> google.protobuf.Timestamp
	25, // 74: pkg.ocrtypecodec.v1.ExecObservation.CommitReportsEntry.value:type_name -> pkg.ocrtypecodec.v1.CommitObservations
	29, // 75: pkg.ocrtypecodec.v1.ExecObservation.SeqNumsToMsgsEntry.value:type_name -> pkg.ocrtypecodec.v1.SeqNumToMessage
	30, // 76: pkg.ocrtypecodec.v1.ExecObservation.MsgHashesEntry.value:type_name -> pkg.ocrtypecodec.v1.SeqNumToBytes
	36, // 77: pkg.ocrtypecodec.v1.ExecObservation.NoncesEntry.value:type_name -> pkg.ocrtypecodec.v1.StringAddrToNonce
	45, // 78: pkg.ocrtypecodec.v1.TokenPriceObservation.FeeQuoterTokenUpdatesEntry.value:type_name -> pkg.ocrtypecodec.v1.TimestampedBig
	14, // 79: pkg.ocrtypecodec.v1.ChainFeeObservation.FeeComponentsEntry.value:type_name -> pkg.ocrtypecodec.v1.ChainFeeComponents
	15, // 80: pkg.ocrtypecodec.v1.ChainFeeObservation.ChainFeeUpdatesEntry.value:type_name -> pkg.ocrtypecodec.v1.ChainFeeUpdate
	19, // 81: pkg.ocrtypecodec.v1.ContractNameChainAddresses.AddressesEntry.value:type_name -> pkg.ocrtypecodec.v1.ChainAddressMap
	33, // 82: pkg.ocrtypecodec.v1.SeqNumToMessage.MessagesEntry.value:type_name -> pkg.ocrtypecodec.v1.Message
	32, // 83: pkg.ocrtypecodec.v1.TokenDataObservations.TokenDataEntry.value:type_name -> pkg.ocrtypecodec.v1.SeqNumToTokenData
	27, // 84: pkg.ocrtypecodec.v1.SeqNumToTokenData.TokenDataEntry.value:type_name -> pkg.ocrtypecodec.v1.MessageTokenData
	85, // [85:85] is the sub-list for method output_type
	85, // [85:85] is the sub-list for method input_type
	85, // [85:85] is the sub-list for extension type_name
	85, // [85:85] is the sub-list for extension extendee
	0,  // [0:85] is the sub-list for field type_name
}

func init() { file_pkg_ocrtypecodec_v1_ocrtypes_proto_init() }
func file_pkg_ocrtypecodec_v1_ocrtypes_proto_init() {
	if File_pkg_ocrtypecodec_v1_ocrtypes_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDesc), len(file_pkg_ocrtypecodec_v1_ocrtypes_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   71,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_ocrtypecodec_v1_ocrtypes_proto_goTypes,
		DependencyIndexes: file_pkg_ocrtypecodec_v1_ocrtypes_proto_depIdxs,
		MessageInfos:      file_pkg_ocrtypecodec_v1_ocrtypes_proto_msgTypes,
	}.Build()
	File_pkg_ocrtypecodec_v1_ocrtypes_proto = out.File
	file_pkg_ocrtypecodec_v1_ocrtypes_proto_goTypes = nil
	file_pkg_ocrtypecodec_v1_ocrtypes_proto_depIdxs = nil
}
