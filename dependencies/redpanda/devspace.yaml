version: v2beta1

vars:
  DEVSPACE_INGRESS_BASE_DOMAIN:
    source: env
    default: "main.stage.cldev.sh"

pipelines:
  deploy:
    run: |-
      create_deployments redpanda

  beholder:
    run: |-
      create_deployments redpanda
      create_deployments beholder-register-schema-job
      create_deployments beholder-create-topic-job

deployments:
  redpanda:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      releaseName: redpanda
      displayOutput: true
      chart:
        name: redpanda
        repo: https://charts.redpanda.com
        version: "5.9.1"
      values:
        image:
          repository: docker.redpanda.com/redpandadata/redpanda
          tag: 'v24.1.15'
        statefulset:
          replicas: 1
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
          sideCars:
            configWatcher:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
            controllers:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true

        post_install_job:
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
        post_upgrade_job:
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
        tls:
          enabled: false
        config:
          cluster:
            auto_create_topics_enabled: true
        external:
          enabled: false
        tuning:
          tune_aio_events: false
        console:
          config:
            kafka:
              protobuf:
                enabled: true
                schemaRegistry:
                  # Enable Schema Registry for Protobuf deserialization.
                  enabled: true
                  # Interval to refresh schemas from the Schema Registry.
                  refreshInterval: 5m
          ingress:
            enabled: true
            className: "alb"
            annotations:
              alb.ingress.kubernetes.io/backend-protocol: HTTP
              alb.ingress.kubernetes.io/certificate-arn: "${DEVSPACE_INGRESS_CERT_ARN}"
              alb.ingress.kubernetes.io/group.name: "${DEVSPACE_NAMESPACE}"
              alb.ingress.kubernetes.io/scheme: internal
              alb.ingress.kubernetes.io/target-type: ip
              external-dns.alpha.kubernetes.io/ttl: "120"
            hosts:
              - host: ${DEVSPACE_NAMESPACE}-redpanda-console.${DEVSPACE_INGRESS_BASE_DOMAIN}
                paths:
                  - path: /
                    pathType: Prefix

  beholder-register-schema-job:
    namespace: ${DEVSPACE_NAMESPACE}
    kubectl:
      manifests:
        - ./k8s/beholder/register-schema-config-map.yaml
        - ./k8s/beholder/register-schema-job.yaml

  beholder-create-topic-job:
    namespace: ${DEVSPACE_NAMESPACE}
    kubectl:
      manifests:
        - ./k8s/beholder/create-topic-job.yaml

profiles:
  # This profile is used to set the resorces for the redpanda deployment in the case of a load test
  - name: load-test
    merge:
      deployments:
        redpanda:
          helm:
            values:
              resources:
                cpu:
                  cores: 4
                memory:
                  container:
                    max: 10Gi