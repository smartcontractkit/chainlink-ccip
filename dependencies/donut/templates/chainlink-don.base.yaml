---
in: |
  deployments:
    chainlink-don:
      helm:
        releaseName: ${DON_TYPE}
        valuesFiles:
        {{- if eq (getenv "DON_TYPE") "gateway" }}
          - ${LOCAL_VALUES_DIR}/chainlink-cluster/type.gateway.yaml
        {{- else }}
          - ${LOCAL_VALUES_DIR}/chainlink-cluster/type.base.yaml
        {{- end }}
        values:
          fullnameOverride: ${DON_TYPE}
          nodeCount: {{ .Env.DON_NODE_COUNT }}
          bootNodeCount: {{ .Env.DON_BOOT_NODE_COUNT }}
          serviceAccount:
            enabled: false
            name: 'default'
          {{- if eq (getenv "ENABLE_INSTANCE_OVERRIDES") "false" }}
          overrides:
          {{- if gt (conv.ToInt .Env.DON_BOOT_NODE_COUNT) 0 }}
          {{- range $i := seq 0 (math.Sub .Env.DON_BOOT_NODE_COUNT 1) }}
            - chainlinkNode:
                spec:
                  database:
                    config:
                      host: ${DON_TYPE}-db-bt-{{ $i }}
          {{- end }}
          {{- end }}
          {{- if gt (conv.ToInt .Env.DON_NODE_COUNT) 0 }}
          {{- range $i := seq 0 (math.Sub .Env.DON_NODE_COUNT 1) }}
            - chainlinkNode:
                spec:
                  database:
                    config:
                      host: ${DON_TYPE}-db-{{ $i }}
          {{- end }}
          {{- end }}
          {{- end }}
    {{- if gt (conv.ToInt .Env.DON_BOOT_NODE_COUNT) 0 }}
    {{- range $i := seq 0 (math.Sub .Env.DON_BOOT_NODE_COUNT 1) }}
    chainlink-don-db-bt-{{ $i }}:
      updateImageTags: false
      namespace: ${DEVSPACE_NAMESPACE}
      helm:
        releaseName: ${DON_TYPE}-db-bt-{{ $i }}
        chart:
          name: oci://registry-1.docker.io/bitnamicharts/postgresql
          version: {{ $.Env.POSTGRES_CHART_VERSION }}
        valuesFiles:
          - ${LOCAL_VALUES_DIR}/postgresql/type.dev.yaml
          {{- if ne $.Env.PROVIDER "kind" }}
          - ${LOCAL_VALUES_DIR}/postgresql/pvc.dev.yaml
          {{- end }}
          {{- if and (eq $.Env.PROVIDER "aws") (eq $.Env.CRIB_EKS_CLUSTER_NAME "main-stage-cluster") }}
          - ${LOCAL_VALUES_DIR}/postgresql/env.crib-staging.yaml
          {{- else if and (eq $.Env.PROVIDER "aws") (eq $.Env.ENV "sandbox") }}
          - ${LOCAL_VALUES_DIR}/postgresql/env.crib-sandbox.yaml
          {{- end }}
        values:
          fullnameOverride: ${DON_TYPE}-db-bt-{{ $i }}
    {{- end }}
    {{- end }}
    {{- if gt (conv.ToInt .Env.DON_NODE_COUNT) 0 }}
    {{- range $i := seq 0 (math.Sub .Env.DON_NODE_COUNT 1) }}
    chainlink-don-db-{{ $i }}:
      updateImageTags: false
      namespace: ${DEVSPACE_NAMESPACE}
      helm:
        releaseName: ${DON_TYPE}-db-{{ $i }}
        chart:
          name: oci://registry-1.docker.io/bitnamicharts/postgresql
          version: {{ $.Env.POSTGRES_CHART_VERSION }}
        valuesFiles:
          - ${LOCAL_VALUES_DIR}/postgresql/type.dev.yaml
          {{- if ne $.Env.PROVIDER "kind" }}
          - ${LOCAL_VALUES_DIR}/postgresql/pvc.dev.yaml
          {{- end }}
          {{- if and (eq $.Env.PROVIDER "aws") (eq $.Env.CRIB_EKS_CLUSTER_NAME "main-stage-cluster") }}
          - ${LOCAL_VALUES_DIR}/postgresql/env.crib-staging.yaml
          {{- else if and (eq $.Env.PROVIDER "aws") (eq $.Env.ENV "sandbox") }}
          - ${LOCAL_VALUES_DIR}/postgresql/env.crib-sandbox.yaml
          {{- end }}
        values:
          fullnameOverride: ${DON_TYPE}-db-{{ $i }}
    {{- end }}
    {{- end }}
    {{- if eq (getenv "DON_TYPE") "gateway" }}
    gateway-ingress:
      helm:
        releaseName: gateway-ingress
        displayOutput: true
        chart:
          name: ${CHAINLINK_HELM_REGISTRY_URI}/chainlink-gateway-ingress
          version: "0.4.2"
        values:
          clusterNamePrefix: gateway
          host: "${DEVSPACE_NAMESPACE}-gateway.${DEVSPACE_INGRESS_BASE_DOMAIN}"
          clusterSize: {{ .Env.DON_NODE_COUNT }}
    {{- end }}
