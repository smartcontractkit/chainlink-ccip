---
version: v2beta1
name: chainlink-don

require:
  devspace: '>= 6.0'

vars:
  # helm
  CHAINLINK_HELM_REGISTRY_URI:
    source: env
    default: "oci://804282218731.dkr.ecr.us-west-2.amazonaws.com/infra-charts"
  # local
  LOCAL_CHARTS_DIR:
    source: env
    default: "${CHAINLINK_CODE_DIR}/infra-charts"
  LOCAL_TEMPLATES_DIR:
    source: env
    default: ./templates
  LOCAL_VALUES_DIR:
    source: env
    default: ./values
  LOCAL_SCRIPTS_DIR:
    source: env
    default: ./scripts
  # Infrastructure Provider, either kind or aws
  PROVIDER:
    source: env
    default: ""
  # Version of CCIP tooling
  CCIP_TOOLING_VERSION:
    source: env
    default: ""
  # Dir where CRIB will save env details, persisted between devspace pipeline reruns
  TMP_DIR:
    source: env
  SCRIPTS_DIR:
    source: env
  # don
  DON_TYPE:
    source: env
    default: dev
  DON_VERSION:
    source: env
    default: latest
  DON_BOOT_NODE_COUNT:
    source: env
    default: 0
  DON_NODE_COUNT:
    source: env
    default: 1
  DON_GATEWAY_NODE_COUNT:
    source: env
    default: 0
  # chains
  # Option to generate variable number of networks to be configured in Node config
  # It is required when network-generated profile is activated
  GETH_CHAINS_COUNT:
    source: env
    default: 2
  SOLANA_CHAINS_COUNT:
    source: env
    default: 1
  # switch
  ENABLE_DON_BASE:
    source: env
    default: "true"
  CRE_CONFIG_DIR:
    source: env
  JOB_DISTRIBUTOR_IMAGE_TAG:
    source: env
    default: 0.9.0
  ENABLE_JOB_DISTRIBUTOR:
    source: env
    default: "false"

pipelines:
  maybe-kind:
    run: |-
      if [[ "$PROVIDER" == "kind" ]]; then
       ensure_pull_secrets --all
      fi
  deploy:
    run: |-
      run_pipelines maybe-kind
      create_deployments --all
  deploy-ccip-v2:
    flags:
      # Determine if it should deply infra-only without onchain deployment
      - name: infraOnly
        type: bool
        default: false
      - name: redeployDONOnly
        type: bool
        default: false
    run: |-
      run_pipelines maybe-kind

      if [ $(get_flag "redeployDONOnly") == "false" ]; then
        # Deploy full setup for CCIP v2 including
        echo "Deploying full ccip-v2 setup including contracts deployment"
        create_deployments --all

        echo "Deploying app dependencies for CCIP v2"
        run_dependency_pipelines job-distributor

        if [ $(get_flag "infraOnly") == "false" ]; then
          task ccip-v2-scripts:build

          # deploy-home-chain-contracts pipeline writes 2 files to temp dir
          #   - ccip-v2-scripts-node-overrides.toml
          #   - ccip-v2-scripts-address-book.json
          run_dependency_pipelines ccip-v2-scripts-deploy-home-chain
          run_pipelines deploy-ccip-v2-don-with-overrides

          # deploy on chain contracts (tokens, lanes, token pools, price registry, router)
          run_dependency_pipelines ccip-v2-scripts-deploy-ccip
        else
          echo "infraOnly=true, skipping on chain deployments and node orchestration"
        fi
      elif [ $(get_flag "redeployDONOnly") == "true" ]; then
        echo "redeployDONOnly=true: Redeploying CCIP DON"
        run_pipelines deploy-ccip-v2-don-with-overrides
        # todo: at the moment we can't configure-ocr directly here as we need to wait for the nodes to be up and running
        # The ingress check is not sufficient to ensure that node is up, it takes more time to boot especially when
        # we're resuming existing deployment
        # ccip-v2-scripts configure-ocr
      fi
  deploy-ccip-v2-don-with-overrides:
    run: |-
      echo "Redeploying DON with overrides"
      NODE_TOML_OVERRIDES=$(cat ${TMP_DIR}/ccip-v2-scripts-node-overrides.toml) \
        gomplate --config ${LOCAL_TEMPLATES_DIR}/ccip-v2-scripts-overrides.yaml > ${TMP_DIR}/ccip-v2-node-overrides.yaml
      create_deployments chainlink-don --from-file="${TMP_DIR}/ccip-v2-node-overrides.yaml"

deployments:
  chainlink-don:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      displayOutput: true
      chart:
        name: ${CHAINLINK_HELM_REGISTRY_URI}/chainlink-cluster
        version: 2.6.0-preview-1896-f6cd441
      valuesFiles: []
      values: {}

hooks:
  # This hook will ensure that every time the deployment
  # chainlink-don is deployed that DevSpace will wait until
  # all pods and containers that match the labelSelector
  # app.kubernetes.io/name: chainlink-don are running
  # https://www.devspace.sh/docs/configuration/hooks/#wait-for-a-pod-to-be-running
  - wait:
      running: true
      timeout: 300
      # This can be needed for init containers
      # that terminate instead of become running.
      terminatedWithCode: 0
    container:
      labelSelector:
        "app.kubernetes.io/name": "chainlink-don"
    name: "wait-for-chainlink-don-pods"
    events: ["after:deploy:chainlink-don"]
  # - name: Wait for ingress hosts
  #   events: ["after:deploy:chainlink-don"]
  #   command: crib
  #   args: ["devspace", "ingress-check"]
profiles:
  # charts
  - name: local-charts
    merge:
      deployments:
        chainlink-don:
          helm:
            chart:
              name: chainlink-cluster
              path: ${LOCAL_CHARTS_DIR}/chainlink-cluster
              version: null
  # base
  - name: don-base-tmpl
    activation: &enableDonBase
      - vars:
          ENABLE_DON_BASE: "true"
    merge: |-
      $(
        DON_NODE_COUNT=${DON_NODE_COUNT} \
        DON_BOOT_NODE_COUNT=${DON_BOOT_NODE_COUNT} \
        DON_TYPE=${DON_TYPE} \
        ENV=${ENV} \
        LOCAL_VALUES_DIR="${LOCAL_VALUES_DIR}" \
        POSTGRES_CHART_VERSION="15.5.9" \
        PROVIDER=${PROVIDER} \
        POSTGRES_CHART_VERSION="15.5.9" \
        CRE_CONFIG_DIR="${CRE_CONFIG_DIR}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.base.yaml
      )
  - name: don-base-type
    activation: *enableDonBase
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/type.base.yaml
  - name: don-base-version
    activation: *enableDonBase
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/version.${DON_VERSION}.yaml
  # networks
  - name: network-arbitrum-sepolia
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.arbitrum-sepolia.yaml
  - name: network-ethereum-sepolia
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.ethereum-sepolia.yaml
  - name: network-geth-chain-1337
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.geth-chain-1337.yaml
  - name: network-geth-chain-2337
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.geth-chain-2337.yaml
  - name: network-besu-chain-alpha
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.besu-chain-alpha.yaml
  - name: network-besu-chain-beta
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.besu-chain-beta.yaml
  - name: network-ava-spruce-calm
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/network.ava-spruce-calm.yaml
  # to support load testing scenarios, the profile generate variable number of chain configs
  # It relies on CHAINS_COUNT property to generate variable number of network configs
  - name: network-generated
    merge: |-
      $(
        pushd ./scripts/network_configs/ > /dev/null
        go run main.go \
          -geth-chains-count="${GETH_CHAINS_COUNT}" \
          -solana-chains-count="${SOLANA_CHAINS_COUNT}"
      )
  # versions
  - name: version-latest
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/version.latest.yaml
  - name: version-local
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/version.k3d-local.yaml
  - name: version-from-env
    merge:
      deployments:
        chainlink-don:
          helm:
            values:
              common:
                image:
                  repository: ${DEVSPACE_IMAGE}
                  tag: ${DEVSPACE_IMAGE_TAG}
                  pullPolicy: Always
        chainlink-don-gateway:
          helm:
            values:
              common:
                image:
                  repository: ${DEVSPACE_IMAGE}
                  tag: ${DEVSPACE_IMAGE_TAG}
                  pullPolicy: Always
  # monitoring
  - name: monitoring-service-monitor
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/monitoring.service-monitor.yaml
  # overrides
  - name: overrides
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/overrides.yaml
  # overrides
  - name: overrides-ccip-v2
    patches:
      - op: add
        path: deployments.chainlink-don.helm.valuesFiles
        value: ${LOCAL_VALUES_DIR}/chainlink-cluster/overrides.ccip-v2.yaml
  - name: ccip-v2-scripts
    activation:
      - vars:
          CCIP_TOOLING_VERSION: "v2"
    merge:
      dependencies:
        ccip-v2-scripts-deploy-home-chain:
          path: ${DEPENDENCIES_DIR}/ccip-v2-scripts/devspace.yaml
          overwriteVars: true
          pipeline: deploy-home-chain-contracts
          namespace: ${DEVSPACE_NAMESPACE}
        ccip-v2-scripts-deploy-ccip:
          path: ${DEPENDENCIES_DIR}/ccip-v2-scripts/devspace.yaml
          overwriteVars: true
          pipeline: deploy-ccip
          namespace: ${DEVSPACE_NAMESPACE}
        job-distributor:
          path: ${DEPENDENCIES_DIR}/job-distributor
          overwriteVars: true
          namespace: ${DEVSPACE_NAMESPACE}
  - name: job-distributor-enabled
    activation:
      - vars:
          ENABLE_JOB_DISTRIBUTOR: "true"
    merge:
      dependencies:
        job-distributor:
          path: ${DEPENDENCIES_DIR}/job-distributor
          overwriteVars: true
          namespace: ${DEVSPACE_NAMESPACE}
          vars:
            JOB_DISTRIBUTOR_IMAGE_TAG: ${JOB_DISTRIBUTOR_IMAGE_TAG}

  - name: job-distributor-aws-staging
    activation:
      - vars:
          ENABLE_JOB_DISTRIBUTOR: "true"
          PROVIDER: "aws"
          CRIB_EKS_CLUSTER_NAME: "main-stage-cluster"
    merge:
      dependencies:
        job-distributor:
          profiles:
          #  - size-medium
  - name: crib-staging
    activation:
      - vars:
          PROVIDER: "aws"
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        DON_TYPE="${DON_TYPE}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-staging.yaml
      )
  - name: ccip-aws-staging
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-staging-ccip.yaml
      )
  - name: crib-aws-main-fwog
    activation:
      - vars:
          PROVIDER: "aws"
          CRIB_EKS_CLUSTER_NAME: "main-fwog"
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        DON_TYPE="${DON_TYPE}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-main-fwog.yaml
      )
  - name: crib-aws-sandbox
    activation:
      - vars:
          PROVIDER: "aws"
          ENV: "sand"
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        DON_TYPE="${DON_TYPE}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-sandbox.yaml
      )
  - name: ccip-load-testing-aws-staging
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        DON_TYPE="${DON_TYPE}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-staging-ccip-load-tests.yaml
      )
  - name: crib-kind
    activation:
      - vars:
          PROVIDER: "kind"
    merge: |-
      $(
        DEVSPACE_NAMESPACE=${DEVSPACE_NAMESPACE} \
        DON_TYPE="${DON_TYPE}" \
        gomplate \
          --config ${LOCAL_TEMPLATES_DIR}/chainlink-don.env.crib-kind.yaml
      )
  - name: git-charts
    merge:
      deployments:
        chainlink-don:
          helm:
            chart:
              git: https://github.com/smartcontractkit/infra-charts
              subPath: chainlink-cluster
              revision: a1928889c2b94f5e8e0849dee7727480d6b49cce
