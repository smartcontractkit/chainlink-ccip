// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.


package mock_usdc_token_transmitter

var Metadata = "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_version\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"_localDomain\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\",\"indexed\":false}],\"type\":\"event\",\"name\":\"MessageSent\",\"anonymous\":false},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"localDomain\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"nextAvailableNonce\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}]},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"receiveMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}]},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"s_shouldSucceed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}]},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"sendMessage\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}]},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"destinationDomain\",\"type\":\"uint32\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"destinationCaller\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"messageBody\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"sendMessageWithCaller\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}]},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"shouldSucceed\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\",\"name\":\"setShouldSucceed\"},{\"inputs\":[],\"stateMutability\":\"view\",\"type\":\"function\",\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}]}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"localDomain()\":{\"details\":\"immutable\"},\"receiveMessage(bytes,bytes)\":{\"params\":{\"message\":\"The original message on the source chain     * Message format:     * Field                 Bytes      Type       Index     * version               4          uint32     0     * sourceDomain          4          uint32     4     * destinationDomain     4          uint32     8     * nonce                 8          uint64     12     * sender                32         bytes32    20     * recipient             32         bytes32    52     * destinationCaller     32         bytes32    84     * messageBody           dynamic    bytes      116\"}},\"sendMessage(uint32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information.\",\"params\":{\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination chain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"details\":\"Increment nonce, format the message, and emit `MessageSent` event with message information. WARNING: if the `destinationCaller` does not represent a valid address, then it will not be possible to broadcast the message on the destination domain. This is an advanced feature, and the standard sendMessage() should be preferred for use cases where a specific destination caller is not required.\",\"params\":{\"destinationCaller\":\"caller on the destination domain, as bytes32\",\"destinationDomain\":\"Domain of destination chain\",\"messageBody\":\"Raw bytes content of message\",\"recipient\":\"Address of message recipient on destination domain as bytes32\"},\"returns\":{\"_0\":\"nonce reserved by message\"}},\"version()\":{\"details\":\"immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"localDomain()\":{\"notice\":\"Returns domain of chain on which the contract is deployed.\"},\"sendMessage(uint32,bytes32,bytes)\":{\"notice\":\"This is based on similar function in https://github.com/circlefin/evm-cctp-contracts/blob/master/src/MessageTransmitter.solSend the message to the destination domain and recipient\"},\"sendMessageWithCaller(uint32,bytes32,bytes32,bytes)\":{\"notice\":\"Send the message to the destination domain and recipient, for a specified `destinationCaller` on the destination domain.\"},\"version()\":{\"notice\":\"Returns message format version.\"}},\"version\":1}},\"settings\":{\"remappings\":[\"@chainlink/=node_modules/@chainlink/contracts/src/v0.8/\",\"forge-std/=node_modules/@chainlink/contracts/src/v0.8/vendor/forge-std/src/\"],\"optimizer\":{\"enabled\":true,\"runs\":80000},\"metadata\":{\"bytecodeHash\":\"none\"},\"compilationTarget\":{\"contracts/test/mocks/MockE2EUSDCTransmitter.sol\":\"MockE2EUSDCTransmitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"viaIR\":true},\"sources\":{\"contracts/pools/USDC/IMessageTransmitter.sol\":{\"keccak256\":\"0x3a247a80166d413ecfec0ab0121325a19560ee9d92324045a256cebad733a1e6\",\"urls\":[\"bzz-raw://bdc297926a6a25d339ecb49a6ebbce2057a321adf6107f55a09782a09fe6f38f\",\"dweb:/ipfs/QmRWhUBPpxosBDeCgaRQeeM8ZLg7eaW9aJc3gF9fyUTyHT\"],\"license\":null},\"contracts/test/mocks/MockE2EUSDCTransmitter.sol\":{\"keccak256\":\"0x5350709742357645bee48e2abf93d355c4fa55b45a0caa0f2b6939432142aa1c\",\"urls\":[\"bzz-raw://cf9253d3ac8cec2856a98999161068deb896f14403454d0d31402dca62c89523\",\"dweb:/ipfs/QmR9KcfqoTT58NqAQTJswg6KKSM2wgZcjX32UrUjxDtEXh\"],\"license\":null},\"contracts/test/mocks/interfaces/IMessageTransmitterWithRelay.sol\":{\"keccak256\":\"0x0f62e29819bc5cff905d0b81a745a6f2dc6791250e43c4d2afc314f89253d94f\",\"urls\":[\"bzz-raw://404195344c45816e841a340ec1d0dddedd93551891da691f48f201ed54a511cd\",\"dweb:/ipfs/QmSXHHmQFtzWdKbzD3zyNjKS8jnRBW3unJ1t3Cva66gEig\"],\"license\":null},\"node_modules/@chainlink/contracts/src/v0.8/shared/interfaces/IGetCCIPAdmin.sol\":{\"keccak256\":\"0x915794040125fbb75110b20e60c3e6b584d92f57d40b77266bc37d31dae3bd29\",\"urls\":[\"bzz-raw://a29c372536049088ee5c0c0618e532826f2e027adf07fe6a656c08c7b057f152\",\"dweb:/ipfs/QmYaGB6PFdysgkvJR8gB6LVNQzfoF3pT5J5KMViTYLxMiN\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/shared/token/ERC20/BurnMintERC20.sol\":{\"keccak256\":\"0x9b3de5ac19a2c8c281ae1004e29961cf85b3b49a53d252554588473712ff9fca\",\"urls\":[\"bzz-raw://64e80877619b24e08a10fa522c1d3864900a7c8ed62da206dfc52271db7241d6\",\"dweb:/ipfs/QmPBQjpqFffen6fCK6tbYPyL5XqEVTsQ2MsB9opV6E5SxA\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/shared/token/ERC20/IBurnMintERC20.sol\":{\"keccak256\":\"0xbb8f9a00d41bbc516c691a4685c07c291b978fff98d133a50bb4773a6fc2b19f\",\"urls\":[\"bzz-raw://28fc726d16cc887f542040d198f010b79b46beb48be3317aa2254126f89900fa\",\"dweb:/ipfs/QmUjL8MCRcenLQossX64dAk71q2JNgEzia3QA1iRNgdXc7\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc4c1493a02dd5f14936751107d35c53319d74a72429450ed55c585912c576dcc\",\"urls\":[\"bzz-raw://a4e3ccf638bb5d2b2ba219e4559bd0963e3ac6f91e9045a6c1c05c53157a6cc0\",\"dweb:/ipfs/QmWYtVxgeKJL1XmtXNgsurmFL5WT9f8LhC81g2Jyqc3uUr\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x6edba116c3de120257f96a0e2cf286645d5b3317a06a20cbf933f1fa2166d7f6\",\"urls\":[\"bzz-raw://e2ae40556690160edd76ca00a6a2f88947d127cb1de0d5ac4ae373d118eaecb7\",\"dweb:/ipfs/QmTuNz3XMXdbtLA5YQzdrXxYvpqiTpjegk2EuLeSRmrAHL\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb887157b76f9985dc9c622eb97aaa83974045481892934fe51847d7aaa327c4b\",\"urls\":[\"bzz-raw://0aaed6871c4a96ca18a85f7fb6c9c9f59a2f7e01a4f177652c07bc4280729740\",\"dweb:/ipfs/QmVqjGKEhVu2M6dCdXD9UyzKWQ9bfCez6dMiiPP1ZFXZbs\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x527e858729af8197f6c8f99554d32bfc4f5a72b15975489c94809363d7ae522f\",\"urls\":[\"bzz-raw://6828dfa867eaff18f383aad4ca4b5aaedb93109023d74aaf418fee6c06e556c2\",\"dweb:/ipfs/QmXSQ9WnaJ6Ba9gvKvgNxDY7sa7ATJ9V55uwGSGCpBuJKu\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xe59a2a9091d311e24bdf02c955897af112194b40ce3ed0027d6ec0a4a6cb047a\",\"urls\":[\"bzz-raw://be27af37377f8a9fc1496b89b44ea2356a730fa89e3c3fc1dae82e2cfc3e2954\",\"dweb:/ipfs/QmUhuckaShtFcS2YhNkEk2vuwJSCwsH5NUcq43PcoMtNNo\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x057a2ba732c7946ef55d676e5a7aa0119443cf67c75f404838065a31ddd4877c\",\"urls\":[\"bzz-raw://68f38ed8ff0ec8fbbadee903b8bcffe6338d5af1042b03fc6e1947544b2e49c3\",\"dweb:/ipfs/QmZ5Xog8PEALYzQ86xTZUcevA9ihr7MXKU3z8wRqD6rg9B\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/Context.sol\":{\"keccak256\":\"0x197651ff7207345936e19940e36235967fe866449caa294e19642b6c6aaa62f8\",\"urls\":[\"bzz-raw://3cb4e784c91e106ee75877271ff11f9997a68bc9e577cab4d36d60a10b88e6e9\",\"dweb:/ipfs/QmVuLfSBsfsqcpUcsFaY275Re3n7uQW6ErhDGpYHY92uBo\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/Strings.sol\":{\"keccak256\":\"0x173d7c4508b1aaf1b88a8ca4f7af37e199d28d16daaba007500204340cfef89a\",\"urls\":[\"bzz-raw://dba6954f69c32185f1dbce280946794a0c44fe9271ed24fdfd30ad182d58995d\",\"dweb:/ipfs/QmQ7EUiqgHsUi9GSuS92vRen87DuQuSa3TUkToLLNMt27t\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x007e2f7272ae11ad26d41ab057568d7db5d17cd0a38b4bc68a38aba88abd69e4\",\"urls\":[\"bzz-raw://0b687dd9507abe6777e3ad535dc8add5ad634b1ea229a9b56ce3d92410adedab\",\"dweb:/ipfs/QmfZWeGWnnD4nGZn8L853PiKdqMHcSKCTLj5dfSvmB3ZzR\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa36a31b4bb17fad88d023474893b3b895fa421650543b1ce5aefc78efbd43244\",\"urls\":[\"bzz-raw://0f235b9175d95111f301d729566e214c32559e55a2b0579c947484748e20679d\",\"dweb:/ipfs/QmSsNBuPejy1wNe2u3JSt2p9wFhrjvBjFrnAaNe1nDNkEA\"],\"license\":\"MIT\"},\"node_modules/@chainlink/contracts/src/v0.8/vendor/openzeppelin-solidity/v4.8.3/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x5075b418b3ac93b7b3363f3d76cef785aee3e092f9ebe5f94fd791c7463c98ea\",\"urls\":[\"bzz-raw://61ce2f805bc4fa55538c522e821165edfe99d47fe45f6aa9f521cb0219988a1f\",\"dweb:/ipfs/Qmf7do7CJxhum1743WSeUTZHg5Gueom3Qn3tcMpaZJ4mJB\"],\"license\":\"MIT\"}},\"version\":1}"
