// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package ccip_router

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// Queries the onramp for the fee required to send a message.
//
// This call is permissionless. Note it does not verify whether there's a curse active
// in order to avoid the RMN CPI overhead.
//
// # Arguments
//
// * `ctx` - The context containing the accounts required for obtaining the message fee.
// * `dest_chain_selector` - The chain selector for the destination chain.
// * `message` - The message to be sent. The size limit of data is 256 bytes.
type GetFeeInstruction struct {
	DestChainSelector *uint64
	Message           *SVM2AnyMessage

	// [0] = [] config
	//
	// [1] = [] dest_chain_state
	//
	// [2] = [] fee_quoter
	//
	// [3] = [] fee_quoter_config
	//
	// [4] = [] fee_quoter_dest_chain
	//
	// [5] = [] fee_quoter_billing_token_config
	//
	// [6] = [] fee_quoter_link_token_config
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewGetFeeInstructionBuilder creates a new `GetFeeInstruction` instruction builder.
func NewGetFeeInstructionBuilder() *GetFeeInstruction {
	nd := &GetFeeInstruction{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 7),
	}
	return nd
}

// SetDestChainSelector sets the "dest_chain_selector" parameter.
func (inst *GetFeeInstruction) SetDestChainSelector(dest_chain_selector uint64) *GetFeeInstruction {
	inst.DestChainSelector = &dest_chain_selector
	return inst
}

// SetMessage sets the "message" parameter.
func (inst *GetFeeInstruction) SetMessage(message SVM2AnyMessage) *GetFeeInstruction {
	inst.Message = &message
	return inst
}

// SetConfigAccount sets the "config" account.
func (inst *GetFeeInstruction) SetConfigAccount(config ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(config)
	return inst
}

// GetConfigAccount gets the "config" account.
func (inst *GetFeeInstruction) GetConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetDestChainStateAccount sets the "dest_chain_state" account.
func (inst *GetFeeInstruction) SetDestChainStateAccount(destChainState ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(destChainState)
	return inst
}

// GetDestChainStateAccount gets the "dest_chain_state" account.
func (inst *GetFeeInstruction) GetDestChainStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetFeeQuoterAccount sets the "fee_quoter" account.
func (inst *GetFeeInstruction) SetFeeQuoterAccount(feeQuoter ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(feeQuoter)
	return inst
}

// GetFeeQuoterAccount gets the "fee_quoter" account.
func (inst *GetFeeInstruction) GetFeeQuoterAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetFeeQuoterConfigAccount sets the "fee_quoter_config" account.
func (inst *GetFeeInstruction) SetFeeQuoterConfigAccount(feeQuoterConfig ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(feeQuoterConfig)
	return inst
}

// GetFeeQuoterConfigAccount gets the "fee_quoter_config" account.
func (inst *GetFeeInstruction) GetFeeQuoterConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetFeeQuoterDestChainAccount sets the "fee_quoter_dest_chain" account.
func (inst *GetFeeInstruction) SetFeeQuoterDestChainAccount(feeQuoterDestChain ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(feeQuoterDestChain)
	return inst
}

// GetFeeQuoterDestChainAccount gets the "fee_quoter_dest_chain" account.
func (inst *GetFeeInstruction) GetFeeQuoterDestChainAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetFeeQuoterBillingTokenConfigAccount sets the "fee_quoter_billing_token_config" account.
func (inst *GetFeeInstruction) SetFeeQuoterBillingTokenConfigAccount(feeQuoterBillingTokenConfig ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(feeQuoterBillingTokenConfig)
	return inst
}

// GetFeeQuoterBillingTokenConfigAccount gets the "fee_quoter_billing_token_config" account.
func (inst *GetFeeInstruction) GetFeeQuoterBillingTokenConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetFeeQuoterLinkTokenConfigAccount sets the "fee_quoter_link_token_config" account.
func (inst *GetFeeInstruction) SetFeeQuoterLinkTokenConfigAccount(feeQuoterLinkTokenConfig ag_solanago.PublicKey) *GetFeeInstruction {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(feeQuoterLinkTokenConfig)
	return inst
}

// GetFeeQuoterLinkTokenConfigAccount gets the "fee_quoter_link_token_config" account.
func (inst *GetFeeInstruction) GetFeeQuoterLinkTokenConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

func (inst GetFeeInstruction) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_GetFee,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst GetFeeInstruction) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *GetFeeInstruction) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.DestChainSelector == nil {
			return errors.New("DestChainSelector parameter is not set")
		}
		if inst.Message == nil {
			return errors.New("Message parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Config is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.DestChainState is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.FeeQuoter is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.FeeQuoterConfig is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.FeeQuoterDestChain is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.FeeQuoterBillingTokenConfig is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.FeeQuoterLinkTokenConfig is not set")
		}
	}
	return nil
}

func (inst *GetFeeInstruction) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("GetFee")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=2]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("  DestChainSelector", *inst.DestChainSelector))
						paramsBranch.Child(ag_format.Param("            Message", *inst.Message))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=7]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                         config", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("               dest_chain_state", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("                     fee_quoter", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("              fee_quoter_config", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("          fee_quoter_dest_chain", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("fee_quoter_billing_token_config", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("   fee_quoter_link_token_config", inst.AccountMetaSlice.Get(6)))
					})
				})
		})
}

func (obj GetFeeInstruction) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `DestChainSelector` param:
	err = encoder.Encode(obj.DestChainSelector)
	if err != nil {
		return err
	}
	// Serialize `Message` param:
	err = encoder.Encode(obj.Message)
	if err != nil {
		return err
	}
	return nil
}
func (obj *GetFeeInstruction) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `DestChainSelector`:
	err = decoder.Decode(&obj.DestChainSelector)
	if err != nil {
		return err
	}
	// Deserialize `Message`:
	err = decoder.Decode(&obj.Message)
	if err != nil {
		return err
	}
	return nil
}

// NewGetFeeInstruction declares a new GetFee instruction with the provided parameters and accounts.
func NewGetFeeInstruction(
	// Parameters:
	dest_chain_selector uint64,
	message SVM2AnyMessage,
	// Accounts:
	config ag_solanago.PublicKey,
	destChainState ag_solanago.PublicKey,
	feeQuoter ag_solanago.PublicKey,
	feeQuoterConfig ag_solanago.PublicKey,
	feeQuoterDestChain ag_solanago.PublicKey,
	feeQuoterBillingTokenConfig ag_solanago.PublicKey,
	feeQuoterLinkTokenConfig ag_solanago.PublicKey) *GetFeeInstruction {
	return NewGetFeeInstructionBuilder().
		SetDestChainSelector(dest_chain_selector).
		SetMessage(message).
		SetConfigAccount(config).
		SetDestChainStateAccount(destChainState).
		SetFeeQuoterAccount(feeQuoter).
		SetFeeQuoterConfigAccount(feeQuoterConfig).
		SetFeeQuoterDestChainAccount(feeQuoterDestChain).
		SetFeeQuoterBillingTokenConfigAccount(feeQuoterBillingTokenConfig).
		SetFeeQuoterLinkTokenConfigAccount(feeQuoterLinkTokenConfig)
}
