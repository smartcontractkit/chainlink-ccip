// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package ping_pong_demo

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// SetOutOfOrderExecution is the `setOutOfOrderExecution` instruction.
type SetOutOfOrderExecution struct {
	OutOfOrderExecution *bool

	// [0] = [WRITE] config
	//
	// [1] = [WRITE, SIGNER] authority
	ag_solanago.AccountMetaSlice `bin:"-" borsh_skip:"true"`
}

// NewSetOutOfOrderExecutionInstructionBuilder creates a new `SetOutOfOrderExecution` instruction builder.
func NewSetOutOfOrderExecutionInstructionBuilder() *SetOutOfOrderExecution {
	nd := &SetOutOfOrderExecution{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 2),
	}
	return nd
}

// SetOutOfOrderExecution sets the "outOfOrderExecution" parameter.
func (inst *SetOutOfOrderExecution) SetOutOfOrderExecution(outOfOrderExecution bool) *SetOutOfOrderExecution {
	inst.OutOfOrderExecution = &outOfOrderExecution
	return inst
}

// SetConfigAccount sets the "config" account.
func (inst *SetOutOfOrderExecution) SetConfigAccount(config ag_solanago.PublicKey) *SetOutOfOrderExecution {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(config).WRITE()
	return inst
}

// GetConfigAccount gets the "config" account.
func (inst *SetOutOfOrderExecution) GetConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[0]
}

// SetAuthorityAccount sets the "authority" account.
func (inst *SetOutOfOrderExecution) SetAuthorityAccount(authority ag_solanago.PublicKey) *SetOutOfOrderExecution {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(authority).WRITE().SIGNER()
	return inst
}

// GetAuthorityAccount gets the "authority" account.
func (inst *SetOutOfOrderExecution) GetAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice[1]
}

func (inst SetOutOfOrderExecution) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_SetOutOfOrderExecution,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst SetOutOfOrderExecution) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *SetOutOfOrderExecution) Validate() error {
	// Check whether all (required) parameters are set:
	{
		if inst.OutOfOrderExecution == nil {
			return errors.New("OutOfOrderExecution parameter is not set")
		}
	}

	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Config is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Authority is not set")
		}
	}
	return nil
}

func (inst *SetOutOfOrderExecution) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("SetOutOfOrderExecution")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=1]").ParentFunc(func(paramsBranch ag_treeout.Branches) {
						paramsBranch.Child(ag_format.Param("OutOfOrderExecution", *inst.OutOfOrderExecution))
					})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=2]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("   config", inst.AccountMetaSlice[0]))
						accountsBranch.Child(ag_format.Meta("authority", inst.AccountMetaSlice[1]))
					})
				})
		})
}

func (obj SetOutOfOrderExecution) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	// Serialize `OutOfOrderExecution` param:
	err = encoder.Encode(obj.OutOfOrderExecution)
	if err != nil {
		return err
	}
	return nil
}
func (obj *SetOutOfOrderExecution) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	// Deserialize `OutOfOrderExecution`:
	err = decoder.Decode(&obj.OutOfOrderExecution)
	if err != nil {
		return err
	}
	return nil
}

// NewSetOutOfOrderExecutionInstruction declares a new SetOutOfOrderExecution instruction with the provided parameters and accounts.
func NewSetOutOfOrderExecutionInstruction(
	// Parameters:
	outOfOrderExecution bool,
	// Accounts:
	config ag_solanago.PublicKey,
	authority ag_solanago.PublicKey) *SetOutOfOrderExecution {
	return NewSetOutOfOrderExecutionInstructionBuilder().
		SetOutOfOrderExecution(outOfOrderExecution).
		SetConfigAccount(config).
		SetAuthorityAccount(authority)
}
