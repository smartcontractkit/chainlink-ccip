// Code generated by https://github.com/gagliardetto/anchor-go. DO NOT EDIT.

package ping_pong_demo

import (
	"errors"
	ag_binary "github.com/gagliardetto/binary"
	ag_solanago "github.com/gagliardetto/solana-go"
	ag_format "github.com/gagliardetto/solana-go/text/format"
	ag_treeout "github.com/gagliardetto/treeout"
)

// StartPingPong is the `start_ping_pong` instruction.
type StartPingPongInstruction struct {

	// [0] = [WRITE] config
	//
	// [1] = [WRITE, SIGNER] authority
	//
	// [2] = [WRITE] ccip_send_signer
	// ··········· CHECK
	//
	// [3] = [] fee_token_program
	//
	// [4] = [] fee_token_mint
	//
	// [5] = [WRITE] fee_token_ata
	//
	// [6] = [] ccip_router_program
	// ··········· CHECK
	//
	// [7] = [] ccip_router_config
	// ··········· CHECK
	//
	// [8] = [WRITE] ccip_router_dest_chain_state
	// ··········· CHECK
	//
	// [9] = [WRITE] ccip_router_nonce
	// ··········· CHECK
	//
	// [10] = [WRITE] ccip_router_fee_receiver
	// ··········· CHECK
	//
	// [11] = [] ccip_router_fee_billing_signer
	// ··········· CHECK
	//
	// [12] = [] fee_quoter
	// ··········· CHECK
	//
	// [13] = [] fee_quoter_config
	// ··········· CHECK
	//
	// [14] = [] fee_quoter_dest_chain
	// ··········· CHECK
	//
	// [15] = [] fee_quoter_billing_token_config
	// ··········· CHECK
	//
	// [16] = [] fee_quoter_link_token_config
	// ··········· CHECK
	//
	// [17] = [] rmn_remote
	// ··········· CHECK
	//
	// [18] = [] rmn_remote_curses
	// ··········· CHECK
	//
	// [19] = [] rmn_remote_config
	// ··········· CHECK
	//
	// [20] = [] system_program
	ag_solanago.AccountMetaSlice `bin:"-"`
}

// NewStartPingPongInstructionBuilder creates a new `StartPingPongInstruction` instruction builder.
func NewStartPingPongInstructionBuilder() *StartPingPongInstruction {
	nd := &StartPingPongInstruction{
		AccountMetaSlice: make(ag_solanago.AccountMetaSlice, 21),
	}
	return nd
}

// SetConfigAccount sets the "config" account.
func (inst *StartPingPongInstruction) SetConfigAccount(config ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[0] = ag_solanago.Meta(config).WRITE()
	return inst
}

// GetConfigAccount gets the "config" account.
func (inst *StartPingPongInstruction) GetConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(0)
}

// SetAuthorityAccount sets the "authority" account.
func (inst *StartPingPongInstruction) SetAuthorityAccount(authority ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[1] = ag_solanago.Meta(authority).WRITE().SIGNER()
	return inst
}

// GetAuthorityAccount gets the "authority" account.
func (inst *StartPingPongInstruction) GetAuthorityAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(1)
}

// SetCcipSendSignerAccount sets the "ccip_send_signer" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipSendSignerAccount(ccipSendSigner ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[2] = ag_solanago.Meta(ccipSendSigner).WRITE()
	return inst
}

// GetCcipSendSignerAccount gets the "ccip_send_signer" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipSendSignerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(2)
}

// SetFeeTokenProgramAccount sets the "fee_token_program" account.
func (inst *StartPingPongInstruction) SetFeeTokenProgramAccount(feeTokenProgram ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[3] = ag_solanago.Meta(feeTokenProgram)
	return inst
}

// GetFeeTokenProgramAccount gets the "fee_token_program" account.
func (inst *StartPingPongInstruction) GetFeeTokenProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(3)
}

// SetFeeTokenMintAccount sets the "fee_token_mint" account.
func (inst *StartPingPongInstruction) SetFeeTokenMintAccount(feeTokenMint ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[4] = ag_solanago.Meta(feeTokenMint)
	return inst
}

// GetFeeTokenMintAccount gets the "fee_token_mint" account.
func (inst *StartPingPongInstruction) GetFeeTokenMintAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(4)
}

// SetFeeTokenAtaAccount sets the "fee_token_ata" account.
func (inst *StartPingPongInstruction) SetFeeTokenAtaAccount(feeTokenAta ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[5] = ag_solanago.Meta(feeTokenAta).WRITE()
	return inst
}

// GetFeeTokenAtaAccount gets the "fee_token_ata" account.
func (inst *StartPingPongInstruction) GetFeeTokenAtaAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(5)
}

// SetCcipRouterProgramAccount sets the "ccip_router_program" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterProgramAccount(ccipRouterProgram ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[6] = ag_solanago.Meta(ccipRouterProgram)
	return inst
}

// GetCcipRouterProgramAccount gets the "ccip_router_program" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(6)
}

// SetCcipRouterConfigAccount sets the "ccip_router_config" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterConfigAccount(ccipRouterConfig ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[7] = ag_solanago.Meta(ccipRouterConfig)
	return inst
}

// GetCcipRouterConfigAccount gets the "ccip_router_config" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(7)
}

// SetCcipRouterDestChainStateAccount sets the "ccip_router_dest_chain_state" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterDestChainStateAccount(ccipRouterDestChainState ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[8] = ag_solanago.Meta(ccipRouterDestChainState).WRITE()
	return inst
}

// GetCcipRouterDestChainStateAccount gets the "ccip_router_dest_chain_state" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterDestChainStateAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(8)
}

// SetCcipRouterNonceAccount sets the "ccip_router_nonce" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterNonceAccount(ccipRouterNonce ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[9] = ag_solanago.Meta(ccipRouterNonce).WRITE()
	return inst
}

// GetCcipRouterNonceAccount gets the "ccip_router_nonce" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterNonceAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(9)
}

// SetCcipRouterFeeReceiverAccount sets the "ccip_router_fee_receiver" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterFeeReceiverAccount(ccipRouterFeeReceiver ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[10] = ag_solanago.Meta(ccipRouterFeeReceiver).WRITE()
	return inst
}

// GetCcipRouterFeeReceiverAccount gets the "ccip_router_fee_receiver" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterFeeReceiverAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(10)
}

// SetCcipRouterFeeBillingSignerAccount sets the "ccip_router_fee_billing_signer" account.
// CHECK
func (inst *StartPingPongInstruction) SetCcipRouterFeeBillingSignerAccount(ccipRouterFeeBillingSigner ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[11] = ag_solanago.Meta(ccipRouterFeeBillingSigner)
	return inst
}

// GetCcipRouterFeeBillingSignerAccount gets the "ccip_router_fee_billing_signer" account.
// CHECK
func (inst *StartPingPongInstruction) GetCcipRouterFeeBillingSignerAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(11)
}

// SetFeeQuoterAccount sets the "fee_quoter" account.
// CHECK
func (inst *StartPingPongInstruction) SetFeeQuoterAccount(feeQuoter ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[12] = ag_solanago.Meta(feeQuoter)
	return inst
}

// GetFeeQuoterAccount gets the "fee_quoter" account.
// CHECK
func (inst *StartPingPongInstruction) GetFeeQuoterAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(12)
}

// SetFeeQuoterConfigAccount sets the "fee_quoter_config" account.
// CHECK
func (inst *StartPingPongInstruction) SetFeeQuoterConfigAccount(feeQuoterConfig ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[13] = ag_solanago.Meta(feeQuoterConfig)
	return inst
}

// GetFeeQuoterConfigAccount gets the "fee_quoter_config" account.
// CHECK
func (inst *StartPingPongInstruction) GetFeeQuoterConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(13)
}

// SetFeeQuoterDestChainAccount sets the "fee_quoter_dest_chain" account.
// CHECK
func (inst *StartPingPongInstruction) SetFeeQuoterDestChainAccount(feeQuoterDestChain ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[14] = ag_solanago.Meta(feeQuoterDestChain)
	return inst
}

// GetFeeQuoterDestChainAccount gets the "fee_quoter_dest_chain" account.
// CHECK
func (inst *StartPingPongInstruction) GetFeeQuoterDestChainAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(14)
}

// SetFeeQuoterBillingTokenConfigAccount sets the "fee_quoter_billing_token_config" account.
// CHECK
func (inst *StartPingPongInstruction) SetFeeQuoterBillingTokenConfigAccount(feeQuoterBillingTokenConfig ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[15] = ag_solanago.Meta(feeQuoterBillingTokenConfig)
	return inst
}

// GetFeeQuoterBillingTokenConfigAccount gets the "fee_quoter_billing_token_config" account.
// CHECK
func (inst *StartPingPongInstruction) GetFeeQuoterBillingTokenConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(15)
}

// SetFeeQuoterLinkTokenConfigAccount sets the "fee_quoter_link_token_config" account.
// CHECK
func (inst *StartPingPongInstruction) SetFeeQuoterLinkTokenConfigAccount(feeQuoterLinkTokenConfig ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[16] = ag_solanago.Meta(feeQuoterLinkTokenConfig)
	return inst
}

// GetFeeQuoterLinkTokenConfigAccount gets the "fee_quoter_link_token_config" account.
// CHECK
func (inst *StartPingPongInstruction) GetFeeQuoterLinkTokenConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(16)
}

// SetRmnRemoteAccount sets the "rmn_remote" account.
// CHECK
func (inst *StartPingPongInstruction) SetRmnRemoteAccount(rmnRemote ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[17] = ag_solanago.Meta(rmnRemote)
	return inst
}

// GetRmnRemoteAccount gets the "rmn_remote" account.
// CHECK
func (inst *StartPingPongInstruction) GetRmnRemoteAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(17)
}

// SetRmnRemoteCursesAccount sets the "rmn_remote_curses" account.
// CHECK
func (inst *StartPingPongInstruction) SetRmnRemoteCursesAccount(rmnRemoteCurses ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[18] = ag_solanago.Meta(rmnRemoteCurses)
	return inst
}

// GetRmnRemoteCursesAccount gets the "rmn_remote_curses" account.
// CHECK
func (inst *StartPingPongInstruction) GetRmnRemoteCursesAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(18)
}

// SetRmnRemoteConfigAccount sets the "rmn_remote_config" account.
// CHECK
func (inst *StartPingPongInstruction) SetRmnRemoteConfigAccount(rmnRemoteConfig ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[19] = ag_solanago.Meta(rmnRemoteConfig)
	return inst
}

// GetRmnRemoteConfigAccount gets the "rmn_remote_config" account.
// CHECK
func (inst *StartPingPongInstruction) GetRmnRemoteConfigAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(19)
}

// SetSystemProgramAccount sets the "system_program" account.
func (inst *StartPingPongInstruction) SetSystemProgramAccount(systemProgram ag_solanago.PublicKey) *StartPingPongInstruction {
	inst.AccountMetaSlice[20] = ag_solanago.Meta(systemProgram)
	return inst
}

// GetSystemProgramAccount gets the "system_program" account.
func (inst *StartPingPongInstruction) GetSystemProgramAccount() *ag_solanago.AccountMeta {
	return inst.AccountMetaSlice.Get(20)
}

func (inst StartPingPongInstruction) Build() *Instruction {
	return &Instruction{BaseVariant: ag_binary.BaseVariant{
		Impl:   inst,
		TypeID: Instruction_StartPingPong,
	}}
}

// ValidateAndBuild validates the instruction parameters and accounts;
// if there is a validation error, it returns the error.
// Otherwise, it builds and returns the instruction.
func (inst StartPingPongInstruction) ValidateAndBuild() (*Instruction, error) {
	if err := inst.Validate(); err != nil {
		return nil, err
	}
	return inst.Build(), nil
}

func (inst *StartPingPongInstruction) Validate() error {
	// Check whether all (required) accounts are set:
	{
		if inst.AccountMetaSlice[0] == nil {
			return errors.New("accounts.Config is not set")
		}
		if inst.AccountMetaSlice[1] == nil {
			return errors.New("accounts.Authority is not set")
		}
		if inst.AccountMetaSlice[2] == nil {
			return errors.New("accounts.CcipSendSigner is not set")
		}
		if inst.AccountMetaSlice[3] == nil {
			return errors.New("accounts.FeeTokenProgram is not set")
		}
		if inst.AccountMetaSlice[4] == nil {
			return errors.New("accounts.FeeTokenMint is not set")
		}
		if inst.AccountMetaSlice[5] == nil {
			return errors.New("accounts.FeeTokenAta is not set")
		}
		if inst.AccountMetaSlice[6] == nil {
			return errors.New("accounts.CcipRouterProgram is not set")
		}
		if inst.AccountMetaSlice[7] == nil {
			return errors.New("accounts.CcipRouterConfig is not set")
		}
		if inst.AccountMetaSlice[8] == nil {
			return errors.New("accounts.CcipRouterDestChainState is not set")
		}
		if inst.AccountMetaSlice[9] == nil {
			return errors.New("accounts.CcipRouterNonce is not set")
		}
		if inst.AccountMetaSlice[10] == nil {
			return errors.New("accounts.CcipRouterFeeReceiver is not set")
		}
		if inst.AccountMetaSlice[11] == nil {
			return errors.New("accounts.CcipRouterFeeBillingSigner is not set")
		}
		if inst.AccountMetaSlice[12] == nil {
			return errors.New("accounts.FeeQuoter is not set")
		}
		if inst.AccountMetaSlice[13] == nil {
			return errors.New("accounts.FeeQuoterConfig is not set")
		}
		if inst.AccountMetaSlice[14] == nil {
			return errors.New("accounts.FeeQuoterDestChain is not set")
		}
		if inst.AccountMetaSlice[15] == nil {
			return errors.New("accounts.FeeQuoterBillingTokenConfig is not set")
		}
		if inst.AccountMetaSlice[16] == nil {
			return errors.New("accounts.FeeQuoterLinkTokenConfig is not set")
		}
		if inst.AccountMetaSlice[17] == nil {
			return errors.New("accounts.RmnRemote is not set")
		}
		if inst.AccountMetaSlice[18] == nil {
			return errors.New("accounts.RmnRemoteCurses is not set")
		}
		if inst.AccountMetaSlice[19] == nil {
			return errors.New("accounts.RmnRemoteConfig is not set")
		}
		if inst.AccountMetaSlice[20] == nil {
			return errors.New("accounts.SystemProgram is not set")
		}
	}
	return nil
}

func (inst *StartPingPongInstruction) EncodeToTree(parent ag_treeout.Branches) {
	parent.Child(ag_format.Program(ProgramName, ProgramID)).
		//
		ParentFunc(func(programBranch ag_treeout.Branches) {
			programBranch.Child(ag_format.Instruction("StartPingPong")).
				//
				ParentFunc(func(instructionBranch ag_treeout.Branches) {

					// Parameters of the instruction:
					instructionBranch.Child("Params[len=0]").ParentFunc(func(paramsBranch ag_treeout.Branches) {})

					// Accounts of the instruction:
					instructionBranch.Child("Accounts[len=21]").ParentFunc(func(accountsBranch ag_treeout.Branches) {
						accountsBranch.Child(ag_format.Meta("                         config", inst.AccountMetaSlice.Get(0)))
						accountsBranch.Child(ag_format.Meta("                      authority", inst.AccountMetaSlice.Get(1)))
						accountsBranch.Child(ag_format.Meta("               ccip_send_signer", inst.AccountMetaSlice.Get(2)))
						accountsBranch.Child(ag_format.Meta("              fee_token_program", inst.AccountMetaSlice.Get(3)))
						accountsBranch.Child(ag_format.Meta("                 fee_token_mint", inst.AccountMetaSlice.Get(4)))
						accountsBranch.Child(ag_format.Meta("                  fee_token_ata", inst.AccountMetaSlice.Get(5)))
						accountsBranch.Child(ag_format.Meta("            ccip_router_program", inst.AccountMetaSlice.Get(6)))
						accountsBranch.Child(ag_format.Meta("             ccip_router_config", inst.AccountMetaSlice.Get(7)))
						accountsBranch.Child(ag_format.Meta("   ccip_router_dest_chain_state", inst.AccountMetaSlice.Get(8)))
						accountsBranch.Child(ag_format.Meta("              ccip_router_nonce", inst.AccountMetaSlice.Get(9)))
						accountsBranch.Child(ag_format.Meta("       ccip_router_fee_receiver", inst.AccountMetaSlice.Get(10)))
						accountsBranch.Child(ag_format.Meta(" ccip_router_fee_billing_signer", inst.AccountMetaSlice.Get(11)))
						accountsBranch.Child(ag_format.Meta("                     fee_quoter", inst.AccountMetaSlice.Get(12)))
						accountsBranch.Child(ag_format.Meta("              fee_quoter_config", inst.AccountMetaSlice.Get(13)))
						accountsBranch.Child(ag_format.Meta("          fee_quoter_dest_chain", inst.AccountMetaSlice.Get(14)))
						accountsBranch.Child(ag_format.Meta("fee_quoter_billing_token_config", inst.AccountMetaSlice.Get(15)))
						accountsBranch.Child(ag_format.Meta("   fee_quoter_link_token_config", inst.AccountMetaSlice.Get(16)))
						accountsBranch.Child(ag_format.Meta("                     rmn_remote", inst.AccountMetaSlice.Get(17)))
						accountsBranch.Child(ag_format.Meta("              rmn_remote_curses", inst.AccountMetaSlice.Get(18)))
						accountsBranch.Child(ag_format.Meta("              rmn_remote_config", inst.AccountMetaSlice.Get(19)))
						accountsBranch.Child(ag_format.Meta("                 system_program", inst.AccountMetaSlice.Get(20)))
					})
				})
		})
}

func (obj StartPingPongInstruction) MarshalWithEncoder(encoder *ag_binary.Encoder) (err error) {
	return nil
}
func (obj *StartPingPongInstruction) UnmarshalWithDecoder(decoder *ag_binary.Decoder) (err error) {
	return nil
}

// NewStartPingPongInstruction declares a new StartPingPong instruction with the provided parameters and accounts.
func NewStartPingPongInstruction(
	// Accounts:
	config ag_solanago.PublicKey,
	authority ag_solanago.PublicKey,
	ccipSendSigner ag_solanago.PublicKey,
	feeTokenProgram ag_solanago.PublicKey,
	feeTokenMint ag_solanago.PublicKey,
	feeTokenAta ag_solanago.PublicKey,
	ccipRouterProgram ag_solanago.PublicKey,
	ccipRouterConfig ag_solanago.PublicKey,
	ccipRouterDestChainState ag_solanago.PublicKey,
	ccipRouterNonce ag_solanago.PublicKey,
	ccipRouterFeeReceiver ag_solanago.PublicKey,
	ccipRouterFeeBillingSigner ag_solanago.PublicKey,
	feeQuoter ag_solanago.PublicKey,
	feeQuoterConfig ag_solanago.PublicKey,
	feeQuoterDestChain ag_solanago.PublicKey,
	feeQuoterBillingTokenConfig ag_solanago.PublicKey,
	feeQuoterLinkTokenConfig ag_solanago.PublicKey,
	rmnRemote ag_solanago.PublicKey,
	rmnRemoteCurses ag_solanago.PublicKey,
	rmnRemoteConfig ag_solanago.PublicKey,
	systemProgram ag_solanago.PublicKey) *StartPingPongInstruction {
	return NewStartPingPongInstructionBuilder().
		SetConfigAccount(config).
		SetAuthorityAccount(authority).
		SetCcipSendSignerAccount(ccipSendSigner).
		SetFeeTokenProgramAccount(feeTokenProgram).
		SetFeeTokenMintAccount(feeTokenMint).
		SetFeeTokenAtaAccount(feeTokenAta).
		SetCcipRouterProgramAccount(ccipRouterProgram).
		SetCcipRouterConfigAccount(ccipRouterConfig).
		SetCcipRouterDestChainStateAccount(ccipRouterDestChainState).
		SetCcipRouterNonceAccount(ccipRouterNonce).
		SetCcipRouterFeeReceiverAccount(ccipRouterFeeReceiver).
		SetCcipRouterFeeBillingSignerAccount(ccipRouterFeeBillingSigner).
		SetFeeQuoterAccount(feeQuoter).
		SetFeeQuoterConfigAccount(feeQuoterConfig).
		SetFeeQuoterDestChainAccount(feeQuoterDestChain).
		SetFeeQuoterBillingTokenConfigAccount(feeQuoterBillingTokenConfig).
		SetFeeQuoterLinkTokenConfigAccount(feeQuoterLinkTokenConfig).
		SetRmnRemoteAccount(rmnRemote).
		SetRmnRemoteCursesAccount(rmnRemoteCurses).
		SetRmnRemoteConfigAccount(rmnRemoteConfig).
		SetSystemProgramAccount(systemProgram)
}
