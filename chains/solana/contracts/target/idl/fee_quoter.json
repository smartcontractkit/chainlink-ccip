{
  "address": "FeeVB9Q77QvyaENRL1i77BjW6cTkaWwNLjNbZg9JHqpw",
  "metadata": {
    "name": "fee_quoter",
    "version": "0.1.0-dev",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "instructions": [
    {
      "name": "accept_ownership",
      "docs": [
        "Accepts the ownership of the fee quoter by the proposed owner.",
        "",
        "Shared func signature with other programs",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for accepting ownership.",
        "The new owner must be a signer of the transaction."
      ],
      "discriminator": [
        172,
        23,
        43,
        13,
        238,
        213,
        85,
        150
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": []
    },
    {
      "name": "add_billing_token_config",
      "docs": [
        "Adds a billing token configuration.",
        "Only CCIP Admin can add a billing token configuration.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for adding the billing token configuration.",
        "* `config` - The billing token configuration to be added."
      ],
      "discriminator": [
        63,
        156,
        254,
        216,
        227,
        53,
        0,
        69
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "billing_token_config",
          "writable": true
        },
        {
          "name": "token_program"
        },
        {
          "name": "fee_token_mint"
        },
        {
          "name": "fee_token_receiver",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "fee_billing_signer"
        },
        {
          "name": "associated_token_program"
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "config",
          "type": {
            "defined": {
              "name": "BillingTokenConfig"
            }
          }
        }
      ]
    },
    {
      "name": "add_dest_chain",
      "docs": [
        "Adds a new destination chain selector to the fee quoter.",
        "",
        "The Admin needs to add any new chain supported.",
        "When adding a new chain, the Admin needs to specify if it's enabled or not.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for adding the chain selector.",
        "* `chain_selector` - The new chain selector to be added.",
        "* `dest_chain_config` - The configuration for the chain as destination."
      ],
      "discriminator": [
        122,
        202,
        174,
        155,
        55,
        100,
        102,
        36
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "dest_chain",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "chain_selector",
          "type": "u64"
        },
        {
          "name": "dest_chain_config",
          "type": {
            "defined": {
              "name": "DestChainConfig"
            }
          }
        }
      ]
    },
    {
      "name": "disable_dest_chain",
      "docs": [
        "Disables the destination chain selector.",
        "",
        "The Admin is the only one able to disable the chain selector as destination. This method is thought of as an emergency kill-switch.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for disabling the chain selector.",
        "* `chain_selector` - The destination chain selector to be disabled."
      ],
      "discriminator": [
        200,
        195,
        114,
        206,
        152,
        86,
        50,
        41
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "dest_chain",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "chain_selector",
          "type": "u64"
        }
      ]
    },
    {
      "name": "get_fee",
      "docs": [
        "Calculates the fee for sending a message to the destination chain.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for the fee calculation.",
        "* `dest_chain_selector` - The chain selector for the destination chain.",
        "* `message` - The message to be sent.",
        "",
        "# Additional accounts",
        "",
        "In addition to the fixed amount of accounts defined in the `GetFee` context,",
        "the following accounts must be provided:",
        "",
        "* First, the billing token config accounts for each token sent with the message, sequentially.",
        "For each token with no billing config account (i.e. tokens that cannot be possibly used as fee",
        "tokens, which also have no BPS fees enabled) the ZERO address must be provided instead.",
        "* Then, the per chain / per token config of every token sent with the message, sequentially",
        "in the same order.",
        "",
        "# Returns",
        "",
        "GetFeeResult struct with:",
        "- the fee token mint address,",
        "- the fee amount of said token,",
        "- the fee value in juels,",
        "- additional data required when performing the cross-chain transfer of tokens in that message",
        "- deserialized and processed extra args"
      ],
      "discriminator": [
        115,
        195,
        235,
        161,
        25,
        219,
        60,
        29
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "dest_chain"
        },
        {
          "name": "billing_token_config"
        },
        {
          "name": "link_token_config"
        }
      ],
      "args": [
        {
          "name": "dest_chain_selector",
          "type": "u64"
        },
        {
          "name": "message",
          "type": {
            "defined": {
              "name": "SVM2AnyMessage"
            }
          }
        }
      ],
      "returns": {
        "defined": {
          "name": "GetFeeResult"
        }
      }
    },
    {
      "name": "initialize",
      "docs": [
        "Initializes the Fee Quoter.",
        "",
        "The initialization is responsibility of Admin, nothing more than calling this method should be done first.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for initialization.",
        "* `svm_chain_selector` - The chain selector for SVM.",
        "* `default_gas_limit` - The default gas limit for other destination chains.",
        "* `default_allow_out_of_order_execution` - Whether out-of-order execution is allowed by default for other destination chains.",
        "* `enable_execution_after` - The minimum amount of time required between a message has been committed and can be manually executed."
      ],
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        },
        {
          "name": "program"
        },
        {
          "name": "program_data"
        }
      ],
      "args": [
        {
          "name": "link_token_mint",
          "type": "pubkey"
        },
        {
          "name": "max_fee_juels_per_msg",
          "type": "u128"
        },
        {
          "name": "onramp",
          "type": "pubkey"
        },
        {
          "name": "offramp_signer",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "set_token_transfer_fee_config",
      "docs": [
        "Sets the token transfer fee configuration for a particular token when it's transferred to a particular dest chain.",
        "It is an upsert, initializing the per-chain-per-token config account if it doesn't exist",
        "and overwriting it if it does.",
        "",
        "Only the Admin can perform this operation.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for setting the token billing configuration.",
        "* `chain_selector` - The chain selector.",
        "* `mint` - The public key of the token mint.",
        "* `cfg` - The token transfer fee configuration."
      ],
      "discriminator": [
        76,
        243,
        16,
        214,
        126,
        11,
        254,
        77
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "per_chain_per_token_config",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "chain_selector",
          "type": "u64"
        },
        {
          "name": "mint",
          "type": "pubkey"
        },
        {
          "name": "cfg",
          "type": {
            "defined": {
              "name": "TokenTransferFeeConfig"
            }
          }
        }
      ]
    },
    {
      "name": "transfer_ownership",
      "docs": [
        "Transfers the ownership of the fee quoter to a new proposed owner.",
        "",
        "Shared func signature with other programs",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for the transfer.",
        "* `proposed_owner` - The public key of the new proposed owner."
      ],
      "discriminator": [
        65,
        177,
        215,
        73,
        53,
        45,
        99,
        47
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "new_owner",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "update_billing_token_config",
      "docs": [
        "Updates the billing token configuration.",
        "Only CCIP Admin can update a billing token configuration.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for updating the billing token configuration.",
        "* `config` - The new billing token configuration."
      ],
      "discriminator": [
        140,
        184,
        124,
        146,
        204,
        62,
        244,
        79
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "billing_token_config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "config",
          "type": {
            "defined": {
              "name": "BillingTokenConfig"
            }
          }
        }
      ]
    },
    {
      "name": "update_dest_chain_config",
      "docs": [
        "Updates the configuration of the destination chain selector.",
        "",
        "The Admin is the only one able to update the destination chain config.",
        "",
        "# Arguments",
        "",
        "* `ctx` - The context containing the accounts required for updating the chain selector.",
        "* `chain_selector` - The destination chain selector to be updated.",
        "* `dest_chain_config` - The new configuration for the destination chain."
      ],
      "discriminator": [
        215,
        122,
        81,
        22,
        190,
        58,
        219,
        13
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "dest_chain",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "chain_selector",
          "type": "u64"
        },
        {
          "name": "dest_chain_config",
          "type": {
            "defined": {
              "name": "DestChainConfig"
            }
          }
        }
      ]
    },
    {
      "name": "update_prices",
      "discriminator": [
        62,
        161,
        234,
        136,
        106,
        26,
        18,
        160
      ],
      "accounts": [
        {
          "name": "config"
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "token_updates",
          "type": {
            "vec": {
              "defined": {
                "name": "TokenPriceUpdate"
              }
            }
          }
        },
        {
          "name": "gas_updates",
          "type": {
            "vec": {
              "defined": {
                "name": "GasPriceUpdate"
              }
            }
          }
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "BillingTokenConfigWrapper",
      "discriminator": [
        63,
        178,
        72,
        57,
        171,
        66,
        44,
        151
      ]
    },
    {
      "name": "Config",
      "discriminator": [
        155,
        12,
        170,
        224,
        30,
        250,
        204,
        130
      ]
    },
    {
      "name": "DestChain",
      "discriminator": [
        77,
        18,
        241,
        132,
        212,
        54,
        218,
        16
      ]
    },
    {
      "name": "PerChainPerTokenConfig",
      "discriminator": [
        183,
        88,
        20,
        99,
        246,
        46,
        51,
        230
      ]
    }
  ],
  "events": [
    {
      "name": "DestChainAdded",
      "discriminator": [
        59,
        154,
        48,
        81,
        230,
        41,
        80,
        200
      ]
    },
    {
      "name": "DestChainConfigUpdated",
      "discriminator": [
        3,
        141,
        73,
        190,
        73,
        231,
        51,
        80
      ]
    },
    {
      "name": "FeeTokenAdded",
      "discriminator": [
        181,
        180,
        252,
        21,
        215,
        79,
        93,
        237
      ]
    },
    {
      "name": "FeeTokenDisabled",
      "discriminator": [
        34,
        139,
        66,
        75,
        30,
        17,
        45,
        151
      ]
    },
    {
      "name": "FeeTokenEnabled",
      "discriminator": [
        106,
        180,
        145,
        189,
        113,
        180,
        21,
        15
      ]
    },
    {
      "name": "FeeTokenRemoved",
      "discriminator": [
        40,
        31,
        230,
        252,
        183,
        150,
        147,
        201
      ]
    },
    {
      "name": "OwnershipTransferRequested",
      "discriminator": [
        79,
        54,
        99,
        123,
        57,
        244,
        134,
        35
      ]
    },
    {
      "name": "OwnershipTransferred",
      "discriminator": [
        172,
        61,
        205,
        183,
        250,
        50,
        38,
        98
      ]
    },
    {
      "name": "TokenTransferFeeConfigUpdated",
      "discriminator": [
        253,
        199,
        166,
        1,
        178,
        150,
        242,
        253
      ]
    },
    {
      "name": "UsdPerTokenUpdated",
      "discriminator": [
        67,
        154,
        252,
        56,
        104,
        14,
        192,
        219
      ]
    },
    {
      "name": "UsdPerUnitGasUpdated",
      "discriminator": [
        174,
        255,
        2,
        41,
        197,
        110,
        31,
        40
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidSequenceInterval",
      "msg": "The given sequence interval is invalid"
    },
    {
      "code": 6001,
      "name": "RootNotCommitted",
      "msg": "The given Merkle Root is missing"
    },
    {
      "code": 6002,
      "name": "ExistingMerkleRoot",
      "msg": "The given Merkle Root is already committed"
    },
    {
      "code": 6003,
      "name": "Unauthorized",
      "msg": "The signer is unauthorized"
    },
    {
      "code": 6004,
      "name": "InvalidInputs",
      "msg": "Invalid inputs"
    },
    {
      "code": 6005,
      "name": "UnsupportedSourceChainSelector",
      "msg": "Source chain selector not supported"
    },
    {
      "code": 6006,
      "name": "UnsupportedDestinationChainSelector",
      "msg": "Destination chain selector not supported"
    },
    {
      "code": 6007,
      "name": "InvalidProof",
      "msg": "Invalid Proof for Merkle Root"
    },
    {
      "code": 6008,
      "name": "InvalidMessage",
      "msg": "Invalid message format"
    },
    {
      "code": 6009,
      "name": "ReachedMaxSequenceNumber",
      "msg": "Reached max sequence number"
    },
    {
      "code": 6010,
      "name": "ManualExecutionNotAllowed",
      "msg": "Manual execution not allowed"
    },
    {
      "code": 6011,
      "name": "InvalidInputsTokenIndices",
      "msg": "Invalid pool account account indices"
    },
    {
      "code": 6012,
      "name": "InvalidInputsPoolAccounts",
      "msg": "Invalid pool accounts"
    },
    {
      "code": 6013,
      "name": "InvalidInputsTokenAccounts",
      "msg": "Invalid token accounts"
    },
    {
      "code": 6014,
      "name": "InvalidInputsConfigAccounts",
      "msg": "Invalid config account"
    },
    {
      "code": 6015,
      "name": "InvalidInputsTokenAdminRegistryAccounts",
      "msg": "Invalid Token Admin Registry account"
    },
    {
      "code": 6016,
      "name": "InvalidInputsLookupTableAccounts",
      "msg": "Invalid LookupTable account"
    },
    {
      "code": 6017,
      "name": "InvalidInputsLookupTableAccountWritable",
      "msg": "Invalid LookupTable account writable access"
    },
    {
      "code": 6018,
      "name": "InvalidInputsTokenAmount",
      "msg": "Cannot send zero tokens"
    },
    {
      "code": 6019,
      "name": "OfframpReleaseMintBalanceMismatch",
      "msg": "Release or mint balance mismatch"
    },
    {
      "code": 6020,
      "name": "OfframpInvalidDataLength",
      "msg": "Invalid data length"
    },
    {
      "code": 6021,
      "name": "StaleCommitReport",
      "msg": "Stale commit report"
    },
    {
      "code": 6022,
      "name": "DestinationChainDisabled",
      "msg": "Destination chain disabled"
    },
    {
      "code": 6023,
      "name": "FeeTokenDisabled",
      "msg": "Fee token disabled"
    },
    {
      "code": 6024,
      "name": "MessageTooLarge",
      "msg": "Message exceeds maximum data size"
    },
    {
      "code": 6025,
      "name": "UnsupportedNumberOfTokens",
      "msg": "Message contains an unsupported number of tokens"
    },
    {
      "code": 6026,
      "name": "UnsupportedChainFamilySelector",
      "msg": "Chain family selector not supported"
    },
    {
      "code": 6027,
      "name": "InvalidEVMAddress",
      "msg": "Invalid EVM address"
    },
    {
      "code": 6028,
      "name": "InvalidEncoding",
      "msg": "Invalid encoding"
    },
    {
      "code": 6029,
      "name": "InvalidInputsAtaAddress",
      "msg": "Invalid Associated Token Account address"
    },
    {
      "code": 6030,
      "name": "InvalidInputsAtaWritable",
      "msg": "Invalid Associated Token Account writable flag"
    },
    {
      "code": 6031,
      "name": "InvalidTokenPrice",
      "msg": "Invalid token price"
    },
    {
      "code": 6032,
      "name": "StaleGasPrice",
      "msg": "Stale gas price"
    },
    {
      "code": 6033,
      "name": "InsufficientLamports",
      "msg": "Insufficient lamports"
    },
    {
      "code": 6034,
      "name": "InsufficientFunds",
      "msg": "Insufficient funds"
    },
    {
      "code": 6035,
      "name": "UnsupportedToken",
      "msg": "Unsupported token"
    },
    {
      "code": 6036,
      "name": "InvalidInputsMissingTokenConfig",
      "msg": "Inputs are missing token configuration"
    },
    {
      "code": 6037,
      "name": "MessageFeeTooHigh",
      "msg": "Message fee is too high"
    },
    {
      "code": 6038,
      "name": "SourceTokenDataTooLarge",
      "msg": "Source token data is too large"
    },
    {
      "code": 6039,
      "name": "MessageGasLimitTooHigh",
      "msg": "Message gas limit too high"
    },
    {
      "code": 6040,
      "name": "ExtraArgOutOfOrderExecutionMustBeTrue",
      "msg": "Extra arg out of order execution must be true"
    },
    {
      "code": 6041,
      "name": "InvalidExtraArgsTag",
      "msg": "Invalid extra args tag"
    },
    {
      "code": 6042,
      "name": "InvalidChainFamilySelector",
      "msg": "Invalid chain family selector"
    },
    {
      "code": 6043,
      "name": "InvalidTokenReceiver",
      "msg": "Invalid token receiver"
    },
    {
      "code": 6044,
      "name": "InvalidSVMAddress",
      "msg": "Invalid SVM address"
    }
  ],
  "types": [
    {
      "name": "BillingTokenConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "enabled",
            "type": "bool"
          },
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "usd_per_token",
            "type": {
              "defined": {
                "name": "TimestampedPackedU224"
              }
            }
          },
          {
            "name": "premium_multiplier_wei_per_eth",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "BillingTokenConfigWrapper",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "config",
            "type": {
              "defined": {
                "name": "BillingTokenConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "Config",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "proposed_owner",
            "type": "pubkey"
          },
          {
            "name": "max_fee_juels_per_msg",
            "type": "u128"
          },
          {
            "name": "link_token_mint",
            "type": "pubkey"
          },
          {
            "name": "onramp",
            "type": "pubkey"
          },
          {
            "name": "offramp_signer",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "DestChain",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "chain_selector",
            "type": "u64"
          },
          {
            "name": "state",
            "type": {
              "defined": {
                "name": "DestChainState"
              }
            }
          },
          {
            "name": "config",
            "type": {
              "defined": {
                "name": "DestChainConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "DestChainAdded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_chain_selector",
            "type": "u64"
          },
          {
            "name": "dest_chain_config",
            "type": {
              "defined": {
                "name": "DestChainConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "DestChainConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "is_enabled",
            "type": "bool"
          },
          {
            "name": "max_number_of_tokens_per_msg",
            "type": "u16"
          },
          {
            "name": "max_data_bytes",
            "type": "u32"
          },
          {
            "name": "max_per_msg_gas_limit",
            "type": "u32"
          },
          {
            "name": "dest_gas_overhead",
            "type": "u32"
          },
          {
            "name": "dest_gas_per_payload_byte_base",
            "type": "u32"
          },
          {
            "name": "dest_gas_per_payload_byte_high",
            "type": "u32"
          },
          {
            "name": "dest_gas_per_payload_byte_threshold",
            "type": "u32"
          },
          {
            "name": "dest_data_availability_overhead_gas",
            "type": "u32"
          },
          {
            "name": "dest_gas_per_data_availability_byte",
            "type": "u16"
          },
          {
            "name": "dest_data_availability_multiplier_bps",
            "type": "u16"
          },
          {
            "name": "default_token_fee_usdcents",
            "type": "u16"
          },
          {
            "name": "default_token_dest_gas_overhead",
            "type": "u32"
          },
          {
            "name": "default_tx_gas_limit",
            "type": "u32"
          },
          {
            "name": "gas_multiplier_wei_per_eth",
            "type": "u64"
          },
          {
            "name": "network_fee_usdcents",
            "type": "u32"
          },
          {
            "name": "gas_price_staleness_threshold",
            "type": "u32"
          },
          {
            "name": "enforce_out_of_order",
            "type": "bool"
          },
          {
            "name": "chain_family_selector",
            "type": {
              "array": [
                "u8",
                4
              ]
            }
          }
        ]
      }
    },
    {
      "name": "DestChainConfigUpdated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_chain_selector",
            "type": "u64"
          },
          {
            "name": "dest_chain_config",
            "type": {
              "defined": {
                "name": "DestChainConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "DestChainState",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "usd_per_unit_gas",
            "type": {
              "defined": {
                "name": "TimestampedPackedU224"
              }
            }
          }
        ]
      }
    },
    {
      "name": "FeeTokenAdded",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fee_token",
            "type": "pubkey"
          },
          {
            "name": "enabled",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "FeeTokenDisabled",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fee_token",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "FeeTokenEnabled",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fee_token",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "FeeTokenRemoved",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "fee_token",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "GasPriceUpdate",
      "docs": [
        "Gas price for a given chain in USD; its value may contain tightly packed fields."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_chain_selector",
            "type": "u64"
          },
          {
            "name": "usd_per_unit_gas",
            "type": {
              "array": [
                "u8",
                28
              ]
            }
          }
        ]
      }
    },
    {
      "name": "GetFeeResult",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "token",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          },
          {
            "name": "juels",
            "type": "u64"
          },
          {
            "name": "token_transfer_additional_data",
            "type": {
              "vec": {
                "defined": {
                  "name": "TokenTransferAdditionalData"
                }
              }
            }
          },
          {
            "name": "processed_extra_args",
            "type": {
              "defined": {
                "name": "ProcessedExtraArgs"
              }
            }
          }
        ]
      }
    },
    {
      "name": "OwnershipTransferRequested",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "from",
            "type": "pubkey"
          },
          {
            "name": "to",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "OwnershipTransferred",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "from",
            "type": "pubkey"
          },
          {
            "name": "to",
            "type": "pubkey"
          }
        ]
      }
    },
    {
      "name": "PerChainPerTokenConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "version",
            "type": "u8"
          },
          {
            "name": "chain_selector",
            "type": "u64"
          },
          {
            "name": "mint",
            "type": "pubkey"
          },
          {
            "name": "token_transfer_config",
            "type": {
              "defined": {
                "name": "TokenTransferFeeConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "ProcessedExtraArgs",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "bytes",
            "type": "bytes"
          },
          {
            "name": "gas_limit",
            "type": "u128"
          },
          {
            "name": "allow_out_of_order_execution",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "SVM2AnyMessage",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "receiver",
            "type": "bytes"
          },
          {
            "name": "data",
            "type": "bytes"
          },
          {
            "name": "token_amounts",
            "type": {
              "vec": {
                "defined": {
                  "name": "SVMTokenAmount"
                }
              }
            }
          },
          {
            "name": "fee_token",
            "type": "pubkey"
          },
          {
            "name": "extra_args",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "SVMTokenAmount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "token",
            "type": "pubkey"
          },
          {
            "name": "amount",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "TimestampedPackedU224",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "value",
            "type": {
              "array": [
                "u8",
                28
              ]
            }
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "TokenPriceUpdate",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "source_token",
            "type": "pubkey"
          },
          {
            "name": "usd_per_token",
            "type": {
              "array": [
                "u8",
                28
              ]
            }
          }
        ]
      }
    },
    {
      "name": "TokenTransferAdditionalData",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_bytes_overhead",
            "type": "u32"
          },
          {
            "name": "dest_gas_overhead",
            "type": "u32"
          }
        ]
      }
    },
    {
      "name": "TokenTransferFeeConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "min_fee_usdcents",
            "type": "u32"
          },
          {
            "name": "max_fee_usdcents",
            "type": "u32"
          },
          {
            "name": "deci_bps",
            "type": "u16"
          },
          {
            "name": "dest_gas_overhead",
            "type": "u32"
          },
          {
            "name": "dest_bytes_overhead",
            "type": "u32"
          },
          {
            "name": "is_enabled",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "TokenTransferFeeConfigUpdated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_chain_selector",
            "type": "u64"
          },
          {
            "name": "token",
            "type": "pubkey"
          },
          {
            "name": "token_transfer_fee_config",
            "type": {
              "defined": {
                "name": "TokenTransferFeeConfig"
              }
            }
          }
        ]
      }
    },
    {
      "name": "UsdPerTokenUpdated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "token",
            "type": "pubkey"
          },
          {
            "name": "value",
            "type": {
              "array": [
                "u8",
                28
              ]
            }
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    },
    {
      "name": "UsdPerUnitGasUpdated",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "dest_chain",
            "type": "u64"
          },
          {
            "name": "value",
            "type": {
              "array": [
                "u8",
                28
              ]
            }
          },
          {
            "name": "timestamp",
            "type": "i64"
          }
        ]
      }
    }
  ]
}