{
  "address": "6UmMZr5MEqiKWD5jqTJd1WCR5kT8oZuFYBLJFi1o6GQX",
  "metadata": {
    "name": "mcm",
    "version": "0.1.0-dev",
    "spec": "0.1.0",
    "description": "SVM implementation of ManyChainMultiSig"
  },
  "docs": [
    "This is mcm program supporting multiple instances of multisig configuration",
    "A single deployed program manages multiple multisig states(configurations) identified by multisig_id"
  ],
  "instructions": [
    {
      "name": "accept_ownership",
      "discriminator": [
        172,
        23,
        43,
        13,
        238,
        213,
        85,
        150
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "_multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "append_signatures",
      "discriminator": [
        195,
        112,
        164,
        69,
        37,
        137,
        198,
        54
      ],
      "accounts": [
        {
          "name": "signatures",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "valid_until",
          "type": "u32"
        },
        {
          "name": "signatures_batch",
          "type": {
            "vec": {
              "defined": {
                "name": "Signature"
              }
            }
          }
        }
      ]
    },
    {
      "name": "append_signers",
      "discriminator": [
        238,
        209,
        251,
        39,
        41,
        241,
        146,
        25
      ],
      "accounts": [
        {
          "name": "multisig_config"
        },
        {
          "name": "config_signers",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "signers_batch",
          "type": {
            "vec": {
              "array": [
                "u8",
                20
              ]
            }
          }
        }
      ]
    },
    {
      "name": "clear_signatures",
      "discriminator": [
        80,
        0,
        39,
        255,
        46,
        165,
        193,
        109
      ],
      "accounts": [
        {
          "name": "signatures",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "valid_until",
          "type": "u32"
        }
      ]
    },
    {
      "name": "clear_signers",
      "discriminator": [
        90,
        140,
        170,
        146,
        128,
        75,
        100,
        175
      ],
      "accounts": [
        {
          "name": "multisig_config"
        },
        {
          "name": "config_signers",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "execute",
      "discriminator": [
        130,
        221,
        242,
        154,
        13,
        193,
        189,
        29
      ],
      "accounts": [
        {
          "name": "multisig_config",
          "writable": true
        },
        {
          "name": "root_metadata"
        },
        {
          "name": "expiring_root_and_op_count",
          "writable": true
        },
        {
          "name": "to"
        },
        {
          "name": "multisig_signer"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "chain_id",
          "type": "u64"
        },
        {
          "name": "nonce",
          "type": "u64"
        },
        {
          "name": "data",
          "type": "bytes"
        },
        {
          "name": "proof",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        }
      ]
    },
    {
      "name": "finalize_signatures",
      "discriminator": [
        77,
        138,
        152,
        199,
        37,
        141,
        189,
        159
      ],
      "accounts": [
        {
          "name": "signatures",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "valid_until",
          "type": "u32"
        }
      ]
    },
    {
      "name": "finalize_signers",
      "discriminator": [
        49,
        254,
        154,
        226,
        137,
        199,
        120,
        63
      ],
      "accounts": [
        {
          "name": "multisig_config"
        },
        {
          "name": "config_signers",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "init_signatures",
      "discriminator": [
        190,
        120,
        207,
        36,
        26,
        58,
        196,
        13
      ],
      "accounts": [
        {
          "name": "signatures",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "valid_until",
          "type": "u32"
        },
        {
          "name": "total_signatures",
          "type": "u8"
        }
      ]
    },
    {
      "name": "init_signers",
      "discriminator": [
        102,
        182,
        129,
        16,
        138,
        142,
        223,
        196
      ],
      "accounts": [
        {
          "name": "multisig_config"
        },
        {
          "name": "config_signers",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "total_signers",
          "type": "u8"
        }
      ]
    },
    {
      "name": "initialize",
      "docs": [
        "initialize a new multisig configuration, store the chain_id and multisig_id",
        "multisig_id is a unique identifier for the multisig configuration(32 bytes, left-padded)"
      ],
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "multisig_config",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        },
        {
          "name": "program"
        },
        {
          "name": "program_data"
        },
        {
          "name": "root_metadata",
          "writable": true
        },
        {
          "name": "expiring_root_and_op_count",
          "writable": true
        }
      ],
      "args": [
        {
          "name": "chain_id",
          "type": "u64"
        },
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "set_config",
      "discriminator": [
        108,
        158,
        154,
        175,
        212,
        98,
        52,
        66
      ],
      "accounts": [
        {
          "name": "multisig_config",
          "writable": true
        },
        {
          "name": "config_signers",
          "writable": true
        },
        {
          "name": "root_metadata",
          "writable": true
        },
        {
          "name": "expiring_root_and_op_count",
          "writable": true
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "signer_groups",
          "type": "bytes"
        },
        {
          "name": "group_quorums",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "group_parents",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "clear_root",
          "type": "bool"
        }
      ]
    },
    {
      "name": "set_root",
      "discriminator": [
        183,
        49,
        10,
        206,
        168,
        183,
        131,
        67
      ],
      "accounts": [
        {
          "name": "root_signatures",
          "writable": true
        },
        {
          "name": "root_metadata",
          "writable": true
        },
        {
          "name": "seen_signed_hashes",
          "writable": true
        },
        {
          "name": "expiring_root_and_op_count",
          "writable": true
        },
        {
          "name": "multisig_config"
        },
        {
          "name": "authority",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program"
        }
      ],
      "args": [
        {
          "name": "multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "root",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "valid_until",
          "type": "u32"
        },
        {
          "name": "metadata",
          "type": {
            "defined": {
              "name": "RootMetadataInput"
            }
          }
        },
        {
          "name": "metadata_proof",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        }
      ]
    },
    {
      "name": "transfer_ownership",
      "discriminator": [
        65,
        177,
        215,
        73,
        53,
        45,
        99,
        47
      ],
      "accounts": [
        {
          "name": "config",
          "writable": true
        },
        {
          "name": "authority",
          "signer": true
        }
      ],
      "args": [
        {
          "name": "_multisig_id",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "proposed_owner",
          "type": "pubkey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "ConfigSigners",
      "discriminator": [
        147,
        137,
        80,
        98,
        50,
        225,
        190,
        163
      ]
    },
    {
      "name": "ExpiringRootAndOpCount",
      "discriminator": [
        196,
        176,
        71,
        210,
        134,
        228,
        202,
        75
      ]
    },
    {
      "name": "MultisigConfig",
      "discriminator": [
        44,
        62,
        172,
        225,
        246,
        3,
        178,
        33
      ]
    },
    {
      "name": "RootMetadata",
      "discriminator": [
        125,
        211,
        89,
        150,
        221,
        6,
        141,
        205
      ]
    },
    {
      "name": "RootSignatures",
      "discriminator": [
        21,
        186,
        10,
        33,
        117,
        215,
        246,
        76
      ]
    },
    {
      "name": "SeenSignedHash",
      "discriminator": [
        229,
        115,
        10,
        185,
        39,
        100,
        210,
        151
      ]
    }
  ],
  "events": [
    {
      "name": "ConfigSet",
      "discriminator": [
        15,
        104,
        59,
        16,
        236,
        241,
        8,
        6
      ]
    },
    {
      "name": "NewRoot",
      "discriminator": [
        210,
        25,
        187,
        118,
        40,
        42,
        61,
        119
      ]
    },
    {
      "name": "OpExecuted",
      "discriminator": [
        221,
        15,
        212,
        29,
        35,
        252,
        255,
        78
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidInputs",
      "msg": "Invalid inputs"
    },
    {
      "code": 6001,
      "name": "Overflow",
      "msg": "overflow occurred."
    },
    {
      "code": 6002,
      "name": "WrongMultiSig",
      "msg": "Invalid multisig"
    },
    {
      "code": 6003,
      "name": "WrongChainId",
      "msg": "Invalid chainID"
    },
    {
      "code": 6004,
      "name": "InvalidSignature",
      "msg": "Invalid signature"
    },
    {
      "code": 6005,
      "name": "FailedEcdsaRecover",
      "msg": "Failed ECDSA recover"
    },
    {
      "code": 6006,
      "name": "InvalidRootLen",
      "msg": "Invalid root length"
    },
    {
      "code": 6007,
      "name": "SignersNotFinalized",
      "msg": "Config signers not finalized"
    },
    {
      "code": 6008,
      "name": "SignersAlreadyFinalized",
      "msg": "Config signers already finalized"
    },
    {
      "code": 6009,
      "name": "SignaturesAlreadyFinalized",
      "msg": "Signatures already finalized"
    },
    {
      "code": 6010,
      "name": "SignatureCountMismatch",
      "msg": "Uploaded signatures count mismatch"
    },
    {
      "code": 6011,
      "name": "TooManySignatures",
      "msg": "Too many signatures"
    },
    {
      "code": 6012,
      "name": "SignaturesNotFinalized",
      "msg": "Signatures not finalized"
    },
    {
      "code": 6013,
      "name": "SignaturesRootMismatch",
      "msg": "Signatures root mismatch"
    },
    {
      "code": 6014,
      "name": "SignaturesValidUntilMismatch",
      "msg": "Signatures valid until mismatch"
    },
    {
      "code": 6200,
      "name": "MismatchedInputSignerVectorsLength",
      "msg": "The input vectors for signer addresses and signer groups must have the same length"
    },
    {
      "code": 6201,
      "name": "OutOfBoundsNumOfSigners",
      "msg": "The number of signers is 0 or greater than MAX_NUM_SIGNERS"
    },
    {
      "code": 6202,
      "name": "MismatchedInputGroupArraysLength",
      "msg": "The input arrays for group parents and group quorums must be of length NUM_GROUPS"
    },
    {
      "code": 6203,
      "name": "GroupTreeNotWellFormed",
      "msg": "the group tree isn't well-formed."
    },
    {
      "code": 6204,
      "name": "SignerInDisabledGroup",
      "msg": "a disabled group contains a signer."
    },
    {
      "code": 6205,
      "name": "OutOfBoundsGroupQuorum",
      "msg": "the quorum of some group is larger than the number of signers in it."
    },
    {
      "code": 6206,
      "name": "SignersAddressesMustBeStrictlyIncreasing",
      "msg": "the signers' addresses are not a strictly increasing monotone sequence."
    },
    {
      "code": 6207,
      "name": "SignedHashAlreadySeen",
      "msg": "The combination of signature and valid_until has already been seen"
    },
    {
      "code": 6208,
      "name": "InvalidSigner",
      "msg": "Invalid signer"
    },
    {
      "code": 6209,
      "name": "MissingConfig",
      "msg": "Missing configuration"
    },
    {
      "code": 6210,
      "name": "InsufficientSigners",
      "msg": "Insufficient signers"
    },
    {
      "code": 6211,
      "name": "ValidUntilHasAlreadyPassed",
      "msg": "Valid until has already passed"
    },
    {
      "code": 6212,
      "name": "ProofCannotBeVerified",
      "msg": "Proof cannot be verified"
    },
    {
      "code": 6213,
      "name": "PendingOps",
      "msg": "Pending operations"
    },
    {
      "code": 6214,
      "name": "WrongPreOpCount",
      "msg": "Wrong pre-operation count"
    },
    {
      "code": 6215,
      "name": "WrongPostOpCount",
      "msg": "Wrong post-operation count"
    },
    {
      "code": 6216,
      "name": "PostOpCountReached",
      "msg": "Post-operation count reached"
    },
    {
      "code": 6217,
      "name": "RootExpired",
      "msg": "Root expired"
    },
    {
      "code": 6218,
      "name": "WrongNonce",
      "msg": "Wrong nonce"
    }
  ],
  "types": [
    {
      "name": "ConfigSet",
      "docs": [
        "@dev Emitted when a new config is set."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "group_parents",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "group_quorums",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "is_root_cleared",
            "type": "bool"
          },
          {
            "name": "signers",
            "type": {
              "vec": {
                "defined": {
                  "name": "McmSigner"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "ConfigSigners",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "signer_addresses",
            "type": {
              "vec": {
                "array": [
                  "u8",
                  20
                ]
              }
            }
          },
          {
            "name": "total_signers",
            "type": "u8"
          },
          {
            "name": "is_finalized",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "ExpiringRootAndOpCount",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "valid_until",
            "type": "u32"
          },
          {
            "name": "op_count",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "McmSigner",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "evm_address",
            "type": {
              "array": [
                "u8",
                20
              ]
            }
          },
          {
            "name": "index",
            "type": "u8"
          },
          {
            "name": "group",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "MultisigConfig",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "chain_id",
            "type": "u64"
          },
          {
            "name": "multisig_id",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "owner",
            "type": "pubkey"
          },
          {
            "name": "proposed_owner",
            "type": "pubkey"
          },
          {
            "name": "group_quorums",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "group_parents",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "signers",
            "type": {
              "vec": {
                "defined": {
                  "name": "McmSigner"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "NewRoot",
      "docs": [
        "@dev Emitted when a new root is set."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "root",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "valid_until",
            "type": "u32"
          },
          {
            "name": "metadata_chain_id",
            "type": "u64"
          },
          {
            "name": "metadata_multisig",
            "type": "pubkey"
          },
          {
            "name": "metadata_pre_op_count",
            "type": "u64"
          },
          {
            "name": "metadata_post_op_count",
            "type": "u64"
          },
          {
            "name": "metadata_override_previous_root",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "OpExecuted",
      "docs": [
        "@dev Emitted when an op gets successfully executed."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "nonce",
            "type": "u64"
          },
          {
            "name": "to",
            "type": "pubkey"
          },
          {
            "name": "data",
            "type": "bytes"
          }
        ]
      }
    },
    {
      "name": "RootMetadata",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "chain_id",
            "type": "u64"
          },
          {
            "name": "multisig",
            "type": "pubkey"
          },
          {
            "name": "pre_op_count",
            "type": "u64"
          },
          {
            "name": "post_op_count",
            "type": "u64"
          },
          {
            "name": "override_previous_root",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "RootMetadataInput",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "chain_id",
            "type": "u64"
          },
          {
            "name": "multisig",
            "type": "pubkey"
          },
          {
            "name": "pre_op_count",
            "type": "u64"
          },
          {
            "name": "post_op_count",
            "type": "u64"
          },
          {
            "name": "override_previous_root",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "RootSignatures",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "total_signatures",
            "type": "u8"
          },
          {
            "name": "signatures",
            "type": {
              "vec": {
                "defined": {
                  "name": "Signature"
                }
              }
            }
          },
          {
            "name": "is_finalized",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "SeenSignedHash",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "seen",
            "type": "bool"
          }
        ]
      }
    },
    {
      "name": "Signature",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "v",
            "type": "u8"
          },
          {
            "name": "r",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "s",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          }
        ]
      }
    }
  ]
}