atlas-core:
  base: &base
    labels:
      chain.link/team: crib
    envFromSecrets:
      - postgres-credentials-url
      - kafka-urls
      - schema-registry-url

  evm-blocks:
    <<: *base
    topologySpreadConstraints: []
    name: atlas-evm-blocks-{{  .network }}
    envVars:
      APP_NAME: atlas-evm-blocks-{{  .network }}
      BLOCKS_CHANNEL_LENGTH: "100"
      BLOCKS_KAFKA_BACKFILL_TOPIC: {{  .network }}_blocks_state
      BLOCKS_KAFKA_BLOCK_HEADERS_TOPIC: {{  .network }}_block_headers
      BLOCKS_KAFKA_INCLUSIONS_TOPIC: {{  .network }}_block_inclusions
      BLOCKS_KAFKA_TRANSACTIONS_TOPIC: {{  .network }}_transactions
      BLOCKS_STATE_WINDOW_MAX: "10000"
      BLOCKS_STATE_WINDOW_MIN: "200"
      CHAIN_ID: {{ .chainId }}
      KAFKA_CLIENT_ID: atlas-evm-blocks-{{  .network }}
      KAFKA_COMPRESSION_TYPE: zstd
      KAFKA_GROUP_ID: atlas-evm-blocks-{{  .network }}
      KAFKA_PRODUCER_MAX_MESSAGE_SIZE_BYTES: "8388608"
      KAFKA_SCHEMA_REGISTRY_REQUEST_TIMEOUT_MS: 30000
      LOG_LEVEL: info
      NETWORK_NAME: {{  .network }}
      RPC_ENDPOINTS: {{ .rpcEndpoint }}
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_SASL_MECHANISM: PLAIN

  evm-logs:
    <<: *base
    topologySpreadConstraints: []
    name: atlas-evm-logs-{{  .network }}
    envVars:
      APP_NAME: atlas-evm-logs-{{  .network }}
      CHAIN_ID: {{  .chainId }}
      FAILED_MESSAGES_MAX_RETRY_COUNT: "10"
      KAFKA_BLOCK_HEADERS_TOPIC: {{  .network }}_block_headers
      KAFKA_BLOCK_LOGS_TOPIC: {{  .network }}_logs
      KAFKA_CLIENT_ID: atlas-evm-logs-{{  .network }}
      KAFKA_COMPRESSION_TYPE: zstd
      KAFKA_GROUP_ID: atlas-evm-logs-{{  .network }}
      KAFKA_PRODUCER_MAX_MESSAGE_SIZE_BYTES: "8388608"
      KAFKA_SCHEMA_REGISTRY_REQUEST_TIMEOUT_MS: 30000
      LOG_LEVEL: info
      NETWORK_NAME: {{  .network }}
      PROFILING: "true"
      RPC_CALL_TIMEOUT: 10s
      RPC_ENDPOINT: {{  .rpcEndpoint }}
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_SASL_MECHANISM: PLAIN

  evm-receipts:
    <<: *base
    topologySpreadConstraints: []
    name: atlas-evm-receipts-{{  .network }}
    envVars:
      KAFKA_CONSUMER_MAX_POLL_INTERVAL_MS: "1m"
      RECEIPTS_ENABLE_PARALLEL_BATCH: "false"
      RECEIPTS_MAX_RETRY_DURATION: "45s"
      APP_NAME: atlas-evm-receipts-{{  .network }}
      CHAIN_ID: {{  .chainId }}
      KAFKA_CLIENT_ID: atlas-evm-receipts-{{  .network }}
      KAFKA_COMPRESSION_TYPE: zstd
      KAFKA_GROUP_ID: atlas-evm-receipts-{{  .network }}
      KAFKA_PRODUCER_MAX_MESSAGE_SIZE_BYTES: "8388608"
      KAFKA_SCHEMA_REGISTRY_REQUEST_TIMEOUT_MS: 30000
      LOG_LEVEL: info
      NETWORK_NAME: {{  .network }}
      OTEL_URL: otel-collector-opentelemetry-collector.o11y:4318
      PROFILING: "true"
      RECEIPTS_BATCH_SIZE: "1000"
      RECEIPTS_BATCH_WAIT_DURATION: 100ms
      RECEIPTS_KAFKA_RECEIPTS_TOPIC: {{  .network }}_transactions_with_receipts
      RECEIPTS_KAFKA_TRANSACTIONS_TOPIC: {{  .network }}_transactions
      RPC_ENDPOINTS: {{  .rpcEndpoint }}
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_SASL_MECHANISM: PLAIN

  evm-logs-abi-decoder:
    <<: *base
    name: atlas-evm-logs-abi-decoder-{{  .network }}
    topologySpreadConstraints: []
    envVars:
      KAFKA_ABI_DECODED_LOGS_DLQ_TOPIC: {{  .network }}_abi_decoded_logs_dlq
      KAFKA_ABI_DECODED_LOGS_TOPIC: {{  .network }}_abi_decoded_logs
      KAFKA_CLIENT_ID: atlas-evm-logs-abi-decoder-{{  .network }}
      KAFKA_GROUP_ID: atlas-evm-logs-abi-decoder-{{  .network }}
      KAFKA_LOGS_TOPIC: {{  .network }}_logs
      KAFKA_SCHEMA_REGISTRY_EVENTS_KEY_SUBJECT: atlas_{{  .network }}_events-key
      KAFKA_SCHEMA_REGISTRY_EVENTS_VALUE_SUBJECT: atlas_{{  .network }}_events-value
      TLS_ENABLED: false
      LOG_LEVEL: info
      CHAIN_ID: {{  .chainId }}
      NETWORK_NAME: {{  .network }}
      KAFKA_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_SASL_MECHANISM: "none"
      KAFKA_SASL_USERNAME:
      KAFKA_SASL_PASSWORD:
      KAFKA_SCHEMA_REGISTRY_BASIC_AUTH: "false"
      ABI_DIRECTORY: "/app/abi"
    service:
      # this benthos app has the port hardcoded to 4195
      port: 4195
    # benthos app uses a different endpoint for liveness
    livenessProbe:
      httpGet:
        path: /ping


atlas-evm-ccip-exporter:
  <<: *base
  topologySpreadConstraints: []
  name: atlas-evm-ccip-exporter-{{  .network }}
  envVars:
    APP_NAME: atlas-evm-ccip-exporter-{{  .network }}-ccip-exporter
    CHAIN_ID: {{  .chainId }}
    NATIVE_SYMBOL: AVAX
    NETWORK_NAME: {{  .network }}
    KAFKA_LOGS_TOPIC: {{  .network }}_logs
    BLOCKS_KAFKA_BLOCK_HEADERS_TOPIC: {{  .network }}_block_headers
    KAFKA_OCR2_CCIP_COMMIT_TELEMETRY_TOPIC: atlas_{{  .network }}_ocr2_telemetry_ccip_commit_v0
    KAFKA_OCR2_CCIP_EXEC_TELEMETRY_TOPIC: atlas_{{  .network }}_ocr2_telemetry_ccip_exec_v0
    RECEIPTS_KAFKA_RECEIPTS_TOPIC: {{  .network }}_transactions_with_receipts
    KAFKA_CLIENT_ID: atlas-evm-{{  .network }}-ccip-exporter
    KAFKA_GROUP_ID: atlas-evm-{{  .network }}-ccip-exporter
    RPC_ENDPOINTS: {{  .rpcEndpoint }}
    LOG_LEVEL: info
    BENTHOS_CHECKPOINT_LIMIT: "3000"
    BENTHOS_FETCH_BUFFER_CAP: "3000"
    OUTPUT_MAX_RETRIES: "5"
    OUTPUT_BACKOFF_INITIAL_INTERVAL: "500ms"
    OUTPUT_BACKOFF_MAX_INTERVAL: "5s"
    OUTPUT_BACKOFF_MAX_ELAPSED_TIME: "30s"
    TLS_ENABLED: false
    ABI_DIRECTORY: /app/abis
    KAFKA_SCHEMA_REGISTRY_ENABLED: true
    KAFKA_SASL_MECHANISM: "none"
    KAFKA_SASL_USERNAME:
    KAFKA_SASL_PASSWORD:

atlas-evm-ccip:
  <<: *base
  topologySpreadConstraints: []
  name: atlas-evm-ccip-{{  .network }}
  envVars:
    APP_NAME: atlas-evm-ccip-network-{{  .network }}
    BLOCKS_KAFKA_BLOCK_HEADERS_TOPIC: {{  .network }}_block_headers
    CHAIN_ID: {{  .chainId }}
    KAFKA_CLIENT_ID: atlas-evm-{{  .network }}-ccip-network-1-ccip
    KAFKA_GROUP_ID: atlas-evm-{{  .network }}-ccip-network-1-ccip
    KAFKA_LOGS_TOPIC: {{  .network }}_logs
    SOURCE_KAFKA_TOPIC_LOGS: {{  .network }}_logs
    NETWORK_NAME: {{  .network }}
    RECEIPTS_KAFKA_RECEIPTS_TOPIC: {{  .network }}_transactions_with_receipts
    RPC_ENDPOINTS: {{  .rpcEndpoint }}
    LOG_LEVEL: info
    BENTHOS_CHECKPOINT_LIMIT: "3000"
    BENTHOS_FETCH_BUFFER_CAP: "3000"
    OUTPUT_MAX_RETRIES: "50"
    OUTPUT_BACKOFF_INITIAL_INTERVAL: "500ms"
    OUTPUT_BACKOFF_MAX_INTERVAL: "5s"
    OUTPUT_BACKOFF_MAX_ELAPSED_TIME: "0s"
    TLS_ENABLED: false
    KAFKA_START_FROM_OLDEST: true
    KAFKA_SCHEMA_REGISTRY_ENABLED: true
    KAFKA_SECURITY_PROTOCOL: PLAINTEXT
    KAFKA_SASL_MECHANISM: "none"
    KAFKA_SASL_USERNAME:
    KAFKA_SASL_PASSWORD:
    KAFKA_SCHEMA_REGISTRY_BASIC_AUTH: "false"
    ABI_DIRECTORY: "/app/abis"
