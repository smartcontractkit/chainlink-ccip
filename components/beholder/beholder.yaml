version: v2beta1

pipelines:
  beholder:
    run: |-
      create_deployments beholder-configs
      create_deployments beholder-prometheus
      create_deployments beholder-grafana
      create_deployments beholder-loki
      create_deployments beholder-tempo
      create_deployments beholder-redpanda
      create_deployments beholder-otel-collector-agent
      create_deployments beholder-otel-collector-gateway
      create_deployments beholder-test-client

deployments:
  beholder-configs:
    kubectl:
      manifests:
        - ${COMPONENTS_DIR}/beholder/configmaps/prometheus.yaml
        - ${COMPONENTS_DIR}/beholder/configmaps/grafana.yaml
        - ${COMPONENTS_DIR}/beholder/configmaps/loki.yaml
        - ${COMPONENTS_DIR}/beholder/configmaps/tempo.yaml

  beholder-test-client:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      releaseName: beholder-test-client
      displayOutput: true
      chart:
        name: ${CHAINLINK_HELM_REGISTRY_URI}/beholder-test-client
        version: "0.0.3"
      values:
        podSecurityContext:
          fsGroup: 999

        beholder-test-client:
          args:
            - -otel-exporter-grpc-enpoint
            - beholder-otel-collector-agent:4317

  beholder-prometheus:
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: prom/prometheus
            args:
              - "--config.file=/etc/prometheus/config/prometheus.yml"
            volumeMounts:
              - containerPath: /etc/prometheus/config
                volume:
                  name: config-volume
        podSecurityContext:
          fsGroup: 65534
        securityContext:
          runAsUser: 65534
          runAsGroup: 65534
          fsGroup: 65534
        service:
          name: beholder-prometheus
          selector:
            app: beholder-prometheus
          ports:
            - port: 9090
        volumes:
          - name: config-volume
            configMap:
              name: prometheus-config

  beholder-grafana:
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: grafana/grafana
            volumeMounts:
              - containerPath: /etc/grafana/provisioning
                volume:
                  name: config-volume
            env:
              - name: GF_AUTH_ANONYMOUS_ENABLED
                value: "true"
              - name: GF_AUTH_ANONYMOUS_ORG_ROLE
                value: "Admin"
              - name: GF_AUTH_DISABLE_LOGIN_FORM
                value: "true"
              - name: GF_FEATURE_TOGGLES_ENABLE
                value: "traceqlEditor traceQLStreaming metricsSummary"
        volumes:
          - name: config-volume
            configMap:
              name: grafana-config
              items:
                - key: datasources.yml
                  path: datasources/datasources.yml
                - key: main.yml
                  path: dashboards/main.yml
                - key: beholder-demo-dashboard.json
                  path: dashboards/beholder-demo-dashboard.json
        service:
          name: beholder-grafana
          ports:
            - port: 3000
        podSecurityContext:
          fsGroup: 999
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          fsGroup: 999

  beholder-loki:
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: grafana/loki:3.1.0
            args:
              - "--config.file=/etc/loki/config/loki.yml"
            volumeMounts:
              - containerPath: /etc/loki/config
                volume:
                  name: config-volume
        volumes:
          - name: config-volume
            configMap:
              name: loki-config

        service:
          name: beholder-loki
          ports:
            - port: 3100
        podSecurityContext:
          fsGroup: 999
        securityContext:
          runAsUser: 999
          runAsGroup: 999
          fsGroup: 999

  beholder-tempo:
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
          - image: grafana/tempo:2.5.0
            args:
              - "-config.file=/etc/tempo/config/tempo.yml"

            volumeMounts:
              - containerPath: /etc/tempo/config
                volume:
                  name: config-volume
        volumes:
          - name: config-volume
            configMap:
              name: tempo-config

        service:
          name: beholder-tempo
          ports:
            - port: 4317
            - port: 3200
        podSecurityContext:
          fsGroup: 10001
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
          fsGroup: 10001

  beholder-redpanda:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      releaseName: beholder-redpanda
      displayOutput: true
      chart:
        name: redpanda
        repo: https://charts.redpanda.com
        version: "5.9.1"
      values:
        image:
          repository: docker.redpanda.com/redpandadata/redpanda
          tag: 'v24.1.15'
        statefulset:
          replicas: 1
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
          sideCars:
            configWatcher:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
            controllers:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true

        post_install_job:
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
        post_upgrade_job:
          podTemplate:
            spec:
              securityContext:
                capabilities:
                  drop:
                    - ALL
                runAsUser: 999
                runAsGroup: 999
                runAsNonRoot: true
        tls:
          enabled: false
        config:
          cluster:
            auto_create_topics_enabled: true
        external:
          enabled: false
        tuning:
          tune_aio_events: false

  beholder-otel-collector-agent:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      releaseName: beholder-otel-collector-agent
      displayOutput: true
      chart:
        name: opentelemetry-collector
        repo: https://open-telemetry.github.io/opentelemetry-helm-charts
        version: "0.101.2"
      values:
        fullnameOverride: beholder-otel-collector-agent
        mode: deployment
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1001
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        image:
          repository: otel/opentelemetry-collector
          tag: 0.106.1
        config:
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
                http:
                  endpoint: 0.0.0.0:4318
          exporters:
            debug:
              verbosity: detailed
            otlp:
              endpoint: beholder-otel-collector-gateway:4317
              tls:
                insecure: true
          service:
            telemetry:
              logs:
                level: 'debug'
            pipelines:
              traces:
                receivers: [otlp]
                exporters: [debug, otlp]
              metrics:
                receivers: [otlp]
                exporters: [debug, otlp]
              logs:
                receivers: [otlp]
                exporters: [debug, otlp]


  beholder-otel-collector-gateway:
    updateImageTags: false
    namespace: ${DEVSPACE_NAMESPACE}
    helm:
      releaseName: beholder-otel-collector-gateway
      displayOutput: true
      chart:
        name: opentelemetry-collector
        repo: https://open-telemetry.github.io/opentelemetry-helm-charts
        version: "0.101.2"
      values:
        fullnameOverride: beholder-otel-collector-gateway
        mode: deployment
        securityContext:
          allowPrivilegeEscalation: false
          runAsUser: 1001
          runAsNonRoot: true
          capabilities:
            drop:
              - ALL
        image:
          repository: otel/opentelemetry-collector
          tag: 0.106.1
        ports:
          prometheus:
            enabled: true
            containerPort: 8889
            servicePort: 8889
            hostPort: 8889
            protocol: TCP
        config:
          receivers:
            otlp:
              protocols:
                grpc:
                  endpoint: 0.0.0.0:4317
                http:
                  endpoint: 0.0.0.0:4318
            prometheus:
              config:
                scrape_configs:
                  - job_name: 'otel-collector'
                    scrape_interval: 5s
                    static_configs:
                      - targets: ['127.0.0.1:8888']
                  - job_name: 'beholder-demo'
                    scrape_interval: 5s
                    static_configs:
                      - targets: ['beholder-test-client:9091']
          exporters:
            debug:
              verbosity: detailed
            kafka:
              brokers:
                - beholder-redpanda:9093
              topic: beholder-test-client
              encoding: otlp_json
            prometheus:
              endpoint: '0.0.0.0:8889'
          service:
            telemetry:
              logs:
                level: 'debug'
            pipelines:
              traces:
                receivers: [otlp]
                exporters: [debug, kafka]
              metrics:
                receivers: [otlp, prometheus]
                exporters: [debug, kafka, prometheus]
              logs:
                receivers: [otlp]
                exporters: [debug, kafka]

